{"version":3,"sources":["node_modules/browser-pack/_prelude.js","node_modules/pleasejs/dist/Please.js","node_modules/toml/index.js","node_modules/toml/lib/compiler.js","node_modules/toml/lib/parser.js","src/BrowserSLW.js","src/Cursor.js","src/Entity.js","src/Level.js","src/SLW.js","src/Text.js","src/Tile.js","src/index.js","src/levels.toml","src/util.js"],"names":["e","t","n","r","s","o","u","a","require","i","f","Error","code","l","exports","call","length","1","module","define","amd","this","Math","random","floor","max","min","F","HSV_to_HEX","HSV_to_RGB","g","b","console","error","hasOwnProperty","charCodeAt","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgrey","darkgreen","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","grey","green","greenyellow","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgrey","lightgreen","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","tan","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","hue","saturation","value","base_color","greyscale","grayscale","golden","full_random","colors_returned","format","seed","c","scheme_type","h","NAME_to_HEX","toLowerCase","NAME_to_RGB","HEX_to_RGB","NAME_to_HSV","HEX_to_HSV","replace","exec","parseInt","RGB_to_HEX","toString","slice","v","RGB_to_HSV","make_scheme","d","push","abs","make_color","match","m","E","p","make_contrast","parser","compiler","parse","input","nodes","compile","reduce","node","type","assign","setPath","addTableArray","data","genError","err","line","col","ex","column","fullPath","key","currentPath","context","reduceValueNode","pathAssigned","assignedPaths","valueAssignments","path","indexOf","reduceArrayWithTypeChecking","reduceInlineTableNode","values","obj","val","quotedPath","map","quoteDottedString","join","deepRef","filter","Array","newObj","start","keys","traversed","traversedPath","ctx","keysLen","String","array","firstType","str","peg$subclass","child","parent","ctor","constructor","prototype","SyntaxError","message","expected","found","offset","name","peg$computePosDetails","peg$reportedPos","pos","advance","details","startPos","endPos","ch","charAt","seenCR","peg$cachedPos","peg$cachedPosDetails","peg$fail","peg$currPos","peg$maxFailPos","peg$maxFailExpected","peg$buildException","cleanupExpected","sort","description","splice","buildMessage","stringEscape","hex","toUpperCase","expectedDesc","foundDesc","expectedDescs","posDetails","peg$parsestart","s0","s1","s2","cached","peg$cache","nextPos","result","peg$parseline","peg$FAILED","peg$c1","s3","s4","s5","s6","peg$parseS","peg$parseexpression","peg$parsecomment","peg$parseNL","peg$c2","peg$parseEOF","peg$parsepath","peg$parsetablearray","peg$parseassignment","peg$c3","peg$silentFails","peg$c4","peg$c5","peg$c6","peg$c7","peg$c8","peg$parsetable_key","peg$c9","peg$c10","peg$c11","s7","peg$c12","peg$parsedot_ended_table_key_part","peg$parsetable_key_part","peg$c13","peg$c14","peg$parsekey","peg$c15","peg$parsequoted_key","peg$c16","peg$c17","peg$c18","peg$c19","peg$parsevalue","peg$c20","peg$parseASCII_BASIC","peg$c21","peg$c22","peg$c23","peg$parseESCAPED","peg$c24","peg$parsestring","peg$parsedatetime","peg$parsefloat","peg$parseinteger","peg$parseboolean","peg$parsearray","peg$parseinline_table","substr","peg$c25","peg$c26","peg$c27","peg$parsemultiline_string_char","peg$c28","peg$parsestring_char","peg$c29","peg$c30","peg$parsemultiline_literal_char","peg$c31","peg$c32","peg$parseliteral_char","peg$c33","peg$c34","peg$parsemultiline_string_delim","peg$c35","peg$parseNLS","peg$c36","peg$parsefloat_text","peg$parseinteger_text","peg$c37","peg$c38","peg$c39","peg$c40","peg$c41","peg$c42","peg$c43","peg$c44","peg$parseDIGITS","peg$c45","peg$c46","peg$c47","peg$c48","peg$c49","peg$parseDIGIT_OR_UNDER","peg$c50","peg$c51","peg$c52","peg$c53","peg$c54","peg$c55","peg$parsearray_sep","peg$c56","peg$parsearray_value","peg$c57","peg$parsearray_value_list","peg$c58","peg$c59","peg$c60","peg$c61","peg$c62","peg$c63","peg$c64","peg$parseinline_table_assignment","peg$c65","peg$c66","peg$c67","s8","s9","s10","peg$c68","peg$parsesecfragment","peg$c69","peg$parsedate","s11","peg$c70","peg$parsetime","peg$c71","peg$c72","peg$c73","peg$parsetime_with_offset","s12","s13","s14","s15","s16","peg$c74","peg$c75","peg$c76","peg$c77","peg$c78","peg$c79","peg$c80","test","peg$c81","peg$c82","peg$c83","peg$c84","peg$c85","peg$parseHEX","peg$c86","peg$c87","peg$c88","peg$c89","peg$c90","peg$c91","peg$c92","peg$c93","peg$c94","peg$c95","peg$c96","peg$c97","peg$c98","peg$c99","peg$c100","peg$c101","peg$c102","peg$c103","peg$c104","peg$c105","peg$c106","peg$c107","peg$c108","peg$c109","peg$c110","peg$c111","peg$c112","peg$c113","peg$c114","peg$c115","peg$c116","peg$parseESCAPED_UNICODE","peg$c117","peg$c118","peg$c119","peg$c120","peg$c121","addNode","convertCodePoint","num","isFinite","fromCodePoint","highSurrogate","lowSurrogate","MAX_SIZE","codeUnits","index","arguments","codePoint","Number","fromCharCode","apply","peg$result","options","peg$startRuleFunctions","peg$startRuleFunction","parts","concat","chars","char","left","right","parseFloat","text","digits","date","time","Date","startRule","_SLW","_Tile","_util","BrowserSLW","game","_classCallCheck","header","document","getElementById","editorToggle","addToggle","_Toggle","_class","_possibleConstructorReturn","__proto__","Object","getPrototypeOf","_inherits","_createClass","setTitle","setChecked","setDisabled","el","checked","tiles","tileEls","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_loop","tileid","tile","_Tile2","default","get","img","crop","level","tileset","size","texPosition","classList","add","addEventListener","evt","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","Symbol","iterator","next","done","tileEl","remove","return","tileToPaint","appendChild","_iterator","click","innerHTML","editorEnabled","Toggle","events","_ref","meta","special","includes","_Toggle2","_class2","load","gamepadSupport","save","gamepadEnabled","toggleClass","toggle","toggles","querySelector","btn","_this3","createElement","onCreate","window","onDestroy","newChecked","onCheckedChanged","newDisabled","disabled","setAttribute","removeAttribute","newTitle","firstChild","removeChild","createTextNode","localStorage","Cursor","scale","down","image","Image","src","_this","rect","getBoundingClientRect","clientX","clientY","top","x","y","centeredX","width","centeredY","height","drawImage","isJump","isYes","_Level","_Text","DEBUG","GRAVITY","Entity","sprite","sheet","position","positionType","z","xv","yv","w","color","stop","round","sign","touchingWallRight","touchingWallLeft","_i","grounded","collides","ceil","tilesAbove","onAirPunch","destroy","pickTiles","_tile","onTouch","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_step3","_iterator3","tilesBelow","_tile2","onStand","_iteratorNormalCompletion4","_didIteratorError4","_iteratorError4","_step4","_iterator4","entityCollides","entity","canvas","getContext","CanvasRenderingContext2D","fillStyle","fillRect","_Text2","write","bottom","_ref2","_slicedToArray","shouldReturnTiles","tileLeft","tileRight","tileTop","tileBottom","collision","tileAt","solid","px","py","entities","_iteratorNormalCompletion5","_didIteratorError5","_iteratorError5","_step5","_iterator5","by","some","solidTop","Player","spriteAnimation","dir","anim","oldAnim","nextFrame","state","jumpSound","Audio","errorSound","startLevelSound","moveLevelSound","mapMotion","levelMotion","_get","wantsInput","walkSpeed","on","tileX","tileY","isInteger","lastOn","_on$texPosition","lv","id","levelid","levels","newLevel","_Level2","changeLevel","tick","play","mayJump","lastJump","now","up","world","_iteratorNormalCompletion6","_didIteratorError6","_iteratorError6","_step6","_iterator6","tilemap","row","_iteratorNormalCompletion7","_didIteratorError7","_iteratorError7","_step7","_iterator7","Powerup","Goomba","_this2","getSound","initSound","Mushroom","_ref3","_len","args","_key","_this4","_toConsumableArray","Sign","_this5","Coin","_this6","coinSound","HalfwayFlag","_this7","frame","MUSIC_VOLUMES","airship","athletic","beach","castle","ice-cave","file-select","flower-gardens","grassland","jungle","kapper-valley","star-world","underwater-underworld","water","underground","Level","leveldata","rows","split","exists","music","volume","loop","pause","onUpdate","viewStartX","camera","viewStartY","viewEndX","viewEndY","_getAbsolutePosition","getAbsolutePosition","_getAbsolutePosition2","rendX","rendY","_tile$texPosition","dx","dy","newTile","_ref4","oldTile","onNearbyReplace","_ref6","_ref5","_Cursor","_Entity","BG_COLORS","clouds","hills","BG_REPEATS","SLW","EventController","registerEvent","keyCode","which","player","cameraInEditor","cursor","_Cursor2","watchMouse","lastPlacePos","navigator","background","gamepads","getGamepads","newest","gamepad","connected","timestamp","pad","buttons","pressed","axes","warn","minY","maxY","minX","maxX","CAM_SPD","wave","sin","lag","forEach","update","oldLevel","create","dispatchEvent","tx","ty","translate","ptrn","bg","createPattern","restore","draw","tileOn","metaOf","_cursor$pos","cursorX","cursorY","roundTileX","roundTileY","cursorTileX","cursorTileY","drawUsingCtx","tilePos","arrEqual","replaceTile","Text","TypeError","tint","set","A","B","C","D","G","H","I","J","K","L","M","N","O","P","Q","R","S","T","U","V","W","X","Y","Z","j","k","q","?","!",".","'","(",")","#"," ","-","0","2","3","4","5","6","7","8","9","Tile","props","RangeError","Map","GroundTile","updateTexture","topTile","bottomTile","leftTile","rightTile","topLeftTile","topRightTile","bottomLeftTile","bottomRightTile","topLeft","topRight","bottomLeft","bottomRight","PipeTile","_Tile3","QBlockTile","usedBlock","_game$level$getAbsolu","_game$level$getAbsolu2","shroom","_Tile4","UsedBlockTile","snd","_Tile5","InvisibleBlockTile","_Tile6","DonutTile","fallVelocity","fallCountdown","falling","lastStoodOn","rnd","_Tile7","AirTile","foliage","what","_Tile8","CloudTile","_Tile9","CoinTile","_this9","coin","_game$level$getAbsolu3","_game$level$getAbsolu4","_Tile10","PlayerTile","_game$level$getAbsolu5","_game$level$getAbsolu6","_Tile11","SignTile","_game$level$getAbsolu7","_game$level$getAbsolu8","_Tile12","HalfwayFlagTile","_game$level$getAbsolu9","_game$level$getAbsolu10","_Tile13","GoombaTile","goomba","_game$level$getAbsolu11","_game$level$getAbsolu12","_Tile14","DeathZoneTile","_Tile15","WorldWaterTile","_this15","_Tile16","WorldGroundTile","_this16","_Tile17","WorldPlayerTile","_game$level$getAbsolu13","_game$level$getAbsolu14","_Tile18","WorldFenceTile","_this18","_Tile19","WorldFlowerTile","_this19","_Tile20","WorldPipeTile","_Tile21","WorldHouseTile","_Tile22","WorldPathTile","_Tile23","WorldLevelTile","_this23","complete","_Tile24","WorldLevel1Tile","_Tile25","WorldLevel2Tile","_Tile26","WorldLevel3Tile","_Tile27","WorldLevel4Tile","_Tile28","WorldLevel5Tile","_Tile29","WorldLevel6Tile","_Tile30","WorldLevel7Tile","_Tile31","WorldLevel8Tile","_BrowserSLW","onload","_SLW2","browser","_BrowserSLW2","body","focus","render","gamepadInput","hasFocus","cameraUpdate","entityUpdate","canvasClear","requestAnimationFrame","arr1","arr2","colour","operation","alpha","globalCompositeOperation","globalAlpha","res","toDataURL","ox","oy","toml","listeners","eventName","callback","has","eventListeners"],"mappings":"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","file":"index.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","/*!Please JS v0.4.2, Jordan Checkman 2014, Checkman.io, MIT License, Have fun.*/\n!function(e,r,a){\"function\"==typeof define&&define.amd?define([],a):\"object\"==typeof exports?module.exports=a():r[e]=a()}(\"Please\",this,function(){\"use strict\";function e(){function e(e,r,a){var o=Math.random;return a instanceof l&&(o=a.random),Math.floor(o()*(r-e+1))+e}function r(e,r,a){var o=Math.random;return a instanceof l&&(o=a.random),o()*(r-e)+e}function a(e,r,a){return Math.max(r,Math.min(e,a))}function o(e,r){var a;switch(e){case\"hex\":for(a=0;a<r.length;a++)r[a]=F.HSV_to_HEX(r[a]);break;case\"rgb\":for(a=0;a<r.length;a++)r[a]=F.HSV_to_RGB(r[a]);break;case\"rgb-string\":for(a=0;a<r.length;a++){var o=F.HSV_to_RGB(r[a]);r[a]=\"rgb(\"+o.r+\",\"+o.g+\",\"+o.b+\")\"}break;case\"hsv\":break;default:console.error(\"Format not recognized.\")}return r}function n(e){var r=F.HSV_to_RGB(e),a=(299*r.r+587*r.g+114*r.b)/1e3;return a>=128?\"dark\":\"light\"}function t(e){var r={};for(var a in e)e.hasOwnProperty(a)&&(r[a]=e[a]);return r}function l(e){function r(){o=(o+1)%256,n=(n+a[o])%256;var e=a[o];return a[o]=a[n],a[n]=e,a[(a[o]+a[n])%256]}for(var a=[],o=0,n=0,t=0;256>t;t++)a[t]=t;for(var l=0,F=0;256>l;l++){F=(F+a[l]+e.charCodeAt(l%e.length))%256;var s=a[l];a[l]=a[F],a[F]=s}this.random=function(){for(var e=0,a=0,o=1;8>e;e++)a+=r()*o,o*=256;return a/0x10000000000000000}}var F={},s={aliceblue:\"F0F8FF\",antiquewhite:\"FAEBD7\",aqua:\"00FFFF\",aquamarine:\"7FFFD4\",azure:\"F0FFFF\",beige:\"F5F5DC\",bisque:\"FFE4C4\",black:\"000000\",blanchedalmond:\"FFEBCD\",blue:\"0000FF\",blueviolet:\"8A2BE2\",brown:\"A52A2A\",burlywood:\"DEB887\",cadetblue:\"5F9EA0\",chartreuse:\"7FFF00\",chocolate:\"D2691E\",coral:\"FF7F50\",cornflowerblue:\"6495ED\",cornsilk:\"FFF8DC\",crimson:\"DC143C\",cyan:\"00FFFF\",darkblue:\"00008B\",darkcyan:\"008B8B\",darkgoldenrod:\"B8860B\",darkgray:\"A9A9A9\",darkgrey:\"A9A9A9\",darkgreen:\"006400\",darkkhaki:\"BDB76B\",darkmagenta:\"8B008B\",darkolivegreen:\"556B2F\",darkorange:\"FF8C00\",darkorchid:\"9932CC\",darkred:\"8B0000\",darksalmon:\"E9967A\",darkseagreen:\"8FBC8F\",darkslateblue:\"483D8B\",darkslategray:\"2F4F4F\",darkslategrey:\"2F4F4F\",darkturquoise:\"00CED1\",darkviolet:\"9400D3\",deeppink:\"FF1493\",deepskyblue:\"00BFFF\",dimgray:\"696969\",dimgrey:\"696969\",dodgerblue:\"1E90FF\",firebrick:\"B22222\",floralwhite:\"FFFAF0\",forestgreen:\"228B22\",fuchsia:\"FF00FF\",gainsboro:\"DCDCDC\",ghostwhite:\"F8F8FF\",gold:\"FFD700\",goldenrod:\"DAA520\",gray:\"808080\",grey:\"808080\",green:\"008000\",greenyellow:\"ADFF2F\",honeydew:\"F0FFF0\",hotpink:\"FF69B4\",indianred:\"CD5C5C\",indigo:\"4B0082\",ivory:\"FFFFF0\",khaki:\"F0E68C\",lavender:\"E6E6FA\",lavenderblush:\"FFF0F5\",lawngreen:\"7CFC00\",lemonchiffon:\"FFFACD\",lightblue:\"ADD8E6\",lightcoral:\"F08080\",lightcyan:\"E0FFFF\",lightgoldenrodyellow:\"FAFAD2\",lightgray:\"D3D3D3\",lightgrey:\"D3D3D3\",lightgreen:\"90EE90\",lightpink:\"FFB6C1\",lightsalmon:\"FFA07A\",lightseagreen:\"20B2AA\",lightskyblue:\"87CEFA\",lightslategray:\"778899\",lightslategrey:\"778899\",lightsteelblue:\"B0C4DE\",lightyellow:\"FFFFE0\",lime:\"00FF00\",limegreen:\"32CD32\",linen:\"FAF0E6\",magenta:\"FF00FF\",maroon:\"800000\",mediumaquamarine:\"66CDAA\",mediumblue:\"0000CD\",mediumorchid:\"BA55D3\",mediumpurple:\"9370D8\",mediumseagreen:\"3CB371\",mediumslateblue:\"7B68EE\",mediumspringgreen:\"00FA9A\",mediumturquoise:\"48D1CC\",mediumvioletred:\"C71585\",midnightblue:\"191970\",mintcream:\"F5FFFA\",mistyrose:\"FFE4E1\",moccasin:\"FFE4B5\",navajowhite:\"FFDEAD\",navy:\"000080\",oldlace:\"FDF5E6\",olive:\"808000\",olivedrab:\"6B8E23\",orange:\"FFA500\",orangered:\"FF4500\",orchid:\"DA70D6\",palegoldenrod:\"EEE8AA\",palegreen:\"98FB98\",paleturquoise:\"AFEEEE\",palevioletred:\"D87093\",papayawhip:\"FFEFD5\",peachpuff:\"FFDAB9\",peru:\"CD853F\",pink:\"FFC0CB\",plum:\"DDA0DD\",powderblue:\"B0E0E6\",purple:\"800080\",rebeccapurple:\"663399\",red:\"FF0000\",rosybrown:\"BC8F8F\",royalblue:\"4169E1\",saddlebrown:\"8B4513\",salmon:\"FA8072\",sandybrown:\"F4A460\",seagreen:\"2E8B57\",seashell:\"FFF5EE\",sienna:\"A0522D\",silver:\"C0C0C0\",skyblue:\"87CEEB\",slateblue:\"6A5ACD\",slategray:\"708090\",slategrey:\"708090\",snow:\"FFFAFA\",springgreen:\"00FF7F\",steelblue:\"4682B4\",tan:\"D2B48C\",teal:\"008080\",thistle:\"D8BFD8\",tomato:\"FF6347\",turquoise:\"40E0D0\",violet:\"EE82EE\",wheat:\"F5DEB3\",white:\"FFFFFF\",whitesmoke:\"F5F5F5\",yellow:\"FFFF00\",yellowgreen:\"9ACD32\"},i=.618033988749895,u={hue:null,saturation:null,value:null,base_color:\"\",greyscale:!1,grayscale:!1,golden:!0,full_random:!1,colors_returned:1,format:\"hex\",seed:null},c={scheme_type:\"analogous\",format:\"hex\"},h={golden:!1,format:\"hex\"};return F.NAME_to_HEX=function(e){return e=e.toLowerCase(),e in s?s[e]:(console.error(\"Color name not recognized.\"),void 0)},F.NAME_to_RGB=function(e){return F.HEX_to_RGB(F.NAME_to_HEX(e))},F.NAME_to_HSV=function(e){return F.HEX_to_HSV(F.NAME_to_HEX(e))},F.HEX_to_RGB=function(e){var r=/^#?([a-f\\d])([a-f\\d])([a-f\\d])$/i;e=e.replace(r,function(e,r,a,o){return r+r+a+a+o+o});var a=/^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(e);return a?{r:parseInt(a[1],16),g:parseInt(a[2],16),b:parseInt(a[3],16)}:null},F.RGB_to_HEX=function(e){return\"#\"+((1<<24)+(e.r<<16)+(e.g<<8)+e.b).toString(16).slice(1)},F.HSV_to_RGB=function(e){var r,a,o,n,t,l,F,s,i=e.h,u=e.s,c=e.v;if(0===u)return{r:c,g:c,b:c};switch(i/=60,n=Math.floor(i),t=i-n,l=c*(1-u),F=c*(1-u*t),s=c*(1-u*(1-t)),n){case 0:r=c,a=s,o=l;break;case 1:r=F,a=c,o=l;break;case 2:r=l,a=c,o=s;break;case 3:r=l,a=F,o=c;break;case 4:r=s,a=l,o=c;break;case 5:r=c,a=l,o=F}return{r:Math.floor(255*r),g:Math.floor(255*a),b:Math.floor(255*o)}},F.RGB_to_HSV=function(e){var r=e.r/255,a=e.g/255,o=e.b/255,n=0,t=0,l=0,F=Math.min(r,Math.min(a,o)),s=Math.max(r,Math.max(a,o));if(F===s)return l=F,{h:0,s:0,v:l};var i=r===F?a-o:o===F?r-a:o-r,u=r===F?3:o===F?1:5;return n=60*(u-i/(s-F)),t=(s-F)/s,l=s,{h:n,s:t,v:l}},F.HSV_to_HEX=function(e){return F.RGB_to_HEX(F.HSV_to_RGB(e))},F.HEX_to_HSV=function(e){return F.RGB_to_HSV(F.HEX_to_RGB(e))},F.make_scheme=function(e,r){function n(e){return{h:e.h,s:e.s,v:e.v}}var l,F,s,i,u,h=t(c);if(null!==r)for(var d in r)r.hasOwnProperty(d)&&(h[d]=r[d]);var g=[e];switch(h.scheme_type.toLowerCase()){case\"monochromatic\":case\"mono\":for(u=1;2>=u;u++)l=n(e),s=l.s+.1*u,s=a(s,0,1),i=l.v+.1*u,i=a(i,0,1),l.s=s,l.v=i,g.push(l);for(u=1;2>=u;u++)l=n(e),s=l.s-.1*u,s=a(s,0,1),i=l.v-.1*u,i=a(i,0,1),l.s=s,l.v=i,g.push(l);break;case\"complementary\":case\"complement\":case\"comp\":l=n(e),l.h=(l.h+180)%360,g.push(l);break;case\"split-complementary\":case\"split-complement\":case\"split\":l=n(e),l.h=(l.h+165)%360,g.push(l),l=n(e),l.h=Math.abs((l.h-165)%360),g.push(l);break;case\"double-complementary\":case\"double-complement\":case\"double\":l=n(e),l.h=(l.h+180)%360,g.push(l),l.h=(l.h+30)%360,F=n(l),g.push(l),l.h=(l.h+180)%360,g.push(F);break;case\"analogous\":case\"ana\":for(u=1;5>=u;u++)l=n(e),l.h=(l.h+20*u)%360,g.push(l);break;case\"triadic\":case\"triad\":case\"tri\":for(u=1;3>u;u++)l=n(e),l.h=(l.h+120*u)%360,g.push(l);break;default:console.error(\"Color scheme not recognized.\")}return o(h.format.toLowerCase(),g),g},F.make_color=function(n){var s=[],c=t(u),h=null;if(null!==n)for(var d in n)n.hasOwnProperty(d)&&(c[d]=n[d]);var g=null;\"string\"==typeof c.seed&&(g=new l(c.seed)),c.base_color.length>0&&(h=c.base_color.match(/^#?([0-9a-f]{3})([0-9a-f]{3})?$/i)?F.HEX_to_HSV(c.base_color):F.NAME_to_HSV(c.base_color));for(var m=0;m<c.colors_returned;m++){var f,E,b,p=e(0,360,g);null!==h?(f=a(e(h.h-5,h.h+5,g),0,360),E=0===h.s?0:r(.4,.85,g),b=r(.4,.85,g),s.push({h:f,s:E,v:b})):(f=c.greyscale===!0||c.grayscale===!0?0:c.golden===!0?(p+p/i)%360:null===c.hue||c.full_random===!0?p:a(c.hue,0,360),E=c.greyscale===!0||c.grayscale===!0?0:c.full_random===!0?r(0,1,g):null===c.saturation?.4:a(c.saturation,0,1),b=c.full_random===!0?r(0,1,g):c.greyscale===!0||c.grayscale===!0?r(.15,.75,g):null===c.value?.75:a(c.value,0,1),s.push({h:f,s:E,v:b}))}return o(c.format.toLowerCase(),s),s},F.make_contrast=function(e,r){var l=t(h);if(null!==r)for(var s in r)r.hasOwnProperty(s)&&(l[s]=r[s]);var u,c,d=n(e);if(l.golden===!0)c=e.h*(1+i)%360;else{var g=F.make_scheme(e,{scheme_type:\"complementary\",format:\"hsv\"})[1];c=a(g.h-30,0,360)}var m;return\"dark\"===d?m=a(e.v-.25,0,1):\"light\"===d&&(m=a(e.v+.25,0,1)),u=[{h:c,s:e.s,v:m}],o(l.format.toLowerCase(),u),u[0]},F}return e()});","var parser = require('./lib/parser');\nvar compiler = require('./lib/compiler');\n\nmodule.exports = {\n  parse: function(input) {\n    var nodes = parser.parse(input.toString());\n    return compiler.compile(nodes);\n  }\n};\n","function compile(nodes) {\n  \"use strict\";\n  var assignedPaths = [];\n  var valueAssignments = [];\n  var currentPath = \"\";\n  var data = {};\n  var context = data;\n  var arrayMode = false;\n\n  return reduce(nodes);\n\n  function reduce(nodes) {\n    var node;\n    for (var i in nodes) {\n      node = nodes[i];\n      switch (node.type) {\n      case \"Assign\":\n        assign(node);\n        break;\n      case \"ObjectPath\":\n        setPath(node);\n        break;\n      case \"ArrayPath\":\n        addTableArray(node);\n        break;\n      }\n    }\n\n    return data;\n  }\n\n  function genError(err, line, col) {\n    var ex = new Error(err);\n    ex.line = line;\n    ex.column = col;\n    throw ex;\n  }\n\n  function assign(node) {\n    var key = node.key;\n    var value = node.value;\n    var line = node.line;\n    var column = node.column;\n\n    var fullPath;\n    if (currentPath) {\n      fullPath = currentPath + \".\" + key;\n    } else {\n      fullPath = key;\n    }\n    if (typeof context[key] !== \"undefined\") {\n      genError(\"Cannot redefine existing key '\" + fullPath + \"'.\", line, column);\n    }\n\n    context[key] = reduceValueNode(value);\n\n    if (!pathAssigned(fullPath)) {\n      assignedPaths.push(fullPath);\n      valueAssignments.push(fullPath);\n    }\n  }\n\n\n  function pathAssigned(path) {\n    return assignedPaths.indexOf(path) !== -1;\n  }\n\n  function reduceValueNode(node) {\n    if (node.type === \"Array\") {\n      return reduceArrayWithTypeChecking(node.value);\n    } else if (node.type === \"InlineTable\") {\n      return reduceInlineTableNode(node.value);\n    } else {\n      return node.value;\n    }\n  }\n\n  function reduceInlineTableNode(values) {\n    var obj = {};\n    for (var i = 0; i < values.length; i++) {\n      var val = values[i];\n      if (val.value.type === \"InlineTable\") {\n        obj[val.key] = reduceInlineTableNode(val.value.value);\n      } else if (val.type === \"InlineTableValue\") {\n        obj[val.key] = reduceValueNode(val.value);\n      }\n    }\n\n    return obj;\n  }\n\n  function setPath(node) {\n    var path = node.value;\n    var quotedPath = path.map(quoteDottedString).join(\".\");\n    var line = node.line;\n    var column = node.column;\n\n    if (pathAssigned(quotedPath)) {\n      genError(\"Cannot redefine existing key '\" + path + \"'.\", line, column);\n    }\n    assignedPaths.push(quotedPath);\n    context = deepRef(data, path, {}, line, column);\n    currentPath = path;\n  }\n\n  function addTableArray(node) {\n    var path = node.value;\n    var quotedPath = path.map(quoteDottedString).join(\".\");\n    var line = node.line;\n    var column = node.column;\n\n    if (!pathAssigned(quotedPath)) {\n      assignedPaths.push(quotedPath);\n    }\n    assignedPaths = assignedPaths.filter(function(p) {\n      return p.indexOf(quotedPath) !== 0;\n    });\n    assignedPaths.push(quotedPath);\n    context = deepRef(data, path, [], line, column);\n    currentPath = quotedPath;\n\n    if (context instanceof Array) {\n      var newObj = {};\n      context.push(newObj);\n      context = newObj;\n    } else {\n      genError(\"Cannot redefine existing key '\" + path + \"'.\", line, column);\n    }\n  }\n\n  // Given a path 'a.b.c', create (as necessary) `start.a`,\n  // `start.a.b`, and `start.a.b.c`, assigning `value` to `start.a.b.c`.\n  // If `a` or `b` are arrays and have items in them, the last item in the\n  // array is used as the context for the next sub-path.\n  function deepRef(start, keys, value, line, column) {\n    var key;\n    var traversed = [];\n    var traversedPath = \"\";\n    var path = keys.join(\".\");\n    var ctx = start;\n    var keysLen = keys.length;\n\n    for (var i in keys) {\n      key = keys[i];\n      traversed.push(key);\n      traversedPath = traversed.join(\".\");\n      if (typeof ctx[key] === \"undefined\") {\n        if (i === String(keysLen - 1)) {\n          ctx[key] = value;\n        } else {\n          ctx[key] = {};\n        }\n      } else if (i !== keysLen - 1 && valueAssignments.indexOf(traversedPath) > -1) {\n        // already a non-object value at key, can't be used as part of a new path\n        genError(\"Cannot redefine existing key '\" + traversedPath + \"'.\", line, column);\n      }\n\n      ctx = ctx[key];\n      if (ctx instanceof Array && ctx.length && i < keys.length - 1) {\n        ctx = ctx[ctx.length - 1];\n      }\n    }\n\n    return ctx;\n  }\n\n  function reduceArrayWithTypeChecking(array) {\n    // Ensure that all items in the array are of the same type\n    var firstType = null;\n    for(var i in array) {\n      var node = array[i];\n      if (firstType === null) {\n        firstType = node.type;\n      } else {\n        if (node.type !== firstType) {\n          genError(\"Cannot add value of type \" + node.type + \" to array of type \" +\n            firstType + \".\", node.line, node.column);\n        }\n      }\n    }\n\n    // Recursively reduce array of nodes into array of the nodes' values\n    return array.map(reduceValueNode);\n  }\n\n  function quoteDottedString(str) {\n    if (str.indexOf(\".\") > -1) {\n      return \"\\\"\" + str + \"\\\"\";\n    } else {\n      return str;\n    }\n  }\n}\n\nmodule.exports = {\n  compile: compile\n};\n","module.exports = (function() {\n  /*\n   * Generated by PEG.js 0.8.0.\n   *\n   * http://pegjs.majda.cz/\n   */\n\n  function peg$subclass(child, parent) {\n    function ctor() { this.constructor = child; }\n    ctor.prototype = parent.prototype;\n    child.prototype = new ctor();\n  }\n\n  function SyntaxError(message, expected, found, offset, line, column) {\n    this.message  = message;\n    this.expected = expected;\n    this.found    = found;\n    this.offset   = offset;\n    this.line     = line;\n    this.column   = column;\n\n    this.name     = \"SyntaxError\";\n  }\n\n  peg$subclass(SyntaxError, Error);\n\n  function parse(input) {\n    var options = arguments.length > 1 ? arguments[1] : {},\n\n        peg$FAILED = {},\n\n        peg$startRuleFunctions = { start: peg$parsestart },\n        peg$startRuleFunction  = peg$parsestart,\n\n        peg$c0 = [],\n        peg$c1 = function() { return nodes },\n        peg$c2 = peg$FAILED,\n        peg$c3 = \"#\",\n        peg$c4 = { type: \"literal\", value: \"#\", description: \"\\\"#\\\"\" },\n        peg$c5 = void 0,\n        peg$c6 = { type: \"any\", description: \"any character\" },\n        peg$c7 = \"[\",\n        peg$c8 = { type: \"literal\", value: \"[\", description: \"\\\"[\\\"\" },\n        peg$c9 = \"]\",\n        peg$c10 = { type: \"literal\", value: \"]\", description: \"\\\"]\\\"\" },\n        peg$c11 = function(name) { addNode(node('ObjectPath', name, line, column)) },\n        peg$c12 = function(name) { addNode(node('ArrayPath', name, line, column)) },\n        peg$c13 = function(parts, name) { return parts.concat(name) },\n        peg$c14 = function(name) { return [name] },\n        peg$c15 = function(name) { return name },\n        peg$c16 = \".\",\n        peg$c17 = { type: \"literal\", value: \".\", description: \"\\\".\\\"\" },\n        peg$c18 = \"=\",\n        peg$c19 = { type: \"literal\", value: \"=\", description: \"\\\"=\\\"\" },\n        peg$c20 = function(key, value) { addNode(node('Assign', value, line, column, key)) },\n        peg$c21 = function(chars) { return chars.join('') },\n        peg$c22 = \"\\\"\",\n        peg$c23 = { type: \"literal\", value: \"\\\"\", description: \"\\\"\\\\\\\"\\\"\" },\n        peg$c24 = function(char) { return char },\n        peg$c25 = \"\\\"\\\"\\\"\",\n        peg$c26 = { type: \"literal\", value: \"\\\"\\\"\\\"\", description: \"\\\"\\\\\\\"\\\\\\\"\\\\\\\"\\\"\" },\n        peg$c27 = null,\n        peg$c28 = function(chars) { return node('String', chars.join(''), line, column) },\n        peg$c29 = \"'''\",\n        peg$c30 = { type: \"literal\", value: \"'''\", description: \"\\\"'''\\\"\" },\n        peg$c31 = \"'\",\n        peg$c32 = { type: \"literal\", value: \"'\", description: \"\\\"'\\\"\" },\n        peg$c33 = \"\\\\\",\n        peg$c34 = { type: \"literal\", value: \"\\\\\", description: \"\\\"\\\\\\\\\\\"\" },\n        peg$c35 = function(char) { return char},\n        peg$c36 = function() { return '' },\n        peg$c37 = \"e\",\n        peg$c38 = { type: \"literal\", value: \"e\", description: \"\\\"e\\\"\" },\n        peg$c39 = \"E\",\n        peg$c40 = { type: \"literal\", value: \"E\", description: \"\\\"E\\\"\" },\n        peg$c41 = function(left, right) { return node('Float', parseFloat(left + 'e' + right), line, column) },\n        peg$c42 = function(text) { return node('Float', parseFloat(text), line, column) },\n        peg$c43 = \"+\",\n        peg$c44 = { type: \"literal\", value: \"+\", description: \"\\\"+\\\"\" },\n        peg$c45 = function(digits) { return digits.join('') },\n        peg$c46 = \"-\",\n        peg$c47 = { type: \"literal\", value: \"-\", description: \"\\\"-\\\"\" },\n        peg$c48 = function(digits) { return '-' + digits.join('') },\n        peg$c49 = function(text) { return node('Integer', parseInt(text, 10), line, column) },\n        peg$c50 = \"true\",\n        peg$c51 = { type: \"literal\", value: \"true\", description: \"\\\"true\\\"\" },\n        peg$c52 = function() { return node('Boolean', true, line, column) },\n        peg$c53 = \"false\",\n        peg$c54 = { type: \"literal\", value: \"false\", description: \"\\\"false\\\"\" },\n        peg$c55 = function() { return node('Boolean', false, line, column) },\n        peg$c56 = function() { return node('Array', [], line, column) },\n        peg$c57 = function(value) { return node('Array', value ? [value] : [], line, column) },\n        peg$c58 = function(values) { return node('Array', values, line, column) },\n        peg$c59 = function(values, value) { return node('Array', values.concat(value), line, column) },\n        peg$c60 = function(value) { return value },\n        peg$c61 = \",\",\n        peg$c62 = { type: \"literal\", value: \",\", description: \"\\\",\\\"\" },\n        peg$c63 = \"{\",\n        peg$c64 = { type: \"literal\", value: \"{\", description: \"\\\"{\\\"\" },\n        peg$c65 = \"}\",\n        peg$c66 = { type: \"literal\", value: \"}\", description: \"\\\"}\\\"\" },\n        peg$c67 = function(values) { return node('InlineTable', values, line, column) },\n        peg$c68 = function(key, value) { return node('InlineTableValue', value, line, column, key) },\n        peg$c69 = function(digits) { return \".\" + digits },\n        peg$c70 = function(date) { return  date.join('') },\n        peg$c71 = \":\",\n        peg$c72 = { type: \"literal\", value: \":\", description: \"\\\":\\\"\" },\n        peg$c73 = function(time) { return time.join('') },\n        peg$c74 = \"T\",\n        peg$c75 = { type: \"literal\", value: \"T\", description: \"\\\"T\\\"\" },\n        peg$c76 = \"Z\",\n        peg$c77 = { type: \"literal\", value: \"Z\", description: \"\\\"Z\\\"\" },\n        peg$c78 = function(date, time) { return node('Date', new Date(date + \"T\" + time + \"Z\"), line, column) },\n        peg$c79 = function(date, time) { return node('Date', new Date(date + \"T\" + time), line, column) },\n        peg$c80 = /^[ \\t]/,\n        peg$c81 = { type: \"class\", value: \"[ \\\\t]\", description: \"[ \\\\t]\" },\n        peg$c82 = \"\\n\",\n        peg$c83 = { type: \"literal\", value: \"\\n\", description: \"\\\"\\\\n\\\"\" },\n        peg$c84 = \"\\r\",\n        peg$c85 = { type: \"literal\", value: \"\\r\", description: \"\\\"\\\\r\\\"\" },\n        peg$c86 = /^[0-9a-f]/i,\n        peg$c87 = { type: \"class\", value: \"[0-9a-f]i\", description: \"[0-9a-f]i\" },\n        peg$c88 = /^[0-9]/,\n        peg$c89 = { type: \"class\", value: \"[0-9]\", description: \"[0-9]\" },\n        peg$c90 = \"_\",\n        peg$c91 = { type: \"literal\", value: \"_\", description: \"\\\"_\\\"\" },\n        peg$c92 = function() { return \"\" },\n        peg$c93 = /^[A-Za-z0-9_\\-]/,\n        peg$c94 = { type: \"class\", value: \"[A-Za-z0-9_\\\\-]\", description: \"[A-Za-z0-9_\\\\-]\" },\n        peg$c95 = function(d) { return d.join('') },\n        peg$c96 = \"\\\\\\\"\",\n        peg$c97 = { type: \"literal\", value: \"\\\\\\\"\", description: \"\\\"\\\\\\\\\\\\\\\"\\\"\" },\n        peg$c98 = function() { return '\"'  },\n        peg$c99 = \"\\\\\\\\\",\n        peg$c100 = { type: \"literal\", value: \"\\\\\\\\\", description: \"\\\"\\\\\\\\\\\\\\\\\\\"\" },\n        peg$c101 = function() { return '\\\\' },\n        peg$c102 = \"\\\\b\",\n        peg$c103 = { type: \"literal\", value: \"\\\\b\", description: \"\\\"\\\\\\\\b\\\"\" },\n        peg$c104 = function() { return '\\b' },\n        peg$c105 = \"\\\\t\",\n        peg$c106 = { type: \"literal\", value: \"\\\\t\", description: \"\\\"\\\\\\\\t\\\"\" },\n        peg$c107 = function() { return '\\t' },\n        peg$c108 = \"\\\\n\",\n        peg$c109 = { type: \"literal\", value: \"\\\\n\", description: \"\\\"\\\\\\\\n\\\"\" },\n        peg$c110 = function() { return '\\n' },\n        peg$c111 = \"\\\\f\",\n        peg$c112 = { type: \"literal\", value: \"\\\\f\", description: \"\\\"\\\\\\\\f\\\"\" },\n        peg$c113 = function() { return '\\f' },\n        peg$c114 = \"\\\\r\",\n        peg$c115 = { type: \"literal\", value: \"\\\\r\", description: \"\\\"\\\\\\\\r\\\"\" },\n        peg$c116 = function() { return '\\r' },\n        peg$c117 = \"\\\\U\",\n        peg$c118 = { type: \"literal\", value: \"\\\\U\", description: \"\\\"\\\\\\\\U\\\"\" },\n        peg$c119 = function(digits) { return convertCodePoint(digits.join('')) },\n        peg$c120 = \"\\\\u\",\n        peg$c121 = { type: \"literal\", value: \"\\\\u\", description: \"\\\"\\\\\\\\u\\\"\" },\n\n        peg$currPos          = 0,\n        peg$reportedPos      = 0,\n        peg$cachedPos        = 0,\n        peg$cachedPosDetails = { line: 1, column: 1, seenCR: false },\n        peg$maxFailPos       = 0,\n        peg$maxFailExpected  = [],\n        peg$silentFails      = 0,\n\n        peg$cache = {},\n        peg$result;\n\n    if (\"startRule\" in options) {\n      if (!(options.startRule in peg$startRuleFunctions)) {\n        throw new Error(\"Can't start parsing from rule \\\"\" + options.startRule + \"\\\".\");\n      }\n\n      peg$startRuleFunction = peg$startRuleFunctions[options.startRule];\n    }\n\n    function text() {\n      return input.substring(peg$reportedPos, peg$currPos);\n    }\n\n    function offset() {\n      return peg$reportedPos;\n    }\n\n    function line() {\n      return peg$computePosDetails(peg$reportedPos).line;\n    }\n\n    function column() {\n      return peg$computePosDetails(peg$reportedPos).column;\n    }\n\n    function expected(description) {\n      throw peg$buildException(\n        null,\n        [{ type: \"other\", description: description }],\n        peg$reportedPos\n      );\n    }\n\n    function error(message) {\n      throw peg$buildException(message, null, peg$reportedPos);\n    }\n\n    function peg$computePosDetails(pos) {\n      function advance(details, startPos, endPos) {\n        var p, ch;\n\n        for (p = startPos; p < endPos; p++) {\n          ch = input.charAt(p);\n          if (ch === \"\\n\") {\n            if (!details.seenCR) { details.line++; }\n            details.column = 1;\n            details.seenCR = false;\n          } else if (ch === \"\\r\" || ch === \"\\u2028\" || ch === \"\\u2029\") {\n            details.line++;\n            details.column = 1;\n            details.seenCR = true;\n          } else {\n            details.column++;\n            details.seenCR = false;\n          }\n        }\n      }\n\n      if (peg$cachedPos !== pos) {\n        if (peg$cachedPos > pos) {\n          peg$cachedPos = 0;\n          peg$cachedPosDetails = { line: 1, column: 1, seenCR: false };\n        }\n        advance(peg$cachedPosDetails, peg$cachedPos, pos);\n        peg$cachedPos = pos;\n      }\n\n      return peg$cachedPosDetails;\n    }\n\n    function peg$fail(expected) {\n      if (peg$currPos < peg$maxFailPos) { return; }\n\n      if (peg$currPos > peg$maxFailPos) {\n        peg$maxFailPos = peg$currPos;\n        peg$maxFailExpected = [];\n      }\n\n      peg$maxFailExpected.push(expected);\n    }\n\n    function peg$buildException(message, expected, pos) {\n      function cleanupExpected(expected) {\n        var i = 1;\n\n        expected.sort(function(a, b) {\n          if (a.description < b.description) {\n            return -1;\n          } else if (a.description > b.description) {\n            return 1;\n          } else {\n            return 0;\n          }\n        });\n\n        while (i < expected.length) {\n          if (expected[i - 1] === expected[i]) {\n            expected.splice(i, 1);\n          } else {\n            i++;\n          }\n        }\n      }\n\n      function buildMessage(expected, found) {\n        function stringEscape(s) {\n          function hex(ch) { return ch.charCodeAt(0).toString(16).toUpperCase(); }\n\n          return s\n            .replace(/\\\\/g,   '\\\\\\\\')\n            .replace(/\"/g,    '\\\\\"')\n            .replace(/\\x08/g, '\\\\b')\n            .replace(/\\t/g,   '\\\\t')\n            .replace(/\\n/g,   '\\\\n')\n            .replace(/\\f/g,   '\\\\f')\n            .replace(/\\r/g,   '\\\\r')\n            .replace(/[\\x00-\\x07\\x0B\\x0E\\x0F]/g, function(ch) { return '\\\\x0' + hex(ch); })\n            .replace(/[\\x10-\\x1F\\x80-\\xFF]/g,    function(ch) { return '\\\\x'  + hex(ch); })\n            .replace(/[\\u0180-\\u0FFF]/g,         function(ch) { return '\\\\u0' + hex(ch); })\n            .replace(/[\\u1080-\\uFFFF]/g,         function(ch) { return '\\\\u'  + hex(ch); });\n        }\n\n        var expectedDescs = new Array(expected.length),\n            expectedDesc, foundDesc, i;\n\n        for (i = 0; i < expected.length; i++) {\n          expectedDescs[i] = expected[i].description;\n        }\n\n        expectedDesc = expected.length > 1\n          ? expectedDescs.slice(0, -1).join(\", \")\n              + \" or \"\n              + expectedDescs[expected.length - 1]\n          : expectedDescs[0];\n\n        foundDesc = found ? \"\\\"\" + stringEscape(found) + \"\\\"\" : \"end of input\";\n\n        return \"Expected \" + expectedDesc + \" but \" + foundDesc + \" found.\";\n      }\n\n      var posDetails = peg$computePosDetails(pos),\n          found      = pos < input.length ? input.charAt(pos) : null;\n\n      if (expected !== null) {\n        cleanupExpected(expected);\n      }\n\n      return new SyntaxError(\n        message !== null ? message : buildMessage(expected, found),\n        expected,\n        found,\n        pos,\n        posDetails.line,\n        posDetails.column\n      );\n    }\n\n    function peg$parsestart() {\n      var s0, s1, s2;\n\n      var key    = peg$currPos * 45 + 0,\n          cached = peg$cache[key];\n\n      if (cached) {\n        peg$currPos = cached.nextPos;\n        return cached.result;\n      }\n\n      s0 = peg$currPos;\n      s1 = [];\n      s2 = peg$parseline();\n      while (s2 !== peg$FAILED) {\n        s1.push(s2);\n        s2 = peg$parseline();\n      }\n      if (s1 !== peg$FAILED) {\n        peg$reportedPos = s0;\n        s1 = peg$c1();\n      }\n      s0 = s1;\n\n      peg$cache[key] = { nextPos: peg$currPos, result: s0 };\n\n      return s0;\n    }\n\n    function peg$parseline() {\n      var s0, s1, s2, s3, s4, s5, s6;\n\n      var key    = peg$currPos * 45 + 1,\n          cached = peg$cache[key];\n\n      if (cached) {\n        peg$currPos = cached.nextPos;\n        return cached.result;\n      }\n\n      s0 = peg$currPos;\n      s1 = [];\n      s2 = peg$parseS();\n      while (s2 !== peg$FAILED) {\n        s1.push(s2);\n        s2 = peg$parseS();\n      }\n      if (s1 !== peg$FAILED) {\n        s2 = peg$parseexpression();\n        if (s2 !== peg$FAILED) {\n          s3 = [];\n          s4 = peg$parseS();\n          while (s4 !== peg$FAILED) {\n            s3.push(s4);\n            s4 = peg$parseS();\n          }\n          if (s3 !== peg$FAILED) {\n            s4 = [];\n            s5 = peg$parsecomment();\n            while (s5 !== peg$FAILED) {\n              s4.push(s5);\n              s5 = peg$parsecomment();\n            }\n            if (s4 !== peg$FAILED) {\n              s5 = [];\n              s6 = peg$parseNL();\n              if (s6 !== peg$FAILED) {\n                while (s6 !== peg$FAILED) {\n                  s5.push(s6);\n                  s6 = peg$parseNL();\n                }\n              } else {\n                s5 = peg$c2;\n              }\n              if (s5 === peg$FAILED) {\n                s5 = peg$parseEOF();\n              }\n              if (s5 !== peg$FAILED) {\n                s1 = [s1, s2, s3, s4, s5];\n                s0 = s1;\n              } else {\n                peg$currPos = s0;\n                s0 = peg$c2;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$c2;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$c2;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$c2;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$c2;\n      }\n      if (s0 === peg$FAILED) {\n        s0 = peg$currPos;\n        s1 = [];\n        s2 = peg$parseS();\n        if (s2 !== peg$FAILED) {\n          while (s2 !== peg$FAILED) {\n            s1.push(s2);\n            s2 = peg$parseS();\n          }\n        } else {\n          s1 = peg$c2;\n        }\n        if (s1 !== peg$FAILED) {\n          s2 = [];\n          s3 = peg$parseNL();\n          if (s3 !== peg$FAILED) {\n            while (s3 !== peg$FAILED) {\n              s2.push(s3);\n              s3 = peg$parseNL();\n            }\n          } else {\n            s2 = peg$c2;\n          }\n          if (s2 === peg$FAILED) {\n            s2 = peg$parseEOF();\n          }\n          if (s2 !== peg$FAILED) {\n            s1 = [s1, s2];\n            s0 = s1;\n          } else {\n            peg$currPos = s0;\n            s0 = peg$c2;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$c2;\n        }\n        if (s0 === peg$FAILED) {\n          s0 = peg$parseNL();\n        }\n      }\n\n      peg$cache[key] = { nextPos: peg$currPos, result: s0 };\n\n      return s0;\n    }\n\n    function peg$parseexpression() {\n      var s0;\n\n      var key    = peg$currPos * 45 + 2,\n          cached = peg$cache[key];\n\n      if (cached) {\n        peg$currPos = cached.nextPos;\n        return cached.result;\n      }\n\n      s0 = peg$parsecomment();\n      if (s0 === peg$FAILED) {\n        s0 = peg$parsepath();\n        if (s0 === peg$FAILED) {\n          s0 = peg$parsetablearray();\n          if (s0 === peg$FAILED) {\n            s0 = peg$parseassignment();\n          }\n        }\n      }\n\n      peg$cache[key] = { nextPos: peg$currPos, result: s0 };\n\n      return s0;\n    }\n\n    function peg$parsecomment() {\n      var s0, s1, s2, s3, s4, s5;\n\n      var key    = peg$currPos * 45 + 3,\n          cached = peg$cache[key];\n\n      if (cached) {\n        peg$currPos = cached.nextPos;\n        return cached.result;\n      }\n\n      s0 = peg$currPos;\n      if (input.charCodeAt(peg$currPos) === 35) {\n        s1 = peg$c3;\n        peg$currPos++;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c4); }\n      }\n      if (s1 !== peg$FAILED) {\n        s2 = [];\n        s3 = peg$currPos;\n        s4 = peg$currPos;\n        peg$silentFails++;\n        s5 = peg$parseNL();\n        if (s5 === peg$FAILED) {\n          s5 = peg$parseEOF();\n        }\n        peg$silentFails--;\n        if (s5 === peg$FAILED) {\n          s4 = peg$c5;\n        } else {\n          peg$currPos = s4;\n          s4 = peg$c2;\n        }\n        if (s4 !== peg$FAILED) {\n          if (input.length > peg$currPos) {\n            s5 = input.charAt(peg$currPos);\n            peg$currPos++;\n          } else {\n            s5 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c6); }\n          }\n          if (s5 !== peg$FAILED) {\n            s4 = [s4, s5];\n            s3 = s4;\n          } else {\n            peg$currPos = s3;\n            s3 = peg$c2;\n          }\n        } else {\n          peg$currPos = s3;\n          s3 = peg$c2;\n        }\n        while (s3 !== peg$FAILED) {\n          s2.push(s3);\n          s3 = peg$currPos;\n          s4 = peg$currPos;\n          peg$silentFails++;\n          s5 = peg$parseNL();\n          if (s5 === peg$FAILED) {\n            s5 = peg$parseEOF();\n          }\n          peg$silentFails--;\n          if (s5 === peg$FAILED) {\n            s4 = peg$c5;\n          } else {\n            peg$currPos = s4;\n            s4 = peg$c2;\n          }\n          if (s4 !== peg$FAILED) {\n            if (input.length > peg$currPos) {\n              s5 = input.charAt(peg$currPos);\n              peg$currPos++;\n            } else {\n              s5 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c6); }\n            }\n            if (s5 !== peg$FAILED) {\n              s4 = [s4, s5];\n              s3 = s4;\n            } else {\n              peg$currPos = s3;\n              s3 = peg$c2;\n            }\n          } else {\n            peg$currPos = s3;\n            s3 = peg$c2;\n          }\n        }\n        if (s2 !== peg$FAILED) {\n          s1 = [s1, s2];\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$c2;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$c2;\n      }\n\n      peg$cache[key] = { nextPos: peg$currPos, result: s0 };\n\n      return s0;\n    }\n\n    function peg$parsepath() {\n      var s0, s1, s2, s3, s4, s5;\n\n      var key    = peg$currPos * 45 + 4,\n          cached = peg$cache[key];\n\n      if (cached) {\n        peg$currPos = cached.nextPos;\n        return cached.result;\n      }\n\n      s0 = peg$currPos;\n      if (input.charCodeAt(peg$currPos) === 91) {\n        s1 = peg$c7;\n        peg$currPos++;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c8); }\n      }\n      if (s1 !== peg$FAILED) {\n        s2 = [];\n        s3 = peg$parseS();\n        while (s3 !== peg$FAILED) {\n          s2.push(s3);\n          s3 = peg$parseS();\n        }\n        if (s2 !== peg$FAILED) {\n          s3 = peg$parsetable_key();\n          if (s3 !== peg$FAILED) {\n            s4 = [];\n            s5 = peg$parseS();\n            while (s5 !== peg$FAILED) {\n              s4.push(s5);\n              s5 = peg$parseS();\n            }\n            if (s4 !== peg$FAILED) {\n              if (input.charCodeAt(peg$currPos) === 93) {\n                s5 = peg$c9;\n                peg$currPos++;\n              } else {\n                s5 = peg$FAILED;\n                if (peg$silentFails === 0) { peg$fail(peg$c10); }\n              }\n              if (s5 !== peg$FAILED) {\n                peg$reportedPos = s0;\n                s1 = peg$c11(s3);\n                s0 = s1;\n              } else {\n                peg$currPos = s0;\n                s0 = peg$c2;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$c2;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$c2;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$c2;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$c2;\n      }\n\n      peg$cache[key] = { nextPos: peg$currPos, result: s0 };\n\n      return s0;\n    }\n\n    function peg$parsetablearray() {\n      var s0, s1, s2, s3, s4, s5, s6, s7;\n\n      var key    = peg$currPos * 45 + 5,\n          cached = peg$cache[key];\n\n      if (cached) {\n        peg$currPos = cached.nextPos;\n        return cached.result;\n      }\n\n      s0 = peg$currPos;\n      if (input.charCodeAt(peg$currPos) === 91) {\n        s1 = peg$c7;\n        peg$currPos++;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c8); }\n      }\n      if (s1 !== peg$FAILED) {\n        if (input.charCodeAt(peg$currPos) === 91) {\n          s2 = peg$c7;\n          peg$currPos++;\n        } else {\n          s2 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c8); }\n        }\n        if (s2 !== peg$FAILED) {\n          s3 = [];\n          s4 = peg$parseS();\n          while (s4 !== peg$FAILED) {\n            s3.push(s4);\n            s4 = peg$parseS();\n          }\n          if (s3 !== peg$FAILED) {\n            s4 = peg$parsetable_key();\n            if (s4 !== peg$FAILED) {\n              s5 = [];\n              s6 = peg$parseS();\n              while (s6 !== peg$FAILED) {\n                s5.push(s6);\n                s6 = peg$parseS();\n              }\n              if (s5 !== peg$FAILED) {\n                if (input.charCodeAt(peg$currPos) === 93) {\n                  s6 = peg$c9;\n                  peg$currPos++;\n                } else {\n                  s6 = peg$FAILED;\n                  if (peg$silentFails === 0) { peg$fail(peg$c10); }\n                }\n                if (s6 !== peg$FAILED) {\n                  if (input.charCodeAt(peg$currPos) === 93) {\n                    s7 = peg$c9;\n                    peg$currPos++;\n                  } else {\n                    s7 = peg$FAILED;\n                    if (peg$silentFails === 0) { peg$fail(peg$c10); }\n                  }\n                  if (s7 !== peg$FAILED) {\n                    peg$reportedPos = s0;\n                    s1 = peg$c12(s4);\n                    s0 = s1;\n                  } else {\n                    peg$currPos = s0;\n                    s0 = peg$c2;\n                  }\n                } else {\n                  peg$currPos = s0;\n                  s0 = peg$c2;\n                }\n              } else {\n                peg$currPos = s0;\n                s0 = peg$c2;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$c2;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$c2;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$c2;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$c2;\n      }\n\n      peg$cache[key] = { nextPos: peg$currPos, result: s0 };\n\n      return s0;\n    }\n\n    function peg$parsetable_key() {\n      var s0, s1, s2;\n\n      var key    = peg$currPos * 45 + 6,\n          cached = peg$cache[key];\n\n      if (cached) {\n        peg$currPos = cached.nextPos;\n        return cached.result;\n      }\n\n      s0 = peg$currPos;\n      s1 = [];\n      s2 = peg$parsedot_ended_table_key_part();\n      if (s2 !== peg$FAILED) {\n        while (s2 !== peg$FAILED) {\n          s1.push(s2);\n          s2 = peg$parsedot_ended_table_key_part();\n        }\n      } else {\n        s1 = peg$c2;\n      }\n      if (s1 !== peg$FAILED) {\n        s2 = peg$parsetable_key_part();\n        if (s2 !== peg$FAILED) {\n          peg$reportedPos = s0;\n          s1 = peg$c13(s1, s2);\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$c2;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$c2;\n      }\n      if (s0 === peg$FAILED) {\n        s0 = peg$currPos;\n        s1 = peg$parsetable_key_part();\n        if (s1 !== peg$FAILED) {\n          peg$reportedPos = s0;\n          s1 = peg$c14(s1);\n        }\n        s0 = s1;\n      }\n\n      peg$cache[key] = { nextPos: peg$currPos, result: s0 };\n\n      return s0;\n    }\n\n    function peg$parsetable_key_part() {\n      var s0, s1, s2, s3, s4;\n\n      var key    = peg$currPos * 45 + 7,\n          cached = peg$cache[key];\n\n      if (cached) {\n        peg$currPos = cached.nextPos;\n        return cached.result;\n      }\n\n      s0 = peg$currPos;\n      s1 = [];\n      s2 = peg$parseS();\n      while (s2 !== peg$FAILED) {\n        s1.push(s2);\n        s2 = peg$parseS();\n      }\n      if (s1 !== peg$FAILED) {\n        s2 = peg$parsekey();\n        if (s2 !== peg$FAILED) {\n          s3 = [];\n          s4 = peg$parseS();\n          while (s4 !== peg$FAILED) {\n            s3.push(s4);\n            s4 = peg$parseS();\n          }\n          if (s3 !== peg$FAILED) {\n            peg$reportedPos = s0;\n            s1 = peg$c15(s2);\n            s0 = s1;\n          } else {\n            peg$currPos = s0;\n            s0 = peg$c2;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$c2;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$c2;\n      }\n      if (s0 === peg$FAILED) {\n        s0 = peg$currPos;\n        s1 = [];\n        s2 = peg$parseS();\n        while (s2 !== peg$FAILED) {\n          s1.push(s2);\n          s2 = peg$parseS();\n        }\n        if (s1 !== peg$FAILED) {\n          s2 = peg$parsequoted_key();\n          if (s2 !== peg$FAILED) {\n            s3 = [];\n            s4 = peg$parseS();\n            while (s4 !== peg$FAILED) {\n              s3.push(s4);\n              s4 = peg$parseS();\n            }\n            if (s3 !== peg$FAILED) {\n              peg$reportedPos = s0;\n              s1 = peg$c15(s2);\n              s0 = s1;\n            } else {\n              peg$currPos = s0;\n              s0 = peg$c2;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$c2;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$c2;\n        }\n      }\n\n      peg$cache[key] = { nextPos: peg$currPos, result: s0 };\n\n      return s0;\n    }\n\n    function peg$parsedot_ended_table_key_part() {\n      var s0, s1, s2, s3, s4, s5, s6;\n\n      var key    = peg$currPos * 45 + 8,\n          cached = peg$cache[key];\n\n      if (cached) {\n        peg$currPos = cached.nextPos;\n        return cached.result;\n      }\n\n      s0 = peg$currPos;\n      s1 = [];\n      s2 = peg$parseS();\n      while (s2 !== peg$FAILED) {\n        s1.push(s2);\n        s2 = peg$parseS();\n      }\n      if (s1 !== peg$FAILED) {\n        s2 = peg$parsekey();\n        if (s2 !== peg$FAILED) {\n          s3 = [];\n          s4 = peg$parseS();\n          while (s4 !== peg$FAILED) {\n            s3.push(s4);\n            s4 = peg$parseS();\n          }\n          if (s3 !== peg$FAILED) {\n            if (input.charCodeAt(peg$currPos) === 46) {\n              s4 = peg$c16;\n              peg$currPos++;\n            } else {\n              s4 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c17); }\n            }\n            if (s4 !== peg$FAILED) {\n              s5 = [];\n              s6 = peg$parseS();\n              while (s6 !== peg$FAILED) {\n                s5.push(s6);\n                s6 = peg$parseS();\n              }\n              if (s5 !== peg$FAILED) {\n                peg$reportedPos = s0;\n                s1 = peg$c15(s2);\n                s0 = s1;\n              } else {\n                peg$currPos = s0;\n                s0 = peg$c2;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$c2;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$c2;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$c2;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$c2;\n      }\n      if (s0 === peg$FAILED) {\n        s0 = peg$currPos;\n        s1 = [];\n        s2 = peg$parseS();\n        while (s2 !== peg$FAILED) {\n          s1.push(s2);\n          s2 = peg$parseS();\n        }\n        if (s1 !== peg$FAILED) {\n          s2 = peg$parsequoted_key();\n          if (s2 !== peg$FAILED) {\n            s3 = [];\n            s4 = peg$parseS();\n            while (s4 !== peg$FAILED) {\n              s3.push(s4);\n              s4 = peg$parseS();\n            }\n            if (s3 !== peg$FAILED) {\n              if (input.charCodeAt(peg$currPos) === 46) {\n                s4 = peg$c16;\n                peg$currPos++;\n              } else {\n                s4 = peg$FAILED;\n                if (peg$silentFails === 0) { peg$fail(peg$c17); }\n              }\n              if (s4 !== peg$FAILED) {\n                s5 = [];\n                s6 = peg$parseS();\n                while (s6 !== peg$FAILED) {\n                  s5.push(s6);\n                  s6 = peg$parseS();\n                }\n                if (s5 !== peg$FAILED) {\n                  peg$reportedPos = s0;\n                  s1 = peg$c15(s2);\n                  s0 = s1;\n                } else {\n                  peg$currPos = s0;\n                  s0 = peg$c2;\n                }\n              } else {\n                peg$currPos = s0;\n                s0 = peg$c2;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$c2;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$c2;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$c2;\n        }\n      }\n\n      peg$cache[key] = { nextPos: peg$currPos, result: s0 };\n\n      return s0;\n    }\n\n    function peg$parseassignment() {\n      var s0, s1, s2, s3, s4, s5;\n\n      var key    = peg$currPos * 45 + 9,\n          cached = peg$cache[key];\n\n      if (cached) {\n        peg$currPos = cached.nextPos;\n        return cached.result;\n      }\n\n      s0 = peg$currPos;\n      s1 = peg$parsekey();\n      if (s1 !== peg$FAILED) {\n        s2 = [];\n        s3 = peg$parseS();\n        while (s3 !== peg$FAILED) {\n          s2.push(s3);\n          s3 = peg$parseS();\n        }\n        if (s2 !== peg$FAILED) {\n          if (input.charCodeAt(peg$currPos) === 61) {\n            s3 = peg$c18;\n            peg$currPos++;\n          } else {\n            s3 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c19); }\n          }\n          if (s3 !== peg$FAILED) {\n            s4 = [];\n            s5 = peg$parseS();\n            while (s5 !== peg$FAILED) {\n              s4.push(s5);\n              s5 = peg$parseS();\n            }\n            if (s4 !== peg$FAILED) {\n              s5 = peg$parsevalue();\n              if (s5 !== peg$FAILED) {\n                peg$reportedPos = s0;\n                s1 = peg$c20(s1, s5);\n                s0 = s1;\n              } else {\n                peg$currPos = s0;\n                s0 = peg$c2;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$c2;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$c2;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$c2;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$c2;\n      }\n      if (s0 === peg$FAILED) {\n        s0 = peg$currPos;\n        s1 = peg$parsequoted_key();\n        if (s1 !== peg$FAILED) {\n          s2 = [];\n          s3 = peg$parseS();\n          while (s3 !== peg$FAILED) {\n            s2.push(s3);\n            s3 = peg$parseS();\n          }\n          if (s2 !== peg$FAILED) {\n            if (input.charCodeAt(peg$currPos) === 61) {\n              s3 = peg$c18;\n              peg$currPos++;\n            } else {\n              s3 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c19); }\n            }\n            if (s3 !== peg$FAILED) {\n              s4 = [];\n              s5 = peg$parseS();\n              while (s5 !== peg$FAILED) {\n                s4.push(s5);\n                s5 = peg$parseS();\n              }\n              if (s4 !== peg$FAILED) {\n                s5 = peg$parsevalue();\n                if (s5 !== peg$FAILED) {\n                  peg$reportedPos = s0;\n                  s1 = peg$c20(s1, s5);\n                  s0 = s1;\n                } else {\n                  peg$currPos = s0;\n                  s0 = peg$c2;\n                }\n              } else {\n                peg$currPos = s0;\n                s0 = peg$c2;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$c2;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$c2;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$c2;\n        }\n      }\n\n      peg$cache[key] = { nextPos: peg$currPos, result: s0 };\n\n      return s0;\n    }\n\n    function peg$parsekey() {\n      var s0, s1, s2;\n\n      var key    = peg$currPos * 45 + 10,\n          cached = peg$cache[key];\n\n      if (cached) {\n        peg$currPos = cached.nextPos;\n        return cached.result;\n      }\n\n      s0 = peg$currPos;\n      s1 = [];\n      s2 = peg$parseASCII_BASIC();\n      if (s2 !== peg$FAILED) {\n        while (s2 !== peg$FAILED) {\n          s1.push(s2);\n          s2 = peg$parseASCII_BASIC();\n        }\n      } else {\n        s1 = peg$c2;\n      }\n      if (s1 !== peg$FAILED) {\n        peg$reportedPos = s0;\n        s1 = peg$c21(s1);\n      }\n      s0 = s1;\n\n      peg$cache[key] = { nextPos: peg$currPos, result: s0 };\n\n      return s0;\n    }\n\n    function peg$parsequoted_key() {\n      var s0, s1, s2, s3, s4, s5;\n\n      var key    = peg$currPos * 45 + 11,\n          cached = peg$cache[key];\n\n      if (cached) {\n        peg$currPos = cached.nextPos;\n        return cached.result;\n      }\n\n      s0 = peg$currPos;\n      if (input.charCodeAt(peg$currPos) === 34) {\n        s1 = peg$c22;\n        peg$currPos++;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c23); }\n      }\n      if (s1 !== peg$FAILED) {\n        s2 = [];\n        s3 = peg$currPos;\n        s4 = peg$currPos;\n        peg$silentFails++;\n        s5 = peg$parseNL();\n        if (s5 === peg$FAILED) {\n          if (input.charCodeAt(peg$currPos) === 91) {\n            s5 = peg$c7;\n            peg$currPos++;\n          } else {\n            s5 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c8); }\n          }\n          if (s5 === peg$FAILED) {\n            if (input.charCodeAt(peg$currPos) === 93) {\n              s5 = peg$c9;\n              peg$currPos++;\n            } else {\n              s5 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c10); }\n            }\n            if (s5 === peg$FAILED) {\n              if (input.charCodeAt(peg$currPos) === 61) {\n                s5 = peg$c18;\n                peg$currPos++;\n              } else {\n                s5 = peg$FAILED;\n                if (peg$silentFails === 0) { peg$fail(peg$c19); }\n              }\n              if (s5 === peg$FAILED) {\n                if (input.charCodeAt(peg$currPos) === 34) {\n                  s5 = peg$c22;\n                  peg$currPos++;\n                } else {\n                  s5 = peg$FAILED;\n                  if (peg$silentFails === 0) { peg$fail(peg$c23); }\n                }\n              }\n            }\n          }\n        }\n        peg$silentFails--;\n        if (s5 === peg$FAILED) {\n          s4 = peg$c5;\n        } else {\n          peg$currPos = s4;\n          s4 = peg$c2;\n        }\n        if (s4 !== peg$FAILED) {\n          s5 = peg$parseESCAPED();\n          if (s5 === peg$FAILED) {\n            if (input.length > peg$currPos) {\n              s5 = input.charAt(peg$currPos);\n              peg$currPos++;\n            } else {\n              s5 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c6); }\n            }\n          }\n          if (s5 !== peg$FAILED) {\n            peg$reportedPos = s3;\n            s4 = peg$c24(s5);\n            s3 = s4;\n          } else {\n            peg$currPos = s3;\n            s3 = peg$c2;\n          }\n        } else {\n          peg$currPos = s3;\n          s3 = peg$c2;\n        }\n        if (s3 !== peg$FAILED) {\n          while (s3 !== peg$FAILED) {\n            s2.push(s3);\n            s3 = peg$currPos;\n            s4 = peg$currPos;\n            peg$silentFails++;\n            s5 = peg$parseNL();\n            if (s5 === peg$FAILED) {\n              if (input.charCodeAt(peg$currPos) === 91) {\n                s5 = peg$c7;\n                peg$currPos++;\n              } else {\n                s5 = peg$FAILED;\n                if (peg$silentFails === 0) { peg$fail(peg$c8); }\n              }\n              if (s5 === peg$FAILED) {\n                if (input.charCodeAt(peg$currPos) === 93) {\n                  s5 = peg$c9;\n                  peg$currPos++;\n                } else {\n                  s5 = peg$FAILED;\n                  if (peg$silentFails === 0) { peg$fail(peg$c10); }\n                }\n                if (s5 === peg$FAILED) {\n                  if (input.charCodeAt(peg$currPos) === 61) {\n                    s5 = peg$c18;\n                    peg$currPos++;\n                  } else {\n                    s5 = peg$FAILED;\n                    if (peg$silentFails === 0) { peg$fail(peg$c19); }\n                  }\n                  if (s5 === peg$FAILED) {\n                    if (input.charCodeAt(peg$currPos) === 34) {\n                      s5 = peg$c22;\n                      peg$currPos++;\n                    } else {\n                      s5 = peg$FAILED;\n                      if (peg$silentFails === 0) { peg$fail(peg$c23); }\n                    }\n                  }\n                }\n              }\n            }\n            peg$silentFails--;\n            if (s5 === peg$FAILED) {\n              s4 = peg$c5;\n            } else {\n              peg$currPos = s4;\n              s4 = peg$c2;\n            }\n            if (s4 !== peg$FAILED) {\n              s5 = peg$parseESCAPED();\n              if (s5 === peg$FAILED) {\n                if (input.length > peg$currPos) {\n                  s5 = input.charAt(peg$currPos);\n                  peg$currPos++;\n                } else {\n                  s5 = peg$FAILED;\n                  if (peg$silentFails === 0) { peg$fail(peg$c6); }\n                }\n              }\n              if (s5 !== peg$FAILED) {\n                peg$reportedPos = s3;\n                s4 = peg$c24(s5);\n                s3 = s4;\n              } else {\n                peg$currPos = s3;\n                s3 = peg$c2;\n              }\n            } else {\n              peg$currPos = s3;\n              s3 = peg$c2;\n            }\n          }\n        } else {\n          s2 = peg$c2;\n        }\n        if (s2 !== peg$FAILED) {\n          if (input.charCodeAt(peg$currPos) === 34) {\n            s3 = peg$c22;\n            peg$currPos++;\n          } else {\n            s3 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c23); }\n          }\n          if (s3 !== peg$FAILED) {\n            peg$reportedPos = s0;\n            s1 = peg$c21(s2);\n            s0 = s1;\n          } else {\n            peg$currPos = s0;\n            s0 = peg$c2;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$c2;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$c2;\n      }\n\n      peg$cache[key] = { nextPos: peg$currPos, result: s0 };\n\n      return s0;\n    }\n\n    function peg$parsevalue() {\n      var s0;\n\n      var key    = peg$currPos * 45 + 12,\n          cached = peg$cache[key];\n\n      if (cached) {\n        peg$currPos = cached.nextPos;\n        return cached.result;\n      }\n\n      s0 = peg$parsestring();\n      if (s0 === peg$FAILED) {\n        s0 = peg$parsedatetime();\n        if (s0 === peg$FAILED) {\n          s0 = peg$parsefloat();\n          if (s0 === peg$FAILED) {\n            s0 = peg$parseinteger();\n            if (s0 === peg$FAILED) {\n              s0 = peg$parseboolean();\n              if (s0 === peg$FAILED) {\n                s0 = peg$parsearray();\n                if (s0 === peg$FAILED) {\n                  s0 = peg$parseinline_table();\n                }\n              }\n            }\n          }\n        }\n      }\n\n      peg$cache[key] = { nextPos: peg$currPos, result: s0 };\n\n      return s0;\n    }\n\n    function peg$parsestring() {\n      var s0, s1, s2, s3, s4;\n\n      var key    = peg$currPos * 45 + 13,\n          cached = peg$cache[key];\n\n      if (cached) {\n        peg$currPos = cached.nextPos;\n        return cached.result;\n      }\n\n      s0 = peg$currPos;\n      if (input.substr(peg$currPos, 3) === peg$c25) {\n        s1 = peg$c25;\n        peg$currPos += 3;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c26); }\n      }\n      if (s1 !== peg$FAILED) {\n        s2 = peg$parseNL();\n        if (s2 === peg$FAILED) {\n          s2 = peg$c27;\n        }\n        if (s2 !== peg$FAILED) {\n          s3 = [];\n          s4 = peg$parsemultiline_string_char();\n          while (s4 !== peg$FAILED) {\n            s3.push(s4);\n            s4 = peg$parsemultiline_string_char();\n          }\n          if (s3 !== peg$FAILED) {\n            if (input.substr(peg$currPos, 3) === peg$c25) {\n              s4 = peg$c25;\n              peg$currPos += 3;\n            } else {\n              s4 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c26); }\n            }\n            if (s4 !== peg$FAILED) {\n              peg$reportedPos = s0;\n              s1 = peg$c28(s3);\n              s0 = s1;\n            } else {\n              peg$currPos = s0;\n              s0 = peg$c2;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$c2;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$c2;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$c2;\n      }\n      if (s0 === peg$FAILED) {\n        s0 = peg$currPos;\n        if (input.charCodeAt(peg$currPos) === 34) {\n          s1 = peg$c22;\n          peg$currPos++;\n        } else {\n          s1 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c23); }\n        }\n        if (s1 !== peg$FAILED) {\n          s2 = [];\n          s3 = peg$parsestring_char();\n          while (s3 !== peg$FAILED) {\n            s2.push(s3);\n            s3 = peg$parsestring_char();\n          }\n          if (s2 !== peg$FAILED) {\n            if (input.charCodeAt(peg$currPos) === 34) {\n              s3 = peg$c22;\n              peg$currPos++;\n            } else {\n              s3 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c23); }\n            }\n            if (s3 !== peg$FAILED) {\n              peg$reportedPos = s0;\n              s1 = peg$c28(s2);\n              s0 = s1;\n            } else {\n              peg$currPos = s0;\n              s0 = peg$c2;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$c2;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$c2;\n        }\n        if (s0 === peg$FAILED) {\n          s0 = peg$currPos;\n          if (input.substr(peg$currPos, 3) === peg$c29) {\n            s1 = peg$c29;\n            peg$currPos += 3;\n          } else {\n            s1 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c30); }\n          }\n          if (s1 !== peg$FAILED) {\n            s2 = peg$parseNL();\n            if (s2 === peg$FAILED) {\n              s2 = peg$c27;\n            }\n            if (s2 !== peg$FAILED) {\n              s3 = [];\n              s4 = peg$parsemultiline_literal_char();\n              while (s4 !== peg$FAILED) {\n                s3.push(s4);\n                s4 = peg$parsemultiline_literal_char();\n              }\n              if (s3 !== peg$FAILED) {\n                if (input.substr(peg$currPos, 3) === peg$c29) {\n                  s4 = peg$c29;\n                  peg$currPos += 3;\n                } else {\n                  s4 = peg$FAILED;\n                  if (peg$silentFails === 0) { peg$fail(peg$c30); }\n                }\n                if (s4 !== peg$FAILED) {\n                  peg$reportedPos = s0;\n                  s1 = peg$c28(s3);\n                  s0 = s1;\n                } else {\n                  peg$currPos = s0;\n                  s0 = peg$c2;\n                }\n              } else {\n                peg$currPos = s0;\n                s0 = peg$c2;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$c2;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$c2;\n          }\n          if (s0 === peg$FAILED) {\n            s0 = peg$currPos;\n            if (input.charCodeAt(peg$currPos) === 39) {\n              s1 = peg$c31;\n              peg$currPos++;\n            } else {\n              s1 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c32); }\n            }\n            if (s1 !== peg$FAILED) {\n              s2 = [];\n              s3 = peg$parseliteral_char();\n              while (s3 !== peg$FAILED) {\n                s2.push(s3);\n                s3 = peg$parseliteral_char();\n              }\n              if (s2 !== peg$FAILED) {\n                if (input.charCodeAt(peg$currPos) === 39) {\n                  s3 = peg$c31;\n                  peg$currPos++;\n                } else {\n                  s3 = peg$FAILED;\n                  if (peg$silentFails === 0) { peg$fail(peg$c32); }\n                }\n                if (s3 !== peg$FAILED) {\n                  peg$reportedPos = s0;\n                  s1 = peg$c28(s2);\n                  s0 = s1;\n                } else {\n                  peg$currPos = s0;\n                  s0 = peg$c2;\n                }\n              } else {\n                peg$currPos = s0;\n                s0 = peg$c2;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$c2;\n            }\n          }\n        }\n      }\n\n      peg$cache[key] = { nextPos: peg$currPos, result: s0 };\n\n      return s0;\n    }\n\n    function peg$parsestring_char() {\n      var s0, s1, s2, s3;\n\n      var key    = peg$currPos * 45 + 14,\n          cached = peg$cache[key];\n\n      if (cached) {\n        peg$currPos = cached.nextPos;\n        return cached.result;\n      }\n\n      s0 = peg$parseESCAPED();\n      if (s0 === peg$FAILED) {\n        s0 = peg$currPos;\n        s1 = peg$currPos;\n        peg$silentFails++;\n        if (input.charCodeAt(peg$currPos) === 34) {\n          s2 = peg$c22;\n          peg$currPos++;\n        } else {\n          s2 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c23); }\n        }\n        peg$silentFails--;\n        if (s2 === peg$FAILED) {\n          s1 = peg$c5;\n        } else {\n          peg$currPos = s1;\n          s1 = peg$c2;\n        }\n        if (s1 !== peg$FAILED) {\n          s2 = peg$currPos;\n          peg$silentFails++;\n          if (input.charCodeAt(peg$currPos) === 92) {\n            s3 = peg$c33;\n            peg$currPos++;\n          } else {\n            s3 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c34); }\n          }\n          peg$silentFails--;\n          if (s3 === peg$FAILED) {\n            s2 = peg$c5;\n          } else {\n            peg$currPos = s2;\n            s2 = peg$c2;\n          }\n          if (s2 !== peg$FAILED) {\n            if (input.length > peg$currPos) {\n              s3 = input.charAt(peg$currPos);\n              peg$currPos++;\n            } else {\n              s3 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c6); }\n            }\n            if (s3 !== peg$FAILED) {\n              peg$reportedPos = s0;\n              s1 = peg$c24(s3);\n              s0 = s1;\n            } else {\n              peg$currPos = s0;\n              s0 = peg$c2;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$c2;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$c2;\n        }\n      }\n\n      peg$cache[key] = { nextPos: peg$currPos, result: s0 };\n\n      return s0;\n    }\n\n    function peg$parseliteral_char() {\n      var s0, s1, s2;\n\n      var key    = peg$currPos * 45 + 15,\n          cached = peg$cache[key];\n\n      if (cached) {\n        peg$currPos = cached.nextPos;\n        return cached.result;\n      }\n\n      s0 = peg$currPos;\n      s1 = peg$currPos;\n      peg$silentFails++;\n      if (input.charCodeAt(peg$currPos) === 39) {\n        s2 = peg$c31;\n        peg$currPos++;\n      } else {\n        s2 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c32); }\n      }\n      peg$silentFails--;\n      if (s2 === peg$FAILED) {\n        s1 = peg$c5;\n      } else {\n        peg$currPos = s1;\n        s1 = peg$c2;\n      }\n      if (s1 !== peg$FAILED) {\n        if (input.length > peg$currPos) {\n          s2 = input.charAt(peg$currPos);\n          peg$currPos++;\n        } else {\n          s2 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c6); }\n        }\n        if (s2 !== peg$FAILED) {\n          peg$reportedPos = s0;\n          s1 = peg$c24(s2);\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$c2;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$c2;\n      }\n\n      peg$cache[key] = { nextPos: peg$currPos, result: s0 };\n\n      return s0;\n    }\n\n    function peg$parsemultiline_string_char() {\n      var s0, s1, s2;\n\n      var key    = peg$currPos * 45 + 16,\n          cached = peg$cache[key];\n\n      if (cached) {\n        peg$currPos = cached.nextPos;\n        return cached.result;\n      }\n\n      s0 = peg$parseESCAPED();\n      if (s0 === peg$FAILED) {\n        s0 = peg$parsemultiline_string_delim();\n        if (s0 === peg$FAILED) {\n          s0 = peg$currPos;\n          s1 = peg$currPos;\n          peg$silentFails++;\n          if (input.substr(peg$currPos, 3) === peg$c25) {\n            s2 = peg$c25;\n            peg$currPos += 3;\n          } else {\n            s2 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c26); }\n          }\n          peg$silentFails--;\n          if (s2 === peg$FAILED) {\n            s1 = peg$c5;\n          } else {\n            peg$currPos = s1;\n            s1 = peg$c2;\n          }\n          if (s1 !== peg$FAILED) {\n            if (input.length > peg$currPos) {\n              s2 = input.charAt(peg$currPos);\n              peg$currPos++;\n            } else {\n              s2 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c6); }\n            }\n            if (s2 !== peg$FAILED) {\n              peg$reportedPos = s0;\n              s1 = peg$c35(s2);\n              s0 = s1;\n            } else {\n              peg$currPos = s0;\n              s0 = peg$c2;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$c2;\n          }\n        }\n      }\n\n      peg$cache[key] = { nextPos: peg$currPos, result: s0 };\n\n      return s0;\n    }\n\n    function peg$parsemultiline_string_delim() {\n      var s0, s1, s2, s3, s4;\n\n      var key    = peg$currPos * 45 + 17,\n          cached = peg$cache[key];\n\n      if (cached) {\n        peg$currPos = cached.nextPos;\n        return cached.result;\n      }\n\n      s0 = peg$currPos;\n      if (input.charCodeAt(peg$currPos) === 92) {\n        s1 = peg$c33;\n        peg$currPos++;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c34); }\n      }\n      if (s1 !== peg$FAILED) {\n        s2 = peg$parseNL();\n        if (s2 !== peg$FAILED) {\n          s3 = [];\n          s4 = peg$parseNLS();\n          while (s4 !== peg$FAILED) {\n            s3.push(s4);\n            s4 = peg$parseNLS();\n          }\n          if (s3 !== peg$FAILED) {\n            peg$reportedPos = s0;\n            s1 = peg$c36();\n            s0 = s1;\n          } else {\n            peg$currPos = s0;\n            s0 = peg$c2;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$c2;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$c2;\n      }\n\n      peg$cache[key] = { nextPos: peg$currPos, result: s0 };\n\n      return s0;\n    }\n\n    function peg$parsemultiline_literal_char() {\n      var s0, s1, s2;\n\n      var key    = peg$currPos * 45 + 18,\n          cached = peg$cache[key];\n\n      if (cached) {\n        peg$currPos = cached.nextPos;\n        return cached.result;\n      }\n\n      s0 = peg$currPos;\n      s1 = peg$currPos;\n      peg$silentFails++;\n      if (input.substr(peg$currPos, 3) === peg$c29) {\n        s2 = peg$c29;\n        peg$currPos += 3;\n      } else {\n        s2 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c30); }\n      }\n      peg$silentFails--;\n      if (s2 === peg$FAILED) {\n        s1 = peg$c5;\n      } else {\n        peg$currPos = s1;\n        s1 = peg$c2;\n      }\n      if (s1 !== peg$FAILED) {\n        if (input.length > peg$currPos) {\n          s2 = input.charAt(peg$currPos);\n          peg$currPos++;\n        } else {\n          s2 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c6); }\n        }\n        if (s2 !== peg$FAILED) {\n          peg$reportedPos = s0;\n          s1 = peg$c24(s2);\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$c2;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$c2;\n      }\n\n      peg$cache[key] = { nextPos: peg$currPos, result: s0 };\n\n      return s0;\n    }\n\n    function peg$parsefloat() {\n      var s0, s1, s2, s3;\n\n      var key    = peg$currPos * 45 + 19,\n          cached = peg$cache[key];\n\n      if (cached) {\n        peg$currPos = cached.nextPos;\n        return cached.result;\n      }\n\n      s0 = peg$currPos;\n      s1 = peg$parsefloat_text();\n      if (s1 === peg$FAILED) {\n        s1 = peg$parseinteger_text();\n      }\n      if (s1 !== peg$FAILED) {\n        if (input.charCodeAt(peg$currPos) === 101) {\n          s2 = peg$c37;\n          peg$currPos++;\n        } else {\n          s2 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c38); }\n        }\n        if (s2 === peg$FAILED) {\n          if (input.charCodeAt(peg$currPos) === 69) {\n            s2 = peg$c39;\n            peg$currPos++;\n          } else {\n            s2 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c40); }\n          }\n        }\n        if (s2 !== peg$FAILED) {\n          s3 = peg$parseinteger_text();\n          if (s3 !== peg$FAILED) {\n            peg$reportedPos = s0;\n            s1 = peg$c41(s1, s3);\n            s0 = s1;\n          } else {\n            peg$currPos = s0;\n            s0 = peg$c2;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$c2;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$c2;\n      }\n      if (s0 === peg$FAILED) {\n        s0 = peg$currPos;\n        s1 = peg$parsefloat_text();\n        if (s1 !== peg$FAILED) {\n          peg$reportedPos = s0;\n          s1 = peg$c42(s1);\n        }\n        s0 = s1;\n      }\n\n      peg$cache[key] = { nextPos: peg$currPos, result: s0 };\n\n      return s0;\n    }\n\n    function peg$parsefloat_text() {\n      var s0, s1, s2, s3, s4, s5;\n\n      var key    = peg$currPos * 45 + 20,\n          cached = peg$cache[key];\n\n      if (cached) {\n        peg$currPos = cached.nextPos;\n        return cached.result;\n      }\n\n      s0 = peg$currPos;\n      if (input.charCodeAt(peg$currPos) === 43) {\n        s1 = peg$c43;\n        peg$currPos++;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c44); }\n      }\n      if (s1 === peg$FAILED) {\n        s1 = peg$c27;\n      }\n      if (s1 !== peg$FAILED) {\n        s2 = peg$currPos;\n        s3 = peg$parseDIGITS();\n        if (s3 !== peg$FAILED) {\n          if (input.charCodeAt(peg$currPos) === 46) {\n            s4 = peg$c16;\n            peg$currPos++;\n          } else {\n            s4 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c17); }\n          }\n          if (s4 !== peg$FAILED) {\n            s5 = peg$parseDIGITS();\n            if (s5 !== peg$FAILED) {\n              s3 = [s3, s4, s5];\n              s2 = s3;\n            } else {\n              peg$currPos = s2;\n              s2 = peg$c2;\n            }\n          } else {\n            peg$currPos = s2;\n            s2 = peg$c2;\n          }\n        } else {\n          peg$currPos = s2;\n          s2 = peg$c2;\n        }\n        if (s2 !== peg$FAILED) {\n          peg$reportedPos = s0;\n          s1 = peg$c45(s2);\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$c2;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$c2;\n      }\n      if (s0 === peg$FAILED) {\n        s0 = peg$currPos;\n        if (input.charCodeAt(peg$currPos) === 45) {\n          s1 = peg$c46;\n          peg$currPos++;\n        } else {\n          s1 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c47); }\n        }\n        if (s1 !== peg$FAILED) {\n          s2 = peg$currPos;\n          s3 = peg$parseDIGITS();\n          if (s3 !== peg$FAILED) {\n            if (input.charCodeAt(peg$currPos) === 46) {\n              s4 = peg$c16;\n              peg$currPos++;\n            } else {\n              s4 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c17); }\n            }\n            if (s4 !== peg$FAILED) {\n              s5 = peg$parseDIGITS();\n              if (s5 !== peg$FAILED) {\n                s3 = [s3, s4, s5];\n                s2 = s3;\n              } else {\n                peg$currPos = s2;\n                s2 = peg$c2;\n              }\n            } else {\n              peg$currPos = s2;\n              s2 = peg$c2;\n            }\n          } else {\n            peg$currPos = s2;\n            s2 = peg$c2;\n          }\n          if (s2 !== peg$FAILED) {\n            peg$reportedPos = s0;\n            s1 = peg$c48(s2);\n            s0 = s1;\n          } else {\n            peg$currPos = s0;\n            s0 = peg$c2;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$c2;\n        }\n      }\n\n      peg$cache[key] = { nextPos: peg$currPos, result: s0 };\n\n      return s0;\n    }\n\n    function peg$parseinteger() {\n      var s0, s1;\n\n      var key    = peg$currPos * 45 + 21,\n          cached = peg$cache[key];\n\n      if (cached) {\n        peg$currPos = cached.nextPos;\n        return cached.result;\n      }\n\n      s0 = peg$currPos;\n      s1 = peg$parseinteger_text();\n      if (s1 !== peg$FAILED) {\n        peg$reportedPos = s0;\n        s1 = peg$c49(s1);\n      }\n      s0 = s1;\n\n      peg$cache[key] = { nextPos: peg$currPos, result: s0 };\n\n      return s0;\n    }\n\n    function peg$parseinteger_text() {\n      var s0, s1, s2, s3, s4;\n\n      var key    = peg$currPos * 45 + 22,\n          cached = peg$cache[key];\n\n      if (cached) {\n        peg$currPos = cached.nextPos;\n        return cached.result;\n      }\n\n      s0 = peg$currPos;\n      if (input.charCodeAt(peg$currPos) === 43) {\n        s1 = peg$c43;\n        peg$currPos++;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c44); }\n      }\n      if (s1 === peg$FAILED) {\n        s1 = peg$c27;\n      }\n      if (s1 !== peg$FAILED) {\n        s2 = [];\n        s3 = peg$parseDIGIT_OR_UNDER();\n        if (s3 !== peg$FAILED) {\n          while (s3 !== peg$FAILED) {\n            s2.push(s3);\n            s3 = peg$parseDIGIT_OR_UNDER();\n          }\n        } else {\n          s2 = peg$c2;\n        }\n        if (s2 !== peg$FAILED) {\n          s3 = peg$currPos;\n          peg$silentFails++;\n          if (input.charCodeAt(peg$currPos) === 46) {\n            s4 = peg$c16;\n            peg$currPos++;\n          } else {\n            s4 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c17); }\n          }\n          peg$silentFails--;\n          if (s4 === peg$FAILED) {\n            s3 = peg$c5;\n          } else {\n            peg$currPos = s3;\n            s3 = peg$c2;\n          }\n          if (s3 !== peg$FAILED) {\n            peg$reportedPos = s0;\n            s1 = peg$c45(s2);\n            s0 = s1;\n          } else {\n            peg$currPos = s0;\n            s0 = peg$c2;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$c2;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$c2;\n      }\n      if (s0 === peg$FAILED) {\n        s0 = peg$currPos;\n        if (input.charCodeAt(peg$currPos) === 45) {\n          s1 = peg$c46;\n          peg$currPos++;\n        } else {\n          s1 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c47); }\n        }\n        if (s1 !== peg$FAILED) {\n          s2 = [];\n          s3 = peg$parseDIGIT_OR_UNDER();\n          if (s3 !== peg$FAILED) {\n            while (s3 !== peg$FAILED) {\n              s2.push(s3);\n              s3 = peg$parseDIGIT_OR_UNDER();\n            }\n          } else {\n            s2 = peg$c2;\n          }\n          if (s2 !== peg$FAILED) {\n            s3 = peg$currPos;\n            peg$silentFails++;\n            if (input.charCodeAt(peg$currPos) === 46) {\n              s4 = peg$c16;\n              peg$currPos++;\n            } else {\n              s4 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c17); }\n            }\n            peg$silentFails--;\n            if (s4 === peg$FAILED) {\n              s3 = peg$c5;\n            } else {\n              peg$currPos = s3;\n              s3 = peg$c2;\n            }\n            if (s3 !== peg$FAILED) {\n              peg$reportedPos = s0;\n              s1 = peg$c48(s2);\n              s0 = s1;\n            } else {\n              peg$currPos = s0;\n              s0 = peg$c2;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$c2;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$c2;\n        }\n      }\n\n      peg$cache[key] = { nextPos: peg$currPos, result: s0 };\n\n      return s0;\n    }\n\n    function peg$parseboolean() {\n      var s0, s1;\n\n      var key    = peg$currPos * 45 + 23,\n          cached = peg$cache[key];\n\n      if (cached) {\n        peg$currPos = cached.nextPos;\n        return cached.result;\n      }\n\n      s0 = peg$currPos;\n      if (input.substr(peg$currPos, 4) === peg$c50) {\n        s1 = peg$c50;\n        peg$currPos += 4;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c51); }\n      }\n      if (s1 !== peg$FAILED) {\n        peg$reportedPos = s0;\n        s1 = peg$c52();\n      }\n      s0 = s1;\n      if (s0 === peg$FAILED) {\n        s0 = peg$currPos;\n        if (input.substr(peg$currPos, 5) === peg$c53) {\n          s1 = peg$c53;\n          peg$currPos += 5;\n        } else {\n          s1 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c54); }\n        }\n        if (s1 !== peg$FAILED) {\n          peg$reportedPos = s0;\n          s1 = peg$c55();\n        }\n        s0 = s1;\n      }\n\n      peg$cache[key] = { nextPos: peg$currPos, result: s0 };\n\n      return s0;\n    }\n\n    function peg$parsearray() {\n      var s0, s1, s2, s3, s4;\n\n      var key    = peg$currPos * 45 + 24,\n          cached = peg$cache[key];\n\n      if (cached) {\n        peg$currPos = cached.nextPos;\n        return cached.result;\n      }\n\n      s0 = peg$currPos;\n      if (input.charCodeAt(peg$currPos) === 91) {\n        s1 = peg$c7;\n        peg$currPos++;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c8); }\n      }\n      if (s1 !== peg$FAILED) {\n        s2 = [];\n        s3 = peg$parsearray_sep();\n        while (s3 !== peg$FAILED) {\n          s2.push(s3);\n          s3 = peg$parsearray_sep();\n        }\n        if (s2 !== peg$FAILED) {\n          if (input.charCodeAt(peg$currPos) === 93) {\n            s3 = peg$c9;\n            peg$currPos++;\n          } else {\n            s3 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c10); }\n          }\n          if (s3 !== peg$FAILED) {\n            peg$reportedPos = s0;\n            s1 = peg$c56();\n            s0 = s1;\n          } else {\n            peg$currPos = s0;\n            s0 = peg$c2;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$c2;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$c2;\n      }\n      if (s0 === peg$FAILED) {\n        s0 = peg$currPos;\n        if (input.charCodeAt(peg$currPos) === 91) {\n          s1 = peg$c7;\n          peg$currPos++;\n        } else {\n          s1 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c8); }\n        }\n        if (s1 !== peg$FAILED) {\n          s2 = peg$parsearray_value();\n          if (s2 === peg$FAILED) {\n            s2 = peg$c27;\n          }\n          if (s2 !== peg$FAILED) {\n            if (input.charCodeAt(peg$currPos) === 93) {\n              s3 = peg$c9;\n              peg$currPos++;\n            } else {\n              s3 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c10); }\n            }\n            if (s3 !== peg$FAILED) {\n              peg$reportedPos = s0;\n              s1 = peg$c57(s2);\n              s0 = s1;\n            } else {\n              peg$currPos = s0;\n              s0 = peg$c2;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$c2;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$c2;\n        }\n        if (s0 === peg$FAILED) {\n          s0 = peg$currPos;\n          if (input.charCodeAt(peg$currPos) === 91) {\n            s1 = peg$c7;\n            peg$currPos++;\n          } else {\n            s1 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c8); }\n          }\n          if (s1 !== peg$FAILED) {\n            s2 = [];\n            s3 = peg$parsearray_value_list();\n            if (s3 !== peg$FAILED) {\n              while (s3 !== peg$FAILED) {\n                s2.push(s3);\n                s3 = peg$parsearray_value_list();\n              }\n            } else {\n              s2 = peg$c2;\n            }\n            if (s2 !== peg$FAILED) {\n              if (input.charCodeAt(peg$currPos) === 93) {\n                s3 = peg$c9;\n                peg$currPos++;\n              } else {\n                s3 = peg$FAILED;\n                if (peg$silentFails === 0) { peg$fail(peg$c10); }\n              }\n              if (s3 !== peg$FAILED) {\n                peg$reportedPos = s0;\n                s1 = peg$c58(s2);\n                s0 = s1;\n              } else {\n                peg$currPos = s0;\n                s0 = peg$c2;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$c2;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$c2;\n          }\n          if (s0 === peg$FAILED) {\n            s0 = peg$currPos;\n            if (input.charCodeAt(peg$currPos) === 91) {\n              s1 = peg$c7;\n              peg$currPos++;\n            } else {\n              s1 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c8); }\n            }\n            if (s1 !== peg$FAILED) {\n              s2 = [];\n              s3 = peg$parsearray_value_list();\n              if (s3 !== peg$FAILED) {\n                while (s3 !== peg$FAILED) {\n                  s2.push(s3);\n                  s3 = peg$parsearray_value_list();\n                }\n              } else {\n                s2 = peg$c2;\n              }\n              if (s2 !== peg$FAILED) {\n                s3 = peg$parsearray_value();\n                if (s3 !== peg$FAILED) {\n                  if (input.charCodeAt(peg$currPos) === 93) {\n                    s4 = peg$c9;\n                    peg$currPos++;\n                  } else {\n                    s4 = peg$FAILED;\n                    if (peg$silentFails === 0) { peg$fail(peg$c10); }\n                  }\n                  if (s4 !== peg$FAILED) {\n                    peg$reportedPos = s0;\n                    s1 = peg$c59(s2, s3);\n                    s0 = s1;\n                  } else {\n                    peg$currPos = s0;\n                    s0 = peg$c2;\n                  }\n                } else {\n                  peg$currPos = s0;\n                  s0 = peg$c2;\n                }\n              } else {\n                peg$currPos = s0;\n                s0 = peg$c2;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$c2;\n            }\n          }\n        }\n      }\n\n      peg$cache[key] = { nextPos: peg$currPos, result: s0 };\n\n      return s0;\n    }\n\n    function peg$parsearray_value() {\n      var s0, s1, s2, s3, s4;\n\n      var key    = peg$currPos * 45 + 25,\n          cached = peg$cache[key];\n\n      if (cached) {\n        peg$currPos = cached.nextPos;\n        return cached.result;\n      }\n\n      s0 = peg$currPos;\n      s1 = [];\n      s2 = peg$parsearray_sep();\n      while (s2 !== peg$FAILED) {\n        s1.push(s2);\n        s2 = peg$parsearray_sep();\n      }\n      if (s1 !== peg$FAILED) {\n        s2 = peg$parsevalue();\n        if (s2 !== peg$FAILED) {\n          s3 = [];\n          s4 = peg$parsearray_sep();\n          while (s4 !== peg$FAILED) {\n            s3.push(s4);\n            s4 = peg$parsearray_sep();\n          }\n          if (s3 !== peg$FAILED) {\n            peg$reportedPos = s0;\n            s1 = peg$c60(s2);\n            s0 = s1;\n          } else {\n            peg$currPos = s0;\n            s0 = peg$c2;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$c2;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$c2;\n      }\n\n      peg$cache[key] = { nextPos: peg$currPos, result: s0 };\n\n      return s0;\n    }\n\n    function peg$parsearray_value_list() {\n      var s0, s1, s2, s3, s4, s5, s6;\n\n      var key    = peg$currPos * 45 + 26,\n          cached = peg$cache[key];\n\n      if (cached) {\n        peg$currPos = cached.nextPos;\n        return cached.result;\n      }\n\n      s0 = peg$currPos;\n      s1 = [];\n      s2 = peg$parsearray_sep();\n      while (s2 !== peg$FAILED) {\n        s1.push(s2);\n        s2 = peg$parsearray_sep();\n      }\n      if (s1 !== peg$FAILED) {\n        s2 = peg$parsevalue();\n        if (s2 !== peg$FAILED) {\n          s3 = [];\n          s4 = peg$parsearray_sep();\n          while (s4 !== peg$FAILED) {\n            s3.push(s4);\n            s4 = peg$parsearray_sep();\n          }\n          if (s3 !== peg$FAILED) {\n            if (input.charCodeAt(peg$currPos) === 44) {\n              s4 = peg$c61;\n              peg$currPos++;\n            } else {\n              s4 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c62); }\n            }\n            if (s4 !== peg$FAILED) {\n              s5 = [];\n              s6 = peg$parsearray_sep();\n              while (s6 !== peg$FAILED) {\n                s5.push(s6);\n                s6 = peg$parsearray_sep();\n              }\n              if (s5 !== peg$FAILED) {\n                peg$reportedPos = s0;\n                s1 = peg$c60(s2);\n                s0 = s1;\n              } else {\n                peg$currPos = s0;\n                s0 = peg$c2;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$c2;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$c2;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$c2;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$c2;\n      }\n\n      peg$cache[key] = { nextPos: peg$currPos, result: s0 };\n\n      return s0;\n    }\n\n    function peg$parsearray_sep() {\n      var s0;\n\n      var key    = peg$currPos * 45 + 27,\n          cached = peg$cache[key];\n\n      if (cached) {\n        peg$currPos = cached.nextPos;\n        return cached.result;\n      }\n\n      s0 = peg$parseS();\n      if (s0 === peg$FAILED) {\n        s0 = peg$parseNL();\n        if (s0 === peg$FAILED) {\n          s0 = peg$parsecomment();\n        }\n      }\n\n      peg$cache[key] = { nextPos: peg$currPos, result: s0 };\n\n      return s0;\n    }\n\n    function peg$parseinline_table() {\n      var s0, s1, s2, s3, s4, s5;\n\n      var key    = peg$currPos * 45 + 28,\n          cached = peg$cache[key];\n\n      if (cached) {\n        peg$currPos = cached.nextPos;\n        return cached.result;\n      }\n\n      s0 = peg$currPos;\n      if (input.charCodeAt(peg$currPos) === 123) {\n        s1 = peg$c63;\n        peg$currPos++;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c64); }\n      }\n      if (s1 !== peg$FAILED) {\n        s2 = [];\n        s3 = peg$parseS();\n        while (s3 !== peg$FAILED) {\n          s2.push(s3);\n          s3 = peg$parseS();\n        }\n        if (s2 !== peg$FAILED) {\n          s3 = [];\n          s4 = peg$parseinline_table_assignment();\n          while (s4 !== peg$FAILED) {\n            s3.push(s4);\n            s4 = peg$parseinline_table_assignment();\n          }\n          if (s3 !== peg$FAILED) {\n            s4 = [];\n            s5 = peg$parseS();\n            while (s5 !== peg$FAILED) {\n              s4.push(s5);\n              s5 = peg$parseS();\n            }\n            if (s4 !== peg$FAILED) {\n              if (input.charCodeAt(peg$currPos) === 125) {\n                s5 = peg$c65;\n                peg$currPos++;\n              } else {\n                s5 = peg$FAILED;\n                if (peg$silentFails === 0) { peg$fail(peg$c66); }\n              }\n              if (s5 !== peg$FAILED) {\n                peg$reportedPos = s0;\n                s1 = peg$c67(s3);\n                s0 = s1;\n              } else {\n                peg$currPos = s0;\n                s0 = peg$c2;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$c2;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$c2;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$c2;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$c2;\n      }\n\n      peg$cache[key] = { nextPos: peg$currPos, result: s0 };\n\n      return s0;\n    }\n\n    function peg$parseinline_table_assignment() {\n      var s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, s10;\n\n      var key    = peg$currPos * 45 + 29,\n          cached = peg$cache[key];\n\n      if (cached) {\n        peg$currPos = cached.nextPos;\n        return cached.result;\n      }\n\n      s0 = peg$currPos;\n      s1 = [];\n      s2 = peg$parseS();\n      while (s2 !== peg$FAILED) {\n        s1.push(s2);\n        s2 = peg$parseS();\n      }\n      if (s1 !== peg$FAILED) {\n        s2 = peg$parsekey();\n        if (s2 !== peg$FAILED) {\n          s3 = [];\n          s4 = peg$parseS();\n          while (s4 !== peg$FAILED) {\n            s3.push(s4);\n            s4 = peg$parseS();\n          }\n          if (s3 !== peg$FAILED) {\n            if (input.charCodeAt(peg$currPos) === 61) {\n              s4 = peg$c18;\n              peg$currPos++;\n            } else {\n              s4 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c19); }\n            }\n            if (s4 !== peg$FAILED) {\n              s5 = [];\n              s6 = peg$parseS();\n              while (s6 !== peg$FAILED) {\n                s5.push(s6);\n                s6 = peg$parseS();\n              }\n              if (s5 !== peg$FAILED) {\n                s6 = peg$parsevalue();\n                if (s6 !== peg$FAILED) {\n                  s7 = [];\n                  s8 = peg$parseS();\n                  while (s8 !== peg$FAILED) {\n                    s7.push(s8);\n                    s8 = peg$parseS();\n                  }\n                  if (s7 !== peg$FAILED) {\n                    if (input.charCodeAt(peg$currPos) === 44) {\n                      s8 = peg$c61;\n                      peg$currPos++;\n                    } else {\n                      s8 = peg$FAILED;\n                      if (peg$silentFails === 0) { peg$fail(peg$c62); }\n                    }\n                    if (s8 !== peg$FAILED) {\n                      s9 = [];\n                      s10 = peg$parseS();\n                      while (s10 !== peg$FAILED) {\n                        s9.push(s10);\n                        s10 = peg$parseS();\n                      }\n                      if (s9 !== peg$FAILED) {\n                        peg$reportedPos = s0;\n                        s1 = peg$c68(s2, s6);\n                        s0 = s1;\n                      } else {\n                        peg$currPos = s0;\n                        s0 = peg$c2;\n                      }\n                    } else {\n                      peg$currPos = s0;\n                      s0 = peg$c2;\n                    }\n                  } else {\n                    peg$currPos = s0;\n                    s0 = peg$c2;\n                  }\n                } else {\n                  peg$currPos = s0;\n                  s0 = peg$c2;\n                }\n              } else {\n                peg$currPos = s0;\n                s0 = peg$c2;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$c2;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$c2;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$c2;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$c2;\n      }\n      if (s0 === peg$FAILED) {\n        s0 = peg$currPos;\n        s1 = [];\n        s2 = peg$parseS();\n        while (s2 !== peg$FAILED) {\n          s1.push(s2);\n          s2 = peg$parseS();\n        }\n        if (s1 !== peg$FAILED) {\n          s2 = peg$parsekey();\n          if (s2 !== peg$FAILED) {\n            s3 = [];\n            s4 = peg$parseS();\n            while (s4 !== peg$FAILED) {\n              s3.push(s4);\n              s4 = peg$parseS();\n            }\n            if (s3 !== peg$FAILED) {\n              if (input.charCodeAt(peg$currPos) === 61) {\n                s4 = peg$c18;\n                peg$currPos++;\n              } else {\n                s4 = peg$FAILED;\n                if (peg$silentFails === 0) { peg$fail(peg$c19); }\n              }\n              if (s4 !== peg$FAILED) {\n                s5 = [];\n                s6 = peg$parseS();\n                while (s6 !== peg$FAILED) {\n                  s5.push(s6);\n                  s6 = peg$parseS();\n                }\n                if (s5 !== peg$FAILED) {\n                  s6 = peg$parsevalue();\n                  if (s6 !== peg$FAILED) {\n                    peg$reportedPos = s0;\n                    s1 = peg$c68(s2, s6);\n                    s0 = s1;\n                  } else {\n                    peg$currPos = s0;\n                    s0 = peg$c2;\n                  }\n                } else {\n                  peg$currPos = s0;\n                  s0 = peg$c2;\n                }\n              } else {\n                peg$currPos = s0;\n                s0 = peg$c2;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$c2;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$c2;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$c2;\n        }\n      }\n\n      peg$cache[key] = { nextPos: peg$currPos, result: s0 };\n\n      return s0;\n    }\n\n    function peg$parsesecfragment() {\n      var s0, s1, s2;\n\n      var key    = peg$currPos * 45 + 30,\n          cached = peg$cache[key];\n\n      if (cached) {\n        peg$currPos = cached.nextPos;\n        return cached.result;\n      }\n\n      s0 = peg$currPos;\n      if (input.charCodeAt(peg$currPos) === 46) {\n        s1 = peg$c16;\n        peg$currPos++;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c17); }\n      }\n      if (s1 !== peg$FAILED) {\n        s2 = peg$parseDIGITS();\n        if (s2 !== peg$FAILED) {\n          peg$reportedPos = s0;\n          s1 = peg$c69(s2);\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$c2;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$c2;\n      }\n\n      peg$cache[key] = { nextPos: peg$currPos, result: s0 };\n\n      return s0;\n    }\n\n    function peg$parsedate() {\n      var s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, s10, s11;\n\n      var key    = peg$currPos * 45 + 31,\n          cached = peg$cache[key];\n\n      if (cached) {\n        peg$currPos = cached.nextPos;\n        return cached.result;\n      }\n\n      s0 = peg$currPos;\n      s1 = peg$currPos;\n      s2 = peg$parseDIGIT_OR_UNDER();\n      if (s2 !== peg$FAILED) {\n        s3 = peg$parseDIGIT_OR_UNDER();\n        if (s3 !== peg$FAILED) {\n          s4 = peg$parseDIGIT_OR_UNDER();\n          if (s4 !== peg$FAILED) {\n            s5 = peg$parseDIGIT_OR_UNDER();\n            if (s5 !== peg$FAILED) {\n              if (input.charCodeAt(peg$currPos) === 45) {\n                s6 = peg$c46;\n                peg$currPos++;\n              } else {\n                s6 = peg$FAILED;\n                if (peg$silentFails === 0) { peg$fail(peg$c47); }\n              }\n              if (s6 !== peg$FAILED) {\n                s7 = peg$parseDIGIT_OR_UNDER();\n                if (s7 !== peg$FAILED) {\n                  s8 = peg$parseDIGIT_OR_UNDER();\n                  if (s8 !== peg$FAILED) {\n                    if (input.charCodeAt(peg$currPos) === 45) {\n                      s9 = peg$c46;\n                      peg$currPos++;\n                    } else {\n                      s9 = peg$FAILED;\n                      if (peg$silentFails === 0) { peg$fail(peg$c47); }\n                    }\n                    if (s9 !== peg$FAILED) {\n                      s10 = peg$parseDIGIT_OR_UNDER();\n                      if (s10 !== peg$FAILED) {\n                        s11 = peg$parseDIGIT_OR_UNDER();\n                        if (s11 !== peg$FAILED) {\n                          s2 = [s2, s3, s4, s5, s6, s7, s8, s9, s10, s11];\n                          s1 = s2;\n                        } else {\n                          peg$currPos = s1;\n                          s1 = peg$c2;\n                        }\n                      } else {\n                        peg$currPos = s1;\n                        s1 = peg$c2;\n                      }\n                    } else {\n                      peg$currPos = s1;\n                      s1 = peg$c2;\n                    }\n                  } else {\n                    peg$currPos = s1;\n                    s1 = peg$c2;\n                  }\n                } else {\n                  peg$currPos = s1;\n                  s1 = peg$c2;\n                }\n              } else {\n                peg$currPos = s1;\n                s1 = peg$c2;\n              }\n            } else {\n              peg$currPos = s1;\n              s1 = peg$c2;\n            }\n          } else {\n            peg$currPos = s1;\n            s1 = peg$c2;\n          }\n        } else {\n          peg$currPos = s1;\n          s1 = peg$c2;\n        }\n      } else {\n        peg$currPos = s1;\n        s1 = peg$c2;\n      }\n      if (s1 !== peg$FAILED) {\n        peg$reportedPos = s0;\n        s1 = peg$c70(s1);\n      }\n      s0 = s1;\n\n      peg$cache[key] = { nextPos: peg$currPos, result: s0 };\n\n      return s0;\n    }\n\n    function peg$parsetime() {\n      var s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, s10;\n\n      var key    = peg$currPos * 45 + 32,\n          cached = peg$cache[key];\n\n      if (cached) {\n        peg$currPos = cached.nextPos;\n        return cached.result;\n      }\n\n      s0 = peg$currPos;\n      s1 = peg$currPos;\n      s2 = peg$parseDIGIT_OR_UNDER();\n      if (s2 !== peg$FAILED) {\n        s3 = peg$parseDIGIT_OR_UNDER();\n        if (s3 !== peg$FAILED) {\n          if (input.charCodeAt(peg$currPos) === 58) {\n            s4 = peg$c71;\n            peg$currPos++;\n          } else {\n            s4 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c72); }\n          }\n          if (s4 !== peg$FAILED) {\n            s5 = peg$parseDIGIT_OR_UNDER();\n            if (s5 !== peg$FAILED) {\n              s6 = peg$parseDIGIT_OR_UNDER();\n              if (s6 !== peg$FAILED) {\n                if (input.charCodeAt(peg$currPos) === 58) {\n                  s7 = peg$c71;\n                  peg$currPos++;\n                } else {\n                  s7 = peg$FAILED;\n                  if (peg$silentFails === 0) { peg$fail(peg$c72); }\n                }\n                if (s7 !== peg$FAILED) {\n                  s8 = peg$parseDIGIT_OR_UNDER();\n                  if (s8 !== peg$FAILED) {\n                    s9 = peg$parseDIGIT_OR_UNDER();\n                    if (s9 !== peg$FAILED) {\n                      s10 = peg$parsesecfragment();\n                      if (s10 === peg$FAILED) {\n                        s10 = peg$c27;\n                      }\n                      if (s10 !== peg$FAILED) {\n                        s2 = [s2, s3, s4, s5, s6, s7, s8, s9, s10];\n                        s1 = s2;\n                      } else {\n                        peg$currPos = s1;\n                        s1 = peg$c2;\n                      }\n                    } else {\n                      peg$currPos = s1;\n                      s1 = peg$c2;\n                    }\n                  } else {\n                    peg$currPos = s1;\n                    s1 = peg$c2;\n                  }\n                } else {\n                  peg$currPos = s1;\n                  s1 = peg$c2;\n                }\n              } else {\n                peg$currPos = s1;\n                s1 = peg$c2;\n              }\n            } else {\n              peg$currPos = s1;\n              s1 = peg$c2;\n            }\n          } else {\n            peg$currPos = s1;\n            s1 = peg$c2;\n          }\n        } else {\n          peg$currPos = s1;\n          s1 = peg$c2;\n        }\n      } else {\n        peg$currPos = s1;\n        s1 = peg$c2;\n      }\n      if (s1 !== peg$FAILED) {\n        peg$reportedPos = s0;\n        s1 = peg$c73(s1);\n      }\n      s0 = s1;\n\n      peg$cache[key] = { nextPos: peg$currPos, result: s0 };\n\n      return s0;\n    }\n\n    function peg$parsetime_with_offset() {\n      var s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, s10, s11, s12, s13, s14, s15, s16;\n\n      var key    = peg$currPos * 45 + 33,\n          cached = peg$cache[key];\n\n      if (cached) {\n        peg$currPos = cached.nextPos;\n        return cached.result;\n      }\n\n      s0 = peg$currPos;\n      s1 = peg$currPos;\n      s2 = peg$parseDIGIT_OR_UNDER();\n      if (s2 !== peg$FAILED) {\n        s3 = peg$parseDIGIT_OR_UNDER();\n        if (s3 !== peg$FAILED) {\n          if (input.charCodeAt(peg$currPos) === 58) {\n            s4 = peg$c71;\n            peg$currPos++;\n          } else {\n            s4 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c72); }\n          }\n          if (s4 !== peg$FAILED) {\n            s5 = peg$parseDIGIT_OR_UNDER();\n            if (s5 !== peg$FAILED) {\n              s6 = peg$parseDIGIT_OR_UNDER();\n              if (s6 !== peg$FAILED) {\n                if (input.charCodeAt(peg$currPos) === 58) {\n                  s7 = peg$c71;\n                  peg$currPos++;\n                } else {\n                  s7 = peg$FAILED;\n                  if (peg$silentFails === 0) { peg$fail(peg$c72); }\n                }\n                if (s7 !== peg$FAILED) {\n                  s8 = peg$parseDIGIT_OR_UNDER();\n                  if (s8 !== peg$FAILED) {\n                    s9 = peg$parseDIGIT_OR_UNDER();\n                    if (s9 !== peg$FAILED) {\n                      s10 = peg$parsesecfragment();\n                      if (s10 === peg$FAILED) {\n                        s10 = peg$c27;\n                      }\n                      if (s10 !== peg$FAILED) {\n                        if (input.charCodeAt(peg$currPos) === 45) {\n                          s11 = peg$c46;\n                          peg$currPos++;\n                        } else {\n                          s11 = peg$FAILED;\n                          if (peg$silentFails === 0) { peg$fail(peg$c47); }\n                        }\n                        if (s11 === peg$FAILED) {\n                          if (input.charCodeAt(peg$currPos) === 43) {\n                            s11 = peg$c43;\n                            peg$currPos++;\n                          } else {\n                            s11 = peg$FAILED;\n                            if (peg$silentFails === 0) { peg$fail(peg$c44); }\n                          }\n                        }\n                        if (s11 !== peg$FAILED) {\n                          s12 = peg$parseDIGIT_OR_UNDER();\n                          if (s12 !== peg$FAILED) {\n                            s13 = peg$parseDIGIT_OR_UNDER();\n                            if (s13 !== peg$FAILED) {\n                              if (input.charCodeAt(peg$currPos) === 58) {\n                                s14 = peg$c71;\n                                peg$currPos++;\n                              } else {\n                                s14 = peg$FAILED;\n                                if (peg$silentFails === 0) { peg$fail(peg$c72); }\n                              }\n                              if (s14 !== peg$FAILED) {\n                                s15 = peg$parseDIGIT_OR_UNDER();\n                                if (s15 !== peg$FAILED) {\n                                  s16 = peg$parseDIGIT_OR_UNDER();\n                                  if (s16 !== peg$FAILED) {\n                                    s2 = [s2, s3, s4, s5, s6, s7, s8, s9, s10, s11, s12, s13, s14, s15, s16];\n                                    s1 = s2;\n                                  } else {\n                                    peg$currPos = s1;\n                                    s1 = peg$c2;\n                                  }\n                                } else {\n                                  peg$currPos = s1;\n                                  s1 = peg$c2;\n                                }\n                              } else {\n                                peg$currPos = s1;\n                                s1 = peg$c2;\n                              }\n                            } else {\n                              peg$currPos = s1;\n                              s1 = peg$c2;\n                            }\n                          } else {\n                            peg$currPos = s1;\n                            s1 = peg$c2;\n                          }\n                        } else {\n                          peg$currPos = s1;\n                          s1 = peg$c2;\n                        }\n                      } else {\n                        peg$currPos = s1;\n                        s1 = peg$c2;\n                      }\n                    } else {\n                      peg$currPos = s1;\n                      s1 = peg$c2;\n                    }\n                  } else {\n                    peg$currPos = s1;\n                    s1 = peg$c2;\n                  }\n                } else {\n                  peg$currPos = s1;\n                  s1 = peg$c2;\n                }\n              } else {\n                peg$currPos = s1;\n                s1 = peg$c2;\n              }\n            } else {\n              peg$currPos = s1;\n              s1 = peg$c2;\n            }\n          } else {\n            peg$currPos = s1;\n            s1 = peg$c2;\n          }\n        } else {\n          peg$currPos = s1;\n          s1 = peg$c2;\n        }\n      } else {\n        peg$currPos = s1;\n        s1 = peg$c2;\n      }\n      if (s1 !== peg$FAILED) {\n        peg$reportedPos = s0;\n        s1 = peg$c73(s1);\n      }\n      s0 = s1;\n\n      peg$cache[key] = { nextPos: peg$currPos, result: s0 };\n\n      return s0;\n    }\n\n    function peg$parsedatetime() {\n      var s0, s1, s2, s3, s4;\n\n      var key    = peg$currPos * 45 + 34,\n          cached = peg$cache[key];\n\n      if (cached) {\n        peg$currPos = cached.nextPos;\n        return cached.result;\n      }\n\n      s0 = peg$currPos;\n      s1 = peg$parsedate();\n      if (s1 !== peg$FAILED) {\n        if (input.charCodeAt(peg$currPos) === 84) {\n          s2 = peg$c74;\n          peg$currPos++;\n        } else {\n          s2 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c75); }\n        }\n        if (s2 !== peg$FAILED) {\n          s3 = peg$parsetime();\n          if (s3 !== peg$FAILED) {\n            if (input.charCodeAt(peg$currPos) === 90) {\n              s4 = peg$c76;\n              peg$currPos++;\n            } else {\n              s4 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c77); }\n            }\n            if (s4 !== peg$FAILED) {\n              peg$reportedPos = s0;\n              s1 = peg$c78(s1, s3);\n              s0 = s1;\n            } else {\n              peg$currPos = s0;\n              s0 = peg$c2;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$c2;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$c2;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$c2;\n      }\n      if (s0 === peg$FAILED) {\n        s0 = peg$currPos;\n        s1 = peg$parsedate();\n        if (s1 !== peg$FAILED) {\n          if (input.charCodeAt(peg$currPos) === 84) {\n            s2 = peg$c74;\n            peg$currPos++;\n          } else {\n            s2 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c75); }\n          }\n          if (s2 !== peg$FAILED) {\n            s3 = peg$parsetime_with_offset();\n            if (s3 !== peg$FAILED) {\n              peg$reportedPos = s0;\n              s1 = peg$c79(s1, s3);\n              s0 = s1;\n            } else {\n              peg$currPos = s0;\n              s0 = peg$c2;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$c2;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$c2;\n        }\n      }\n\n      peg$cache[key] = { nextPos: peg$currPos, result: s0 };\n\n      return s0;\n    }\n\n    function peg$parseS() {\n      var s0;\n\n      var key    = peg$currPos * 45 + 35,\n          cached = peg$cache[key];\n\n      if (cached) {\n        peg$currPos = cached.nextPos;\n        return cached.result;\n      }\n\n      if (peg$c80.test(input.charAt(peg$currPos))) {\n        s0 = input.charAt(peg$currPos);\n        peg$currPos++;\n      } else {\n        s0 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c81); }\n      }\n\n      peg$cache[key] = { nextPos: peg$currPos, result: s0 };\n\n      return s0;\n    }\n\n    function peg$parseNL() {\n      var s0, s1, s2;\n\n      var key    = peg$currPos * 45 + 36,\n          cached = peg$cache[key];\n\n      if (cached) {\n        peg$currPos = cached.nextPos;\n        return cached.result;\n      }\n\n      if (input.charCodeAt(peg$currPos) === 10) {\n        s0 = peg$c82;\n        peg$currPos++;\n      } else {\n        s0 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c83); }\n      }\n      if (s0 === peg$FAILED) {\n        s0 = peg$currPos;\n        if (input.charCodeAt(peg$currPos) === 13) {\n          s1 = peg$c84;\n          peg$currPos++;\n        } else {\n          s1 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c85); }\n        }\n        if (s1 !== peg$FAILED) {\n          if (input.charCodeAt(peg$currPos) === 10) {\n            s2 = peg$c82;\n            peg$currPos++;\n          } else {\n            s2 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c83); }\n          }\n          if (s2 !== peg$FAILED) {\n            s1 = [s1, s2];\n            s0 = s1;\n          } else {\n            peg$currPos = s0;\n            s0 = peg$c2;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$c2;\n        }\n      }\n\n      peg$cache[key] = { nextPos: peg$currPos, result: s0 };\n\n      return s0;\n    }\n\n    function peg$parseNLS() {\n      var s0;\n\n      var key    = peg$currPos * 45 + 37,\n          cached = peg$cache[key];\n\n      if (cached) {\n        peg$currPos = cached.nextPos;\n        return cached.result;\n      }\n\n      s0 = peg$parseNL();\n      if (s0 === peg$FAILED) {\n        s0 = peg$parseS();\n      }\n\n      peg$cache[key] = { nextPos: peg$currPos, result: s0 };\n\n      return s0;\n    }\n\n    function peg$parseEOF() {\n      var s0, s1;\n\n      var key    = peg$currPos * 45 + 38,\n          cached = peg$cache[key];\n\n      if (cached) {\n        peg$currPos = cached.nextPos;\n        return cached.result;\n      }\n\n      s0 = peg$currPos;\n      peg$silentFails++;\n      if (input.length > peg$currPos) {\n        s1 = input.charAt(peg$currPos);\n        peg$currPos++;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c6); }\n      }\n      peg$silentFails--;\n      if (s1 === peg$FAILED) {\n        s0 = peg$c5;\n      } else {\n        peg$currPos = s0;\n        s0 = peg$c2;\n      }\n\n      peg$cache[key] = { nextPos: peg$currPos, result: s0 };\n\n      return s0;\n    }\n\n    function peg$parseHEX() {\n      var s0;\n\n      var key    = peg$currPos * 45 + 39,\n          cached = peg$cache[key];\n\n      if (cached) {\n        peg$currPos = cached.nextPos;\n        return cached.result;\n      }\n\n      if (peg$c86.test(input.charAt(peg$currPos))) {\n        s0 = input.charAt(peg$currPos);\n        peg$currPos++;\n      } else {\n        s0 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c87); }\n      }\n\n      peg$cache[key] = { nextPos: peg$currPos, result: s0 };\n\n      return s0;\n    }\n\n    function peg$parseDIGIT_OR_UNDER() {\n      var s0, s1;\n\n      var key    = peg$currPos * 45 + 40,\n          cached = peg$cache[key];\n\n      if (cached) {\n        peg$currPos = cached.nextPos;\n        return cached.result;\n      }\n\n      if (peg$c88.test(input.charAt(peg$currPos))) {\n        s0 = input.charAt(peg$currPos);\n        peg$currPos++;\n      } else {\n        s0 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c89); }\n      }\n      if (s0 === peg$FAILED) {\n        s0 = peg$currPos;\n        if (input.charCodeAt(peg$currPos) === 95) {\n          s1 = peg$c90;\n          peg$currPos++;\n        } else {\n          s1 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c91); }\n        }\n        if (s1 !== peg$FAILED) {\n          peg$reportedPos = s0;\n          s1 = peg$c92();\n        }\n        s0 = s1;\n      }\n\n      peg$cache[key] = { nextPos: peg$currPos, result: s0 };\n\n      return s0;\n    }\n\n    function peg$parseASCII_BASIC() {\n      var s0;\n\n      var key    = peg$currPos * 45 + 41,\n          cached = peg$cache[key];\n\n      if (cached) {\n        peg$currPos = cached.nextPos;\n        return cached.result;\n      }\n\n      if (peg$c93.test(input.charAt(peg$currPos))) {\n        s0 = input.charAt(peg$currPos);\n        peg$currPos++;\n      } else {\n        s0 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c94); }\n      }\n\n      peg$cache[key] = { nextPos: peg$currPos, result: s0 };\n\n      return s0;\n    }\n\n    function peg$parseDIGITS() {\n      var s0, s1, s2;\n\n      var key    = peg$currPos * 45 + 42,\n          cached = peg$cache[key];\n\n      if (cached) {\n        peg$currPos = cached.nextPos;\n        return cached.result;\n      }\n\n      s0 = peg$currPos;\n      s1 = [];\n      s2 = peg$parseDIGIT_OR_UNDER();\n      if (s2 !== peg$FAILED) {\n        while (s2 !== peg$FAILED) {\n          s1.push(s2);\n          s2 = peg$parseDIGIT_OR_UNDER();\n        }\n      } else {\n        s1 = peg$c2;\n      }\n      if (s1 !== peg$FAILED) {\n        peg$reportedPos = s0;\n        s1 = peg$c95(s1);\n      }\n      s0 = s1;\n\n      peg$cache[key] = { nextPos: peg$currPos, result: s0 };\n\n      return s0;\n    }\n\n    function peg$parseESCAPED() {\n      var s0, s1;\n\n      var key    = peg$currPos * 45 + 43,\n          cached = peg$cache[key];\n\n      if (cached) {\n        peg$currPos = cached.nextPos;\n        return cached.result;\n      }\n\n      s0 = peg$currPos;\n      if (input.substr(peg$currPos, 2) === peg$c96) {\n        s1 = peg$c96;\n        peg$currPos += 2;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c97); }\n      }\n      if (s1 !== peg$FAILED) {\n        peg$reportedPos = s0;\n        s1 = peg$c98();\n      }\n      s0 = s1;\n      if (s0 === peg$FAILED) {\n        s0 = peg$currPos;\n        if (input.substr(peg$currPos, 2) === peg$c99) {\n          s1 = peg$c99;\n          peg$currPos += 2;\n        } else {\n          s1 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c100); }\n        }\n        if (s1 !== peg$FAILED) {\n          peg$reportedPos = s0;\n          s1 = peg$c101();\n        }\n        s0 = s1;\n        if (s0 === peg$FAILED) {\n          s0 = peg$currPos;\n          if (input.substr(peg$currPos, 2) === peg$c102) {\n            s1 = peg$c102;\n            peg$currPos += 2;\n          } else {\n            s1 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c103); }\n          }\n          if (s1 !== peg$FAILED) {\n            peg$reportedPos = s0;\n            s1 = peg$c104();\n          }\n          s0 = s1;\n          if (s0 === peg$FAILED) {\n            s0 = peg$currPos;\n            if (input.substr(peg$currPos, 2) === peg$c105) {\n              s1 = peg$c105;\n              peg$currPos += 2;\n            } else {\n              s1 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c106); }\n            }\n            if (s1 !== peg$FAILED) {\n              peg$reportedPos = s0;\n              s1 = peg$c107();\n            }\n            s0 = s1;\n            if (s0 === peg$FAILED) {\n              s0 = peg$currPos;\n              if (input.substr(peg$currPos, 2) === peg$c108) {\n                s1 = peg$c108;\n                peg$currPos += 2;\n              } else {\n                s1 = peg$FAILED;\n                if (peg$silentFails === 0) { peg$fail(peg$c109); }\n              }\n              if (s1 !== peg$FAILED) {\n                peg$reportedPos = s0;\n                s1 = peg$c110();\n              }\n              s0 = s1;\n              if (s0 === peg$FAILED) {\n                s0 = peg$currPos;\n                if (input.substr(peg$currPos, 2) === peg$c111) {\n                  s1 = peg$c111;\n                  peg$currPos += 2;\n                } else {\n                  s1 = peg$FAILED;\n                  if (peg$silentFails === 0) { peg$fail(peg$c112); }\n                }\n                if (s1 !== peg$FAILED) {\n                  peg$reportedPos = s0;\n                  s1 = peg$c113();\n                }\n                s0 = s1;\n                if (s0 === peg$FAILED) {\n                  s0 = peg$currPos;\n                  if (input.substr(peg$currPos, 2) === peg$c114) {\n                    s1 = peg$c114;\n                    peg$currPos += 2;\n                  } else {\n                    s1 = peg$FAILED;\n                    if (peg$silentFails === 0) { peg$fail(peg$c115); }\n                  }\n                  if (s1 !== peg$FAILED) {\n                    peg$reportedPos = s0;\n                    s1 = peg$c116();\n                  }\n                  s0 = s1;\n                  if (s0 === peg$FAILED) {\n                    s0 = peg$parseESCAPED_UNICODE();\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n\n      peg$cache[key] = { nextPos: peg$currPos, result: s0 };\n\n      return s0;\n    }\n\n    function peg$parseESCAPED_UNICODE() {\n      var s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, s10;\n\n      var key    = peg$currPos * 45 + 44,\n          cached = peg$cache[key];\n\n      if (cached) {\n        peg$currPos = cached.nextPos;\n        return cached.result;\n      }\n\n      s0 = peg$currPos;\n      if (input.substr(peg$currPos, 2) === peg$c117) {\n        s1 = peg$c117;\n        peg$currPos += 2;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c118); }\n      }\n      if (s1 !== peg$FAILED) {\n        s2 = peg$currPos;\n        s3 = peg$parseHEX();\n        if (s3 !== peg$FAILED) {\n          s4 = peg$parseHEX();\n          if (s4 !== peg$FAILED) {\n            s5 = peg$parseHEX();\n            if (s5 !== peg$FAILED) {\n              s6 = peg$parseHEX();\n              if (s6 !== peg$FAILED) {\n                s7 = peg$parseHEX();\n                if (s7 !== peg$FAILED) {\n                  s8 = peg$parseHEX();\n                  if (s8 !== peg$FAILED) {\n                    s9 = peg$parseHEX();\n                    if (s9 !== peg$FAILED) {\n                      s10 = peg$parseHEX();\n                      if (s10 !== peg$FAILED) {\n                        s3 = [s3, s4, s5, s6, s7, s8, s9, s10];\n                        s2 = s3;\n                      } else {\n                        peg$currPos = s2;\n                        s2 = peg$c2;\n                      }\n                    } else {\n                      peg$currPos = s2;\n                      s2 = peg$c2;\n                    }\n                  } else {\n                    peg$currPos = s2;\n                    s2 = peg$c2;\n                  }\n                } else {\n                  peg$currPos = s2;\n                  s2 = peg$c2;\n                }\n              } else {\n                peg$currPos = s2;\n                s2 = peg$c2;\n              }\n            } else {\n              peg$currPos = s2;\n              s2 = peg$c2;\n            }\n          } else {\n            peg$currPos = s2;\n            s2 = peg$c2;\n          }\n        } else {\n          peg$currPos = s2;\n          s2 = peg$c2;\n        }\n        if (s2 !== peg$FAILED) {\n          peg$reportedPos = s0;\n          s1 = peg$c119(s2);\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$c2;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$c2;\n      }\n      if (s0 === peg$FAILED) {\n        s0 = peg$currPos;\n        if (input.substr(peg$currPos, 2) === peg$c120) {\n          s1 = peg$c120;\n          peg$currPos += 2;\n        } else {\n          s1 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c121); }\n        }\n        if (s1 !== peg$FAILED) {\n          s2 = peg$currPos;\n          s3 = peg$parseHEX();\n          if (s3 !== peg$FAILED) {\n            s4 = peg$parseHEX();\n            if (s4 !== peg$FAILED) {\n              s5 = peg$parseHEX();\n              if (s5 !== peg$FAILED) {\n                s6 = peg$parseHEX();\n                if (s6 !== peg$FAILED) {\n                  s3 = [s3, s4, s5, s6];\n                  s2 = s3;\n                } else {\n                  peg$currPos = s2;\n                  s2 = peg$c2;\n                }\n              } else {\n                peg$currPos = s2;\n                s2 = peg$c2;\n              }\n            } else {\n              peg$currPos = s2;\n              s2 = peg$c2;\n            }\n          } else {\n            peg$currPos = s2;\n            s2 = peg$c2;\n          }\n          if (s2 !== peg$FAILED) {\n            peg$reportedPos = s0;\n            s1 = peg$c119(s2);\n            s0 = s1;\n          } else {\n            peg$currPos = s0;\n            s0 = peg$c2;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$c2;\n        }\n      }\n\n      peg$cache[key] = { nextPos: peg$currPos, result: s0 };\n\n      return s0;\n    }\n\n\n      var nodes = [];\n\n      function genError(err, line, col) {\n        var ex = new Error(err);\n        ex.line = line;\n        ex.column = col;\n        throw ex;\n      }\n\n      function addNode(node) {\n        nodes.push(node);\n      }\n\n      function node(type, value, line, column, key) {\n        var obj = { type: type, value: value, line: line(), column: column() };\n        if (key) obj.key = key;\n        return obj;\n      }\n\n      function convertCodePoint(str, line, col) {\n        var num = parseInt(\"0x\" + str);\n\n        if (\n          !isFinite(num) ||\n          Math.floor(num) != num ||\n          num < 0 ||\n          num > 0x10FFFF ||\n          (num > 0xD7FF && num < 0xE000)\n        ) {\n          genError(\"Invalid Unicode escape code: \" + str, line, col);\n        } else {\n          return fromCodePoint(num);\n        }\n      }\n\n      function fromCodePoint() {\n        var MAX_SIZE = 0x4000;\n        var codeUnits = [];\n        var highSurrogate;\n        var lowSurrogate;\n        var index = -1;\n        var length = arguments.length;\n        if (!length) {\n          return '';\n        }\n        var result = '';\n        while (++index < length) {\n          var codePoint = Number(arguments[index]);\n          if (codePoint <= 0xFFFF) { // BMP code point\n            codeUnits.push(codePoint);\n          } else { // Astral code point; split in surrogate halves\n            // http://mathiasbynens.be/notes/javascript-encoding#surrogate-formulae\n            codePoint -= 0x10000;\n            highSurrogate = (codePoint >> 10) + 0xD800;\n            lowSurrogate = (codePoint % 0x400) + 0xDC00;\n            codeUnits.push(highSurrogate, lowSurrogate);\n          }\n          if (index + 1 == length || codeUnits.length > MAX_SIZE) {\n            result += String.fromCharCode.apply(null, codeUnits);\n            codeUnits.length = 0;\n          }\n        }\n        return result;\n      }\n\n\n    peg$result = peg$startRuleFunction();\n\n    if (peg$result !== peg$FAILED && peg$currPos === input.length) {\n      return peg$result;\n    } else {\n      if (peg$result !== peg$FAILED && peg$currPos < input.length) {\n        peg$fail({ type: \"end\", description: \"end of input\" });\n      }\n\n      throw peg$buildException(null, peg$maxFailExpected, peg$maxFailPos);\n    }\n  }\n\n  return {\n    SyntaxError: SyntaxError,\n    parse:       parse\n  };\n})();\n","// @flow\n\nimport SLW from './SLW'\nimport Tile from './Tile'\nimport { crop } from './util'\n\n// Browser editor for SLW levels.\nexport default class BrowserSLW {\n  header: HTMLElement\n\n  game: SLW\n\n  constructor(game: SLW) {\n    this.game = game\n    this.header = document.getElementById('header')\n\n    // Editor toggle -----------------------\n    const editorToggle = this.addToggle(class extends Toggle {\n      onCreate() {\n        this.setTitle('Editor Mode')\n        this.setChecked(false)\n        this.setDisabled(true)\n      }\n\n      onCheckedChanged() {\n        const el = document.getElementById('toolbar')\n        if (this.checked) {\n          let tiles = [ '=', '-', '?', 'x', '~', 'C', 'P', '0' ]\n          let tileEls: Array <Image> = []\n\n          for (let tileid of tiles) {\n            const tile = new (Tile.get(tileid))(game)\n\n            let img = crop(game.level.tileset, Tile.size, Tile.size, tile.texPosition[0] * Tile.size, tile.texPosition[1] * Tile.size)\n            img.classList.add('tile')\n\n            img.addEventListener('click', evt => {\n              for (let tileEl of tileEls) tileEl.classList.remove('selected')\n\n              img.classList.add('selected')\n              game.tileToPaint = Tile.get(tileid)\n            })\n\n            tileEls.push(img)\n            el.appendChild(img)\n          }\n\n          tileEls[0].click()\n\n        } else {\n          el.innerHTML = ''\n        }\n\n        game.level.editorEnabled = this.checked\n      }\n    })\n\n    game.events.addEventListener('levelchanged', ({ level }) => {\n      if (level.meta.special.includes('world')) {\n        editorToggle.setDisabled(true)\n      } else {\n        editorToggle.setDisabled(false)\n      }\n    })\n\n    // Gamepad toggle ----------------------\n    this.addToggle(class extends Toggle {\n      onCreate() {\n        this.setTitle('Gamepad')\n        this.load('gamepad-support')\n\n        if (!game.gamepadSupport) {\n          this.setDisabled(true)\n        }\n      }\n\n      onDestroy() {\n        this.save('gamepad-support')\n      }\n\n      onCheckedChanged() {\n        game.gamepadEnabled = this.checked\n      }\n    })\n  }\n\n  // Add a global toggle control.\n  addToggle(toggleClass: Class<Toggle>) {\n    const toggle = new toggleClass()\n\n    const toggles = this.header.querySelector('#toggles')\n    toggles.appendChild(toggle.btn)\n\n    return toggle\n  }\n}\n\nclass Toggle {\n  checked: boolean\n  disabled: boolean\n\n  btn: HTMLElement\n\n  constructor() {\n    this.btn = document.createElement('button')\n\n    this.btn.addEventListener('click', () => {\n      this.setChecked(!this.checked)\n    })\n\n    this.onCreate()\n\n    window.addEventListener('beforeunload', () => {\n      this.onDestroy()\n    })\n  }\n\n  setChecked(newChecked: boolean) {\n    this.checked = newChecked\n    if (this.checked) {\n      this.btn.classList.add('checked')\n      this.btn.classList.remove('unchecked')\n    } else {\n      this.btn.classList.remove('checked')\n      this.btn.classList.add('unchecked')\n    }\n\n    this.onCheckedChanged()\n  }\n\n  setDisabled(newDisabled: boolean) {\n    this.disabled = newDisabled\n    if (newDisabled) {\n      this.btn.setAttribute('disabled', 'true')\n    } else {\n      this.btn.removeAttribute('disabled')\n    }\n  }\n\n  setTitle(newTitle: string) {\n    while (this.btn.firstChild) {\n      this.btn.removeChild(this.btn.firstChild)\n    }\n\n    this.btn.appendChild(document.createTextNode(newTitle))\n  }\n\n  load(key: string) {\n    if (localStorage['toggle-' + key] === 'true') {\n      this.setChecked(true)\n    } else {\n      this.setChecked(false)\n    }\n  }\n\n  save(key: string) {\n    localStorage['toggle-' + key] = this.checked.toString()\n  }\n\n  onCreate() {}\n  onCheckedChanged() {}\n  onDestroy() {}\n}\n","// @flow\n\nimport type { Position } from './types'\n\n// Generic Cursor class designed to be easy to implement multiple control\n// schemes for. For example, mouse, tablet touch, and gamepad are all possible\n// controls that could be implemented.\nexport default class Cursor {\n\n  // Position of the cursor.\n  pos: Position\n\n  // Whether the cursor is pressed or not.\n  down: boolean\n\n  // Cursor image to be drawn. This image's source is (by default)\n  // cursor.png, loaded from the sprites folder.\n  image: Image\n\n  scale: [number, number]\n\n  constructor(scale: [number, number] = [1, 1]) {\n    this.scale = scale\n    this.pos = [0, 0]\n    this.down = false\n    this.image = new Image()\n    this.image.src = 'sprites/cursor.png'\n  }\n\n  // Watch the mouse's movement on an element, and use its position as the\n  // position for this cursor.\n  watchMouse(el: Element) {\n    el.addEventListener('mousemove', (evt: MouseEvent) => {\n      // Stored position should be relative to element's rendered bounds.\n      let rect = el.getBoundingClientRect()\n      this.pos[0] = (evt.clientX - rect.left) * this.scale[0]\n      this.pos[1] = (evt.clientY - rect.top) * this.scale[1]\n    })\n\n    el.addEventListener('mouseup', () => {\n      this.down = false\n    })\n\n    el.addEventListener('mousedown', () => {\n      this.down = true\n    })\n  }\n\n  // Draw using an already-created canvas context. Optionally takes an X/Y\n  // position to draw at, which defaults to this.pos[0, 1].\n  drawUsingCtx(\n    ctx: CanvasRenderingContext2D,\n    // @flow ignore\n    x: number = this.pos[0], y: number = this.pos[1]\n  ) {\n    const centeredX = x - this.image.width / 2\n    const centeredY = y - this.image.height / 2\n    ctx.drawImage(this.image, centeredX, centeredY)\n  }\n}\n","// @flow\n\nconst DEBUG = false // lags lots but is helpful\nconst GRAVITY = 0.25\n\nimport SLW from './SLW'\nimport Tile from './Tile'\nimport Level from './Level'\nimport Text from './Text'\n\nimport { sign, levels } from './util'\n\nimport type { Position } from './types'\n\n// is [z], [space], or [up arrow] down?\nfunction isJump(keys): boolean {\n  return keys[32] || keys[38] || keys[90]\n}\n\n// is [z], [space], or [enter] down?\nfunction isYes(keys): boolean {\n  return keys[32] || keys[13] || keys[90]\n}\n\nexport class Entity {\n  game: SLW\n\n  // Position, absolute (not tileX/Y!)\n  x: number\n  y: number\n\n  // order in which entity is rendered\n  z: number\n\n  // Velocity\n  xv: number\n  yv: number\n\n  // Dimensions (used for bounding box)\n  w: number // width\n  h: number // height\n\n  color: string // \"rgba(r, g, b, a)\"\n  sprite: {\n    sheet: Image,\n    position: Position,\n    positionType: ?string,\n    width: number,\n    height: number\n  }\n\n  get top(): number {\n    return Math.floor(this.y)\n  }\n\n  get bottom(): number {\n    return Math.floor(this.y + this.h)\n  }\n\n  get left(): number {\n    return Math.floor(this.x)\n  }\n\n  get right(): number {\n    return Math.floor(this.x + this.w)\n  }\n\n  constructor(game: SLW) {\n    this.game = game\n\n    this.sprite = {\n      sheet: new Image(),\n      position: [0, 0],\n      positionType: '',\n      width: 0,\n      height: 0\n    }\n\n    this.x = 0\n    this.y = 0\n    this.z = 0\n\n    this.xv = 0\n    this.yv = 0\n\n    this.w = 16\n    this.h = 16\n\n    // pleasing color for debugging reasons :P\n    const c = require('pleasejs').make_color({ format: 'rgb' })[0]\n    this.color = `rgb(${c.r}, ${c.g}, ${c.b})`\n  }\n\n  update(stop: boolean = true) {\n    let v: number = 0\n\n    // x:\n    const xv = Math.round(this.xv)\n    v = sign(xv)\n\n    for (let i = 0; i < Math.abs(xv); i++) {\n      this.x += v\n      if (this.touchingWallRight || this.touchingWallLeft) {\n        this.x -= v\n        if (stop) this.xv = 0\n      }\n    }\n\n    // y:\n    const yv = Math.floor(this.yv)\n    v = sign(yv)\n\n    for (let i = 0; i < Math.abs(yv); i++) {\n      this.y += v\n\n      // Checking if grounded should only happen if the entity is going down\n      // (that way it can jump through solidTop blocks)\n      if ((v === 1 && this.grounded) || this.collides()) {\n        this.y -= v\n        if (stop) this.yv = 0\n\n        this.y = Math.ceil(this.y / Tile.size) * Tile.size\n\n        // Air punch should only happen when the entity jumps.\n        if (v === -1) {\n          for (let tile of this.tilesAbove) {\n            tile.onAirPunch(this)\n          }\n        }\n      }\n    }\n\n    if ((this.y >= this.game.level.h * Tile.size) && !this.game.level.meta.special.includes('world'))\n      return this.destroy()\n\n    for (let tile of this.pickTiles(0, 0, 0, 1)) {\n      tile.onTouch(this)\n    }\n\n    for (let tile of this.tilesBelow) {\n      tile.onStand(this)\n    }\n\n    for (let entity of this.entityCollides()) {\n      entity.onTouch(this)\n    }\n  }\n\n  draw() {\n    const ctx = this.game.canvas.getContext('2d')\n    if (!(ctx instanceof CanvasRenderingContext2D)) return\n\n    if (DEBUG) {\n      // Draw the bounding box (if in DEBUG mode).\n      ctx.fillStyle = this.color\n      ctx.fillRect(this.left, this.top, this.w + 1, this.h + 1)\n\n      ctx.drawImage(Text.write(this.constructor.name, this.color), this.right, this.bottom)\n    }\n\n    // Draw the sprite image (if there is one).\n    const sprite = this.sprite\n\n    if (sprite) {\n      let [x, y] = sprite.position || [0, 0]\n      let w = sprite.width || this.w\n      let h = sprite.height || this.h\n\n      if (sprite.positionType !== 'absolute') {\n        x *= w\n        y *= h\n      }\n\n      ctx.drawImage(\n        this.sprite.sheet,\n\n        // Area on sheet to grab\n        x, y, w, h,\n\n        // Area on screen to draw\n        this.left, this.top, w, h\n      )\n    }\n  }\n\n  // Are we currently intersecting any solid Tiles?\n  collides(shouldReturnTiles: boolean = false): any {\n    let tileLeft   = Math.floor(this.left   / Tile.size)\n    let tileRight  = Math.floor(this.right  / Tile.size)\n    let tileTop    = Math.floor(this.top    / Tile.size)\n    let tileBottom = Math.floor(this.bottom / Tile.size)\n\n    let tiles = []\n    let collision = false\n    for (let x = tileLeft; x <= tileRight; x++) {\n      for (let y = tileTop; y <= tileBottom; y++) {\n        let tile = this.game.level.tileAt([x, y])\n\n        if (tile.solid) {\n          collision = true\n        }\n\n        tiles.push(tile)\n      }\n    }\n\n    return shouldReturnTiles ? tiles : collision\n  }\n\n  get touchingWallRight(): boolean {\n    let tileLeft   = Math.floor(this.right  / Tile.size)\n    let tileRight  = tileLeft\n    let tileTop    = Math.floor(this.top    / Tile.size)\n    let tileBottom = Math.floor(this.bottom / Tile.size)\n\n    // Weird bug.. dunno why this (helps) fix #19 though. I can't imagine\n    // tileBottom is broken! (Right?)\n    // TODO Figure this out. Right now it's a plain fix for height=16\n    if (this.h === 16) {\n      tileBottom--\n    }\n\n    for (let x = tileLeft; x <= tileRight; x++) {\n      for (let y = tileTop; y <= tileBottom; y++) {\n        const tile = this.game.level.tileAt([x, y])\n\n        if (tile.solid) {\n          return true\n        }\n      }\n    }\n\n    return false\n  }\n\n  get touchingWallLeft(): boolean {\n    let tileLeft   = Math.floor(this.left   / Tile.size)\n    let tileRight  = tileLeft\n    let tileTop    = Math.floor(this.top    / Tile.size)\n    let tileBottom = Math.floor(this.bottom / Tile.size)\n\n    // Same deal as touchingWallRight\n    if (this.h === 16) {\n      tileBottom--\n    }\n\n    for (let x = tileLeft; x <= tileRight; x++) {\n      for (let y = tileTop; y <= tileBottom; y++) {\n        const tile = this.game.level.tileAt([x, y])\n\n        if (tile.solid) {\n          return true\n        }\n      }\n    }\n\n    return false\n  }\n\n  // Handy function to pick tiles around the entity.\n  // TODO is this broken? Do tests!\n  pickTiles(\n    tileLeft: number, tileRight: number, tileTop: number, tileBottom: number\n  ): Array <Tile> {\n    const tiles = []\n\n    for (let px = Math.floor(tileLeft); px <= Math.ceil(tileRight); px++) {\n      for (let py = Math.floor(tileTop); py <= Math.ceil(tileBottom); py++) {\n        tiles.push(this.game.level.tileAt([\n          tileLeft + px + this.x / Tile.size, tileTop + py + this.y / Tile.size\n        ]))\n      }\n    }\n\n    return tiles\n  }\n\n  // Handy function to destroy the entity.\n  destroy() {\n    this.game.entities.splice(this.game.entities.indexOf(this), 1)\n  }\n\n  // What entities are we touching?\n  entityCollides(): Array <Entity> {\n    const entities = []\n\n    for (let entity of this.game.entities) {\n      // Don't detect itself!\n      if (entity === this) continue\n\n      if (\n        (\n          this.left <= entity.left && entity.left <= this.right ||\n          this.left <= entity.right && entity.right <= this.right\n        ) && (\n          this.top <= entity.top && entity.top <= this.bottom ||\n          this.top <= entity.bottom && entity.bottom <= this.bottom\n        )\n      ) {\n        entities.push(entity)\n      }\n    }\n\n    return entities\n  }\n\n  // Get the single tile at the centre of the entity.\n  get tileOn(): Tile {\n    let t = this.game.level.tileAt([\n      Math.floor((this.x + this.w / 2) / 16),\n      Math.floor((this.y + this.h / 2) / 16)\n    ])\n\n    return t\n  }\n\n  // Get the two (potentially same) tiles ABOVE the entity.\n  get tilesAbove(): [Tile, Tile] {\n    let l = this.game.level.tileAt([Math.floor(this.x / 16), this.top / 16 - 0.1])\n    let r = this.game.level.tileAt([Math.ceil(this.x / 16), this.top / 16 - 0.1])\n\n    return [l, r]\n  }\n\n  // Get the two (potentially same) tiles BELOW the entity.\n  get tilesBelow(): [Tile, Tile] {\n    let l = this.game.level.tileAt([Math.floor(this.x / 16), this.bottom / 16 + 0.1])\n    let r = this.game.level.tileAt([Math.ceil(this.x / 16), this.bottom / 16 + 0.1])\n\n    return [l, r]\n  }\n\n  // Whether or not the entity is on the ground or not.\n  get grounded(): boolean {\n    /*\n    return this.pickTiles(0, 0, 1, 1).some(x => x.solid || x.solidTop)\n    */\n\n    return this.tilesBelow.some(tile => tile.solid || tile.solidTop)\n  }\n\n  // Called when another entity touches this entity.\n  onTouch(by: Entity) {}\n}\n\nexport class Player extends Entity {\n  jumpSound: window.Audio\n  errorSound: window.Audio\n  startLevelSound: window.Audio\n  moveLevelSound: window.Audio\n\n  lastJump: number\n  mayJump: boolean\n\n  spriteAnimation: {\n    time: number,\n    anim: string,\n    dir: string,\n    oldAnim: string,\n    nextFrame: number,\n  }\n\n  state: number // powerup state\n\n  lastOn: ?Tile // world map only.\n  wantsInput: ?boolean // world map only.\n\n  constructor(game: SLW, x: number = 0, y:number = 0) {\n    super(game)\n\n    this.sprite.sheet.src = 'sprites/liam-0.png'\n    this.sprite.position = [-100, -100]\n    this.sprite.positionType = 'absolute'\n    this.sprite.width = 19\n    this.sprite.height = 32\n    this.spriteAnimation = { time: 0, dir: 'right', anim: 'idle', oldAnim: '', nextFrame: 0 }\n\n    this.x = x\n    this.y = y\n\n    this.w = 15\n    this.h = 15\n    this.state = 0\n\n    this.jumpSound = new window.Audio('sound/smw_jump.wav')\n    this.errorSound = new window.Audio('sound/smw_stomp_koopa_kid.wav')\n    this.startLevelSound = new window.Audio('sound/begin_level.wav')\n    this.moveLevelSound = new window.Audio('sound/move_level.wav')\n  }\n\n  update() {\n    if (this.game.level.editorEnabled) {\n      // Camera is scrolled directly in editor mode\n      this.xv = 0\n      this.yv = 0\n      return\n    }\n\n    this.sprite.sheet.src = `sprites/liam-${this.state}.png`\n    if (this.state > 0) {\n      // big/powerupped\n      this.w = 15\n      this.h = 31\n      this.sprite.width = 19\n      this.sprite.height = 32\n      this.sprite.positionType = 'absolute'\n    } else {\n      // small\n      this.w = 15\n      this.h = 15\n      this.sprite.width = 16\n      this.sprite.height = 16\n    }\n\n    if (this.game.level.meta.special.includes('world')) {\n      this.mapMotion()\n    } else {\n      this.levelMotion()\n    }\n\n    // actually move:\n    super.update(this.wantsInput == true || !this.game.level.meta.special.includes('world'))\n\n    if (this.xv !== 0 || this.yv !== 0) this.wantsInput = false\n  }\n\n  mapMotion() {\n    // overworld/map..\n    const walkSpeed = 4\n\n    // small hitbox allows for greater movement\n    // TODO\n    this.w = 15\n    this.h = 15\n\n    // A different version of tileOn. This one only counts a new tile if you're\n    // actually 100% on it - that is, if tileX and tileY are integers.\n    let on: ?Tile\n    const tileX = this.left / Tile.size\n    const tileY = this.top / Tile.size\n    if (Number.isInteger(tileX) && Number.isInteger(tileY)) {\n      on = this.game.level.tileAt([tileX, tileY])\n    } else {\n      on = this.lastOn\n    }\n\n    // Initial\n    if (!this.lastOn) {\n      this.wantsInput = true\n    }\n\n    // Levels, houses and pipes should let the user take input. If it's the\n    // same tile as the player was just on a tick ago, there's no need to give\n    // more input - if it does, the actual user needs to hold down whatever\n    // direcitonal button they're moving in until the player gets off that\n    // tile!\n    if (on &&\n      ['Level', 'House', 'Pipe'].includes(on.name) && on !== this.lastOn\n    ) {\n      this.wantsInput = true\n    }\n\n    if (on && on.name === 'Path' && !this.wantsInput) {\n      // we're already moving!\n\n      this.spriteAnimation.anim = 'walk'\n      if (this.xv > 0) this.spriteAnimation.dir = 'right'\n      if (this.xv < 0) this.spriteAnimation.dir = 'left'\n      if (this.yv > 0) this.spriteAnimation.dir = 'down'\n      if (this.yv < 0) this.spriteAnimation.dir = 'up'\n\n      // we need to be on a NEW tile to do anything:\n      if (!this.lastOn || on.texPosition !== this.lastOn.texPosition) {\n        const [h, v] = on.texPosition\n\n        if (h == 2 && v == 8) {\n          // vertical straight\n        }\n\n        if (h == 1 && v == 9) {\n          // horizontal straight\n        }\n\n        if (h == 3 && v == 9) {\n          // up/left turn\n\n          if (this.yv === 0) {\n            // from left\n            this.xv = 0\n            this.yv = -walkSpeed\n          } else {\n            // from up\n            this.xv = -walkSpeed\n            this.yv = 0\n          }\n        }\n\n        if (h == 3 && v == 8) {\n          // down/right turn\n\n          if (this.yv === 0) {\n            // from right\n            this.xv = 0\n            this.yv = walkSpeed\n          } else {\n            // from down\n            this.xv = walkSpeed\n            this.yv = 0\n          }\n        }\n\n        if (h == 1 && v == 8) {\n          // up/right turn\n\n          if (this.yv === 0) {\n            // from right\n            this.xv = 0\n            this.yv = -walkSpeed\n          } else {\n            // from up\n            this.xv = walkSpeed\n            this.yv = 0\n          }\n        }\n\n        if (h == 1 && v == 10) {\n          // down/left turn\n\n          if (this.yv === 0) {\n            // from left\n            this.xv = 0\n            this.yv = walkSpeed\n          } else {\n            // from down\n            this.xv = -walkSpeed\n            this.yv = 0\n          }\n        }\n\n        if (h == 2 && v == 10) {\n          // up/down T-junction\n          this.xv = 0\n          this.yv = 0\n          this.wantsInput = true\n        }\n      }\n    } else if (this.wantsInput) {\n      this.xv = 0\n      this.yv = 0\n\n      // take input..\n      // TODO don't allow passing by [3, 10] tiles (uncompleted levels)\n      this.spriteAnimation.anim = 'idle'\n\n      if (this.game.keys[39]) {\n        this.xv = walkSpeed\n        this.spriteAnimation.dir = 'right'\n      } else if (this.xv > 0) {\n        this.xv = 0\n      }\n\n      if (this.game.keys[37]) {\n        this.xv = -walkSpeed\n        this.spriteAnimation.dir = 'left'\n      } else if (this.xv < 0) {\n        this.xv = 0\n      }\n\n      if (this.game.keys[40]) {\n        this.yv = walkSpeed\n        this.spriteAnimation.dir = 'down'\n      } else if (this.yv > 0) {\n        this.yv = 0\n      }\n\n      if (this.game.keys[38]) {\n        this.yv = -walkSpeed\n        this.spriteAnimation.dir = 'up'\n      } else if (this.yv < 0) {\n        this.yv = 0\n      }\n\n      if (on && on.name === 'Level' && isYes(this.game.keys)) {\n        // open level!\n        // TODO some animation?\n\n        const lv = this.game.level.meta.id + '-' + on.levelid\n\n        if (lv in levels) {\n          this.w = 15\n          this.h = 31\n\n          const newLevel = new Level(this.game, lv, this.game.level.tileset)\n          this.game.changeLevel(newLevel)\n\n          this.game.tick = 0\n          this.startLevelSound.play()\n        } else {\n          this.errorSound.play()\n        }\n      }\n\n      if (this.xv !== 0 || this.yv !== 0) {\n        // we moved :O\n        this.moveLevelSound.play()\n      }\n    }\n\n    this.lastOn = on\n  }\n\n  levelMotion() {\n    // input:\n\n    if (Math.abs(this.xv) < 0.2 && this.grounded) {\n      this.spriteAnimation.anim = 'idle'\n    }\n\n    if (this.game.keys[39]) {\n      this.xv += 0.2\n      if (this.grounded) this.spriteAnimation.anim = 'walk'\n    } else if(this.xv > 0) {\n      this.xv = Math.max(0, this.xv - 0.4)\n    }\n\n    if (this.game.keys[37]) {\n      // xv\n      this.xv -= 0.2\n      if (this.grounded) this.spriteAnimation.anim = 'walk'\n    } else if(this.xv < 0) {\n      this.xv = Math.min(0, this.xv + 0.4)\n    }\n\n    if (Math.abs(this.xv) < 0.1) {\n      this.xv = 0\n    }\n\n    this.xv = Math.min(this.xv,  4)\n    this.xv = Math.max(this.xv, -4)\n\n    if (this.grounded && isJump(this.game.keys) && this.mayJump) {\n      // jump height is based on how long you hold the key[s]\n      // you can hold it for longer if your xv is higher\n\n      this.yv = -3.5\n      this.lastJump = Date.now()\n\n      this.jumpSound.play()\n      this.spriteAnimation.anim = 'jump'\n      this.mayJump = false\n    } else if(isJump(this.game.keys) && this.yv < -3 && Date.now() - this.lastJump < 100 + Math.abs(this.xv) * 50) {\n      this.yv = -3.5\n    } else if(!isJump(this.game.keys)) {\n      // we may jump next frame\n      this.mayJump = true\n    }\n\n    if(this.yv > 0 && this.spriteAnimation.anim !== 'jump' && !this.grounded) {\n      this.spriteAnimation.anim = 'fall'\n    }\n\n    if(this.xv > 0) this.spriteAnimation.dir = 'right'\n    if(this.xv < 0) this.spriteAnimation.dir = 'left'\n\n    this.yv = Math.min(this.yv,  4)\n    this.yv += GRAVITY\n  }\n\n  draw() {\n    // Animation..\n    const anim = this.spriteAnimation\n    if (anim.anim !== anim.oldAnim) {\n      anim.oldAnim = anim.anim\n      anim.time = 0\n      anim.nextFrame = 0\n    }\n\n    if (anim.anim === 'walk' || (anim.anim === 'idle' && anim.oldAnim === 'walk')) {\n      if (anim.time >= anim.nextFrame) {\n        anim.nextFrame = (\n          Math.ceil(anim.time + Math.max(12 - Math.abs(this.xv * 3), 8))\n        )\n\n        if (this.state === 0) {\n          if (this.sprite.position[0] === 32) {\n            this.sprite.position[0] = 0\n          } else if (this.sprite.position[0] === 16) {\n            this.sprite.position[0] = 32\n          } else if (this.sprite.position[0] === 0) {\n            if(anim.anim === 'walk') this.sprite.position[0] = 16\n          } else {\n            this.sprite.position[0] = 0\n          }\n        } else {\n          if (this.sprite.position[0] === 57) {\n            this.sprite.position[0] = 0\n          } else if (this.sprite.position[0] === 38) {\n            this.sprite.position[0] = 57\n          } else if (this.sprite.position[0] === 19) {\n            if(anim.anim === 'walk') this.sprite.position[0] = 38\n          } else {\n            this.sprite.position[0] = 19\n          }\n        }\n      }\n    } else if (anim.anim === 'idle') {\n      this.sprite.position[0] = this.state === 0 ? 0 : 19\n    } else if (anim.anim === 'jump') {\n      this.sprite.position[0] = this.state === 0 ? 48 : 76\n    } else if (anim.anim === 'fall') {\n      this.sprite.position[0] = this.state === 0 ? 32 : 97\n    }\n\n    this.sprite.position[1] = this.state === 0 ? ({\n      left: 16,\n      right: 0,\n      up: 48,\n      down: 32,\n    })[anim.dir] : (anim.dir === 'left' ? 32 : 0)\n    this.spriteAnimation.time++ // could use this.game.tick\n\n    super.draw()\n  }\n\n  destroy() {\n    // go back to world map:\n\n    const lv = this.game.level.meta.world\n    const id = this.game.level.meta.id\n\n    const newLevel = new Level(this.game, lv, this.game.level.tileset)\n    this.game.changeLevel(newLevel)\n\n    this.state = 0\n\n    // On the world map, go to the position of the level that was just played.\n    for (let row of this.game.level.tilemap) {\n      for (let tile of row) {\n        if (tile.name === 'Level' && tile.levelid == id) {\n          this.x = tile.x * Tile.size\n          this.y = tile.y * Tile.size\n        }\n      }\n    }\n  }\n}\n\nexport class Goomba extends Entity {\n  constructor(game: SLW, x: number = 0, y: number = 0) {\n    super(game)\n\n    this.x = x\n    this.y = y\n    this.z = 1\n\n    this.w = 16\n    this.h = 16\n\n    this.xv = 2\n  }\n\n  update() {\n    // TODO goombas walk and then turn around when they bump into something\n\n    this.yv += GRAVITY\n    super.update()\n  }\n}\n\nexport class Powerup extends Entity {\n  getSound: window.Audio\n  initSound: window.Audio\n\n  constructor(game: SLW, x: number = 0, y: number = 0, xv: number = 1) {\n    super(game)\n\n    this.sprite.sheet.src = 'tileset.png'\n\n    this.x = x\n    this.y = y\n    this.z = 2\n\n    this.w = 16\n    this.h = 16\n\n    this.xv = xv\n    this.sprite.position = [0, 0]\n\n    this.getSound = new window.Audio('sound/powerup_get.wav')\n    this.initSound = new window.Audio('sound/powerup_init.wav')\n\n    this.initSound.play()\n  }\n\n  update() {\n    this.yv += GRAVITY * 0.7\n\n    let o = this.xv\n\n    this.x += this.xv\n    if (this.touchingWallRight || this.touchingWallLeft) o = this.xv * -1\n    this.x -= this.xv\n\n    this.xv = o\n\n    super.update()\n  }\n\n  onTouch(by: Entity) {\n    if (by instanceof Player) {\n      this.destroy()\n      this.getSound.play()\n    }\n  }\n}\n\nexport class Mushroom extends Powerup {\n  constructor(...args: any) {\n    super(...args)\n\n    this.sprite.position = [0, 2]\n  }\n\n  onTouch(by: Entity) {\n    if (by instanceof Player && by.state === 0) {\n      by.state = 1 // small to big\n      by.y -= Tile.size\n    }\n\n    super.onTouch(by)\n  }\n}\n\nexport class Sign extends Entity {\n  constructor(game: SLW, x: number = 0, y: number = 0) {\n    super(game)\n\n    this.x = x\n    this.y = y\n\n    this.w = 44\n    this.h = 45\n\n    this.game.entities.push(this)\n\n    this.sprite.sheet.src = 'tileset.png'\n    this.sprite.positionType = 'absolute'\n    this.sprite.position = [80, 32]\n    this.sprite.width = 44\n    this.sprite.height = 47\n  }\n}\n\nexport class Coin extends Entity {\n  coinSound: window.Audio\n\n  spriteAnimation: {\n    time: number,\n    nextFrame: number\n  }\n\n  constructor(game: SLW, x: number = 0, y: number = 0) {\n    super(game)\n\n    this.x = x\n    this.y = y\n\n    this.w = 16\n    this.h = 16\n\n    this.sprite.sheet.src = 'sprites/coin.png'\n    this.sprite.width = 16\n    this.sprite.height = 16\n\n    this.spriteAnimation = {time: 0, nextFrame: 0}\n\n    this.coinSound = new window.Audio('sound/smw_coin.wav')\n  }\n\n  update() {\n    const anim = this.spriteAnimation\n\n    if (anim.time >= anim.nextFrame) {\n      anim.nextFrame = anim.time + 10\n      this.sprite.position[0] = (this.sprite.position[0] + 1) % 4\n    }\n\n    anim.time++\n  }\n\n  onTouch(by: Entity) {\n    if(by instanceof Player) {\n      this.coinSound.play()\n      this.destroy()\n    }\n  }\n}\n\nexport class HalfwayFlag extends Entity {\n  spriteAnimation: {\n    time: number,\n    nextFrame: number,\n    frame: number,\n  }\n\n  state: number // 0 = bowser, 1 = liam\n\n  constructor(game: SLW, x: number = 0, y: number = 0) {\n    super(game)\n\n    this.x = x\n    this.y = y - 16\n\n    this.w = 16\n    this.h = 16 + 17\n\n    this.state = 0\n    this.game.entities.push(this)\n\n    this.sprite.sheet.src = 'sprites/flag.png'\n    this.sprite.width = 16\n    this.sprite.height = 16\n    this.sprite.positionType = 'absolute'\n\n    this.spriteAnimation = { time: 0, nextFrame: 0, frame: 0 }\n  }\n\n  update() {\n    const anim = this.spriteAnimation\n\n    if (anim.time >= anim.nextFrame) {\n      anim.nextFrame = anim.time + 10\n      anim.frame = (anim.frame + 1) % 4\n    }\n\n    anim.time++\n\n    this.sprite.position[0] = ([ 18, 35, 52, 69 ])[anim.frame]\n    this.sprite.position[1] = ([ 1, 35 ])[this.state]\n  }\n\n  draw() {\n    const ctx = this.game.canvas.getContext('2d')\n    if (!ctx) return\n\n    ctx.drawImage(this.sprite.sheet,\n      // Area on sheet to grab\n      1, 1, 16, 48,\n\n      // Area on screen to draw\n      this.left - 10, this.top - 16, 16, 48)\n    super.draw()\n  }\n\n  onTouch(by: Entity) {\n    if(by instanceof Player) {\n      // TODO play a sound and an animation\n      this.state = 1\n    }\n  }\n}\n","// @flow\n\nconst toml = require('toml')\n\nconst MUSIC_VOLUMES = {\n  airship: 0.25,\n  athletic: 0.25,\n  beach: 1,\n  castle: 0.25,\n  'ice-cave': 0.25,\n  'file-select': 0.5,\n  'flower-gardens': 1,\n  'grassland': 0.15,\n  'jungle': 0.25,\n  'kapper-valley': 0.25,\n  'star-world': 0.25,\n  'underwater-underworld': 1,\n  'water': 0.25,\n  'underground': 0.5,\n}\n\nimport SLW from './SLW'\nimport Tile from './Tile'\nimport { levels } from './util'\n\nimport type { Position } from './types'\n\nexport default class Level {\n  game: SLW\n\n  meta: Object // see levels.toml\n  tileset: Image\n  tilemap: Array <Array <Tile>>\n\n  w: number // width\n  h: number // height\n\n  music: window.Audio\n  editorEnabled: boolean\n\n  static metaOf(levelid) {\n    return levels[levelid]\n  }\n\n  constructor(\n    game: SLW,\n    levelid: string,\n    tileset: Image,\n  ) {\n    this.game = game\n\n    this.tileset = tileset\n    this.meta = levels[levelid]\n\n    // Editor mode btn:\n\n    /*\n    const editorEnabledEl_o = document.getElementById('editorEnabled')\n    const editorEnabledEl = editorEnabledEl_o.cloneNode()\n\n    this.editorEnabled = !this.meta.special.includes('world') && localStorage['editorEnabled'] === 'true'\n    // @flow ignore\n    editorEnabledEl.disabled = this.meta.special.includes('world')\n    editorEnabledEl.innerText = this.editorEnabled ? 'Editor ON' : 'Editor OFF'\n\n    editorEnabledEl.addEventListener('click', (evt: Event) => {\n      this.game.cameraInEditor = this.game.camera // set camera position\n      this.editorEnabled = !this.editorEnabled\n      localStorage['editorEnabled'] = this.editorEnabled.toString()\n      editorEnabledEl.innerText = this.editorEnabled ? 'Editor ON' : 'Editor OFF'\n    })\n\n    // @flow ignore\n    editorEnabledEl_o.parentNode.replaceChild(editorEnabledEl, editorEnabledEl_o)\n    */\n\n    // Convert tilemap into a 2D array of Tiles:\n    const leveldata = this.meta.tilemap\n    this.tilemap = []\n    let rows = leveldata.split('\\n')\n    for (let y = 0; y < rows.length-1; y++) {\n      this.tilemap[y] = []\n      let row = rows[y]\n      for (let x = 0; x < row.length; x++) {\n        let tileid = row[x]\n        if(this.meta.special.includes('world')) tileid = 'W ' + tileid\n\n        let tile = new (Tile.get(tileid))(this.game)\n\n        tile.x = x\n        tile.y = y\n        tile.game = game\n        tile.exists = true\n\n        this.tilemap[y].push(tile)\n      }\n    }\n\n    this.h = this.tilemap.length\n    this.w = this.tilemap[0].length\n\n    this.music = new window.Audio('sound/music/' + this.meta.music + '.mp3')\n    this.music.volume = MUSIC_VOLUMES[this.meta.music] || 0.5 // to normalize\n    this.music.loop = true\n    this.music.play() // load automatically\n  }\n\n  create() {\n    // Call create() on the Level Tiles\n    for (let row of this.tilemap) {\n      for (let tile of row) {\n        tile.onCreate()\n      }\n    }\n  }\n\n  destroy() {\n    this.music.pause()\n\n    // TODO Entity destroying? Might not be a bad idea, e.g. if entities have\n    // set event listeners that reference themselves... they wouldn't be GC'd.\n    this.game.entities.splice(0, this.game.entities.length)\n  }\n\n  update() {\n    // Call update() on the tilemap's Tiles\n    for (let row of this.tilemap) {\n      for (let tile of row) {\n        tile.onUpdate()\n      }\n    }\n  }\n\n  draw() {\n    // Draw the tilemap\n    const ctx = this.game.canvas.getContext('2d')\n    if (!(ctx instanceof CanvasRenderingContext2D)) return\n\n    const viewStartX = Math.floor(this.game.camera[0] / Tile.size)\n    const viewStartY = Math.floor(this.game.camera[1] / Tile.size)\n    const viewEndX = Math.ceil(this.game.camera[0] / Tile.size) + 25\n    const viewEndY = Math.ceil(this.game.camera[1] / Tile.size) + 25\n\n    for (let y = viewStartY; y < viewEndY; y++) {\n      for (let x = viewStartX; x < viewEndX; x++) {\n        const tile = this.tileAt([x, y])\n        const [rendX, rendY] = this.getAbsolutePosition([x, y])\n        const [tileX, tileY] = tile.texPosition\n\n        ctx.drawImage(\n          this.tileset,\n          tileX * Tile.size, tileY * Tile.size,\n          Tile.size, Tile.size,\n\n          rendX + tile.dx, rendY + tile.dy, Tile.size, Tile.size)\n      }\n    }\n  }\n\n  // Get a Tile from its Position in the tilemap.\n  tileAt([tileX: number, tileY: number]: Position): Tile {\n    tileX = Math.floor(tileX)\n    tileY = Math.floor(tileY)\n\n    try {\n      let r = this.tilemap[tileY][tileX]\n      if(typeof r === 'undefined') throw 'nope'\n      return r\n    } catch(e) {\n      // fallback to Air tile\n      //console.warn(`Level.tileAt([${tileX}, ${tileY}]): Failed to retrieve Tile`)\n      return new (Tile.get('-'))(this.game)\n    }\n  }\n\n  replaceTile([tileX: number, tileY: number]: Position, newTile: Tile): Tile {\n    newTile.x = tileX\n    newTile.y = tileY\n    newTile.game = this.game\n    newTile.exists = true\n\n    let oldTile = this.tileAt([tileX, tileY])\n    oldTile.exists = false\n    oldTile.onDestroy()\n\n    this.tilemap[tileY][tileX] = newTile\n    newTile.onCreate()\n\n    // Send an onNearbyReplace event to all nearby tiles - see onNearbyReplace\n    for (let y = tileY - 1; y <= tileY + 1; y++) {\n      for (let x = tileX - 1; x <= tileX + 1; x++) {\n        const tile = this.tileAt([x, y])\n        if (tile && tile !== newTile) {\n          tile.onNearbyReplace()\n        }\n      }\n    }\n\n    return newTile\n  }\n\n  // Gets the drawn position of a given tile position. For example, assuming\n  // that the tile size is 16, getDrawnPosition([0, 2]) would become [0, 32].\n  getAbsolutePosition([tileX, tileY]: Position): Position {\n    return [\n      Math.floor(tileX * Tile.size),\n      Math.floor(tileY * Tile.size)\n    ]\n  }\n}\n","// @flow\n\n// SUPER LIAM WORLD(tm)\n// totally not stolen from an-ok-squirrel.\n// this is a fair use of the name as specified\n// in NANALAND RULES NUMBER #99\n\nimport Tile from './Tile'\nimport Text from './Text'\nimport Level from './Level'\nimport Cursor from './Cursor'\nimport { Entity, Player } from './Entity'\nimport { arrEqual, EventController } from './util'\n\nimport type { Position } from './types'\n\nconst BG_COLORS = {\n  clouds: '#A0D0F8',\n  hills: '#F8E0B0',\n}\n\nconst BG_REPEATS = {\n  clouds: 'repeat-x',\n  hills: 'repeat-y',\n}\n\nexport default class SLW {\n  // Event controller.\n  events: EventController\n\n  // Map to store key-pressed data in.\n  keys: Object\n\n  // Canvas used to display the game on.\n  canvas: HTMLCanvasElement\n\n  // Player object - the character that walks around the screen using the\n  // user's input as controls.\n  player: Player\n\n  // Camera position. Used for scrolling.\n  camera: Position\n  cameraInEditor: Position\n\n  // Tile that will be painted, for level editor.\n  tileToPaint: any\n\n  // Cursor object - see Cursor.js.\n  cursor: Cursor\n\n  // Stored separately from the cursor object because the cursor doesn't have\n  // any notion of \"ticks\".\n  lastPlacePos: Position\n\n  // Level, to contain information about the currently active level.\n  level: Level\n\n  // Amount of draw()s called since we started.\n  tick: number\n\n  gamepadSupport: boolean\n  gamepadEnabled: boolean\n\n  entities: Array <Entity>\n\n  constructor(levelid: string, tileset: Image) {\n    this.events = new EventController()\n    this.events.registerEvent('levelchanged')\n\n    this.keys = {}\n\n    this.canvas = document.createElement('canvas')\n    this.canvas.width = 400\n    this.canvas.height = 400\n    this.canvas.setAttribute('tabindex', '1')\n\n    window.addEventListener('keydown', (evt: KeyboardEvent) => {\n      this.keys[evt.keyCode || evt.which] = true\n    })\n\n    window.addEventListener('keyup', (evt: KeyboardEvent) => {\n      this.keys[evt.keyCode || evt.which] = false\n    })\n\n    this.player = new Player(this, 16, 16)\n\n    this.camera = [0, 0]\n    this.cameraInEditor = [0, 0]\n\n    this.cursor = new Cursor([0.5, 0.5])\n    this.cursor.watchMouse(this.canvas)\n\n    this.lastPlacePos = [0, 0]\n\n    this.entities = []\n\n    this.changeLevel(new Level(this, levelid, tileset))\n\n    this.gamepadSupport = (\n      'GamepadEvent' in window || 'getGamepads' in navigator\n    )\n    this.gamepadEnabled = false\n  }\n\n  // Clears the game canvas.\n  canvasClear() {\n    const ctx = this.canvas.getContext('2d')\n\n    if (ctx instanceof CanvasRenderingContext2D) {\n      ctx.fillStyle = BG_COLORS[this.level.meta.background] || 'black'\n      ctx.fillRect(0, 0, this.canvas.width, this.canvas.height)\n    }\n  }\n\n  // Do gamepad things.\n  gamepadInput() {\n    try {\n      if (this.gamepadSupport && this.gamepadEnabled) {\n        const gamepads = window.navigator.getGamepads()\n\n        if (gamepads.length > 0) {\n          let newest = gamepads[0]\n          for (let i = 0; i < gamepads.length; i++) {\n            const gamepad = gamepads[i]\n\n            if (gamepad.connected) {\n              // we want the latest timestamped gamepad\n              if (newest.timestamp < gamepad.timestamp) newest = gamepad\n            }\n          }\n\n          // set the keys\n          const pad = newest\n\n          this.keys[90] = pad.buttons[1].pressed // z\n          this.keys[80] = pad.buttons[2].pressed // x\n          this.keys[37] = pad.axes[0] < -0.5     // <\n          this.keys[39] = pad.axes[0] >  0.5     // >\n          this.keys[38] = pad.axes[1] < -0.5     // ^\n          this.keys[40] = pad.axes[1] >  0.5     // v\n        }\n      }\n    } catch(e) {\n      // There's probably gonna be errors thrown around in lots of browsers.\n      // Don't them crash the game.\n      console.warn(e)\n    }\n  }\n\n  // Modify the camera position to reflect where the player is.\n  // Essentially, this is just scrolling.\n  cameraUpdate() {\n    let minY = Tile.size + this.canvas.height / 2\n    let maxY = (this.level.h - 1) * Tile.size - this.canvas.height / 2\n    let minX = Tile.size + this.canvas.width / 2\n    let maxX = (this.level.w - 1) * Tile.size - this.canvas.width / 2\n\n    if (this.level.editorEnabled) {\n      const CAM_SPD = 4\n      if (this.keys[38]) this.cameraInEditor[1] -= CAM_SPD\n      if (this.keys[40]) this.cameraInEditor[1] += CAM_SPD\n      if (this.keys[37]) this.cameraInEditor[0] -= CAM_SPD\n      if (this.keys[39]) this.cameraInEditor[0] += CAM_SPD\n\n      this.cameraInEditor[0] = Math.min(\n        maxX,\n        Math.max(minX, this.cameraInEditor[0])\n      )\n\n      this.cameraInEditor[1] = Math.min(\n        maxY,\n        Math.max(minY, this.cameraInEditor[1])\n      )\n    }\n\n    let x = this.level.editorEnabled ? this.cameraInEditor[0] : this.player.x\n    let y = this.level.editorEnabled ? this.cameraInEditor[1] : this.player.y\n\n    if(y < minY) y = minY\n    if (y > maxY) y = maxY\n    if (x < minX) x = minX\n    if (x > maxX) x = maxX\n\n    if (this.level.meta.special.includes('floating')) {\n      // airship-like level, wave the camera y\n      let wave = Math.sin(this.tick / 40) * Tile.size / 2\n      y += wave\n    }\n\n    let lag = this.tick > 0 ? 8 : 1\n    this.camera[0] += (x - this.canvas.width / 2 - this.camera[0]) / lag\n    this.camera[1] += (y - this.canvas.height / 2 - this.camera[1]) / lag\n  }\n\n  // Update all the entities.\n  entityUpdate() {\n    this.entities.forEach(e => e.update())\n  }\n\n  changeLevel(newLevel: Level) {\n    const oldLevel = this.level\n\n    if (oldLevel) {\n      oldLevel.destroy()\n    }\n\n    this.tick = 0\n    this.level = newLevel\n    newLevel.create()\n\n    this.events.dispatchEvent('levelchanged', {\n      oldLevel: oldLevel || null, level: newLevel\n    })\n  }\n\n  // Draw all the things.\n  draw() {\n    const ctx = this.canvas.getContext('2d')\n    if (!(ctx instanceof CanvasRenderingContext2D)) return\n\n    let tx = -0.25 * this.camera[0]\n    let ty = -0.25 * this.camera[1]\n    if (this.level.meta.special.includes('floating')) tx += -0.25 * this.tick\n\n    ctx.save()\n    ctx.translate(tx, ty)\n\n    if(this.level.meta.background === 'none') {\n      var ptrn = 'black'\n    } else {\n      let bg = new Image\n      bg.src = `background/${this.level.meta.background}.png`\n      var ptrn = ctx.createPattern(bg, BG_REPEATS[this.level.meta.background] || 'repeat')\n    }\n\n    ctx.fillStyle = ptrn\n    ctx.fillRect(-tx, -ty, this.canvas.width, this.canvas.height)\n\n    ctx.restore()\n\n    // scroll\n    ctx.save()\n    ctx.translate(Math.floor(-this.camera[0]), Math.floor(-this.camera[1]))\n\n    const entities = this.entities.sort((a, b) => {\n      if(a.z > b.z) return 1\n      if(a.z < b.z) return -1\n      return 0\n    })\n    entities.filter(e => e.z < 0).forEach(e => e.draw())\n    this.level.draw()\n    entities.filter(e => e.z >= 0).forEach(e => e.draw())\n    this.player.draw()\n\n    /*\n    ctx.fillStyle = 'red'\n    ctx.fillRect(Tile.size, (this.level.h - 1) * Tile.size, (this.level.w - 2) * Tile.size, 1)\n    ctx.fillRect(Tile.size, Tile.size, 1, (this.level.h - 2) * Tile.size)\n    ctx.fillRect((this.level.w - 1) * Tile.size, Tile.size, 1, (this.level.h - 2) * Tile.size)\n    */\n\n    // unscroll\n    ctx.restore()\n\n    // GUI:\n\n    if (this.level.meta.special.includes('world')) {\n      let on = this.player.tileOn\n      let str = this.level.meta.name\n\n      if (on.name === 'Level') {\n        let level = Level.metaOf(this.level.meta.id + '-' + on.levelid)\n\n        if (level) {\n          str += ' . ' + (on.levelid || 0)  + ' ' + level.name\n        } else {\n          str += ' . Level doesn\\'t exist rip'\n        }\n      }\n\n      ctx.drawImage(Text.write(str), 16, 16)\n    }\n\n    ctx.drawImage(Text.write(`\nCursor XY   ${this.cursor.pos.map(p => Math.floor(p)).join(' ')}\nCursor Down ${this.cursor.down.toString()}\nPlayer XY   ${this.player.x + ' ' + this.player.y}\nCamera XY   ${this.camera.map(p => Math.floor(p)).join(' ')}\n    `, 'rgba(0, 0, 0, 0.5)'), 16, 32)\n\n    if (this.level.editorEnabled) {\n      // Various cursor transforms to snap to a tile:\n\n      // Start with the actual position of the cursor.\n      let [cursorX, cursorY] = this.cursor.pos\n\n      // Snap the position to a tile size. This is rounded so that grabbing tiles\n      // on the edge of the screen works better, and it also helps the cursor's\n      // rendered position follow the cursor's actual position a bit better.\n      let roundTileX = cursorX % Tile.size\n      if (roundTileX < Tile.size / 2) cursorX -= roundTileX\n      else cursorX += Tile.size - roundTileX\n\n      let roundTileY = cursorY % Tile.size\n      if (roundTileY < Tile.size / 2) cursorY -= roundTileY\n      else cursorY += Tile.size - roundTileY\n\n      // At ths point we can go on a slight tangent to get the absolute tile\n      // position of the cursor.\n      let cursorTileX = cursorX / Tile.size\n      let cursorTileY = cursorY / Tile.size\n      cursorTileX += Math.floor(this.camera[0] / Tile.size)\n      cursorTileY += Math.floor(this.camera[1] / Tile.size)\n\n      // Move the cursor so that it aligns with the camera's position.\n      cursorX -= this.camera[0] % Tile.size\n      cursorY -= this.camera[1] % Tile.size\n\n      // Center the cursor on the tile.\n      cursorX += Tile.size / 2\n      cursorY += Tile.size / 2\n\n      // Finally draw the cursor.\n      this.cursor.drawUsingCtx(ctx, cursorX, cursorY)\n\n      const tilePos: Position = [cursorTileX, cursorTileY]\n\n      if (this.cursor.down && !arrEqual(this.lastPlacePos, tilePos)) {\n        const tile = new (this.tileToPaint)(this)\n        this.level.replaceTile([cursorTileX, cursorTileY], tile)\n        this.lastPlacePos = tilePos\n      }\n    }\n\n    this.tick++\n  }\n}\n","import { tint } from './util'\n\nexport default Text = {\n  // Writes some text and returns a canvas with the text on it.\n  //\n  // Typically used in combination with ctx.drawImage:\n  //   ctx.drawImage(Text.write('Hello World!'), 0, 0)\n  write: function(str: string = '', color: string = 'black') {\n    let canvas = document.createElement('canvas')\n    canvas.width = Math.max(...str.split('\\n').map(chars => chars.length)) * 8\n    canvas.height = str.split('\\n').length * 8\n    \n    let ctx = canvas.getContext('2d')\n    if (!ctx) throw new TypeError('Failed to get new canvas context.')\n    \n    let img = tint(Text.set, color)\n    \n    let x = 0, y = 0\n    for (let i in str) {\n      let char = str[i]\n      \n      if (char === '\\n') {\n        x = 0\n        y += 8\n      } else {\n        let [dx, dy] = Text.map[char] || [0, 0]\n        \n        ctx.drawImage(img, dx * 8, dy * 8 + 1, 8, 8, x, y, 8, 8)\n        \n        x += 8\n      }\n    }\n    \n    return canvas\n  },\n  \n  set: new Image,\n  \n  map: {\n    'A': [0, 0],\n    'B': [1, 0],\n    'C': [2, 0],\n    'D': [3, 0],\n    'E': [4, 0],\n    'F': [5, 0],\n    'G': [6, 0],\n    'H': [7, 0],\n    'I': [8, 0],\n    'J': [9, 0],\n    'K': [10, 0],\n    'L': [11, 0],\n    'M': [12, 0],\n    'N': [13, 0],\n    'O': [14, 0],\n    'P': [15, 0],\n    'Q': [16, 0],\n    'R': [17, 0],\n    'S': [0, 1],\n    'T': [1, 1],\n    'U': [2, 1],\n    'V': [3, 1],\n    'W': [4, 1],\n    'X': [5, 1],\n    'Y': [6, 1],\n    'Z': [7, 1],\n    \n    'a': [8, 1],\n    'b': [9, 1],\n    'c': [10, 1],\n    'd': [11, 1],\n    'e': [12, 1],\n    'f': [13, 1],\n    'g': [14, 1],\n    'h': [15, 1],\n    'i': [16, 1],\n    'j': [17, 1],\n    'k': [0, 2],\n    'l': [1, 2],\n    'm': [2, 2],\n    'n': [3, 2],\n    'o': [4, 2],\n    'p': [5, 2],\n    'q': [6, 2],\n    'r': [7, 2],\n    's': [8, 2],\n    't': [9, 2],\n    'u': [10, 2],\n    'v': [11, 2],\n    'w': [12, 2],\n    'x': [13, 2],\n    'y': [14, 2],\n    'z': [15, 2],\n    \n    '?': [0, 3],\n    '!': [1, 3],\n    '.': [2, 3],\n    \"'\": [3, 3],\n    '(': [4, 3],\n    ')': [5, 3],\n    '#': [6, 3],\n    ' ': [7, 3],\n    '-': [8, 3],\n    \n    '0': [0, 4],\n    '1': [1, 4],\n    '2': [2, 4],\n    '3': [3, 4],\n    '4': [4, 4],\n    '5': [5, 4],\n    '6': [6, 4],\n    '7': [7, 4],\n    '8': [8, 4],\n    '9': [9, 4],\n  },\n}\n\nText.set.src = 'sprites/text.png'\n","// @flow\n\nimport SLW from './SLW'\nimport { rnd } from './util'\nimport { Entity, Player, Goomba, Mushroom, Sign, Coin, HalfwayFlag } from './Entity'\n\nimport type { Position } from './types'\n\nexport default class Tile {\n  game: SLW\n\n  // Human-readable name\n  name: string\n\n  // Absolute [x, y] position in tileset.png\n  texPosition: Position\n\n  // true if objects should collide with this tile\n  solid: boolean\n\n  // If solid is false, should the top be solid anyways?\n  solidTop: boolean\n\n  x: number // static\n  y: number // static\n  dx: number\n  dy: number\n\n  exists: boolean\n\n  levelid: ?number // WorldLevelTile only\n\n  constructor(game: SLW, props: Object = {}) {\n    this.game = game\n\n    this.name = props.name || 'Unknown'\n    this.texPosition = props.texPosition\n    this.solid = props.solid || false\n    this.solidTop = props.solidTop || false\n    this.exists = false\n\n    this.dx = 0\n    this.dy = 0\n  }\n\n  static size: number\n\n  // Get a Tile class from its String representation.\n  static get(str: string): Class<Tile> {\n    let tile = tilemap.get(str)\n\n    if(tile) return tile\n    else throw new RangeError('Tile ' + str + ' not found.')\n  }\n\n  // Called when this Tile comes into existence, e.g. the level loads.\n  onCreate() {}\n\n  // Called if and when this Tile is replaced with another.\n  onDestroy() {}\n\n  // Called every frame.\n  onUpdate() {}\n\n  // Called when a nearby block is set:\n  //\n  // -----\n  // -!!!-\n  // -!X!-\n  // -!!!-\n  // -----\n  //\n  // (! is a tile that sends the event, X is a this tile, - is a tile not\n  // sent the event)\n  onNearbyReplace() {}\n\n  // Called if and when this Tile is colliding with an entity.\n  // (Won't work if { solid: true }!)\n  onTouch(by: Entity) {}\n\n  // Same deal, but for when it's being standed on.\n  onStand(by: Entity) {}\n\n  // Air punched, e.g. hitting a question mark block.\n  onAirPunch() {}\n}\n\nexport const tilemap: Map <string, Class<Tile>> = new Map([\n  ['=', class GroundTile extends Tile {\n    constructor(game) {\n      super(game, {\n        name: 'Ground',\n        texPosition: [4, 5],\n        solid: true\n      })\n    }\n\n    onCreate() {\n      this.updateTexture()\n    }\n\n    onNearbyReplace() {\n      this.updateTexture()\n    }\n\n    updateTexture() {\n      // we need to look at our adjacient tiles to figure out\n      // how we should be displayed:\n\n      let topTile    = this.game.level.tileAt([this.x, this.y - 1])\n      let bottomTile = this.game.level.tileAt([this.x, this.y + 1])\n      let leftTile   = this.game.level.tileAt([this.x - 1, this.y])\n      let rightTile  = this.game.level.tileAt([this.x + 1, this.y])\n\n      let top    = topTile.name    === this.name\n      let bottom = bottomTile.name === this.name\n      let left   = leftTile.name   === this.name\n      let right  = rightTile.name  === this.name\n\n      let topLeftTile = this.game.level.tileAt([this.x - 1, this.y - 1])\n      let topRightTile = this.game.level.tileAt([this.x + 1, this.y - 1])\n      let bottomLeftTile = this.game.level.tileAt([this.x - 1, this.y + 1])\n      let bottomRightTile = this.game.level.tileAt([this.x + 1, this.y + 1])\n\n      let topLeft = topLeftTile.name === this.name\n      let topRight = topRightTile.name === this.name\n      let bottomLeft = bottomLeftTile.name === this.name\n      let bottomRight = bottomRightTile.name === this.name\n\n      if(top && left && right && bottom) this.texPosition = [1, 6]\n      if(!top && left && right && bottom) this.texPosition = [1, 5]\n      if(!top && !left && right && bottom) this.texPosition = [0, 5]\n      if(!top && left && !right && bottom) this.texPosition = [2, 5]\n      if(top && !left && right && bottom) this.texPosition = [0, 6]\n      if(top && !left && right && !bottom) this.texPosition = [0, 7]\n      if(top && left && right && !bottom) this.texPosition = [1, 7]\n      if(top && left && !right && !bottom) this.texPosition = [2, 7]\n      if(top && left && !right && bottom) this.texPosition = [2, 6]\n\n      if(top && left && right && bottom && !topLeft && !topRight)\n        this.texPosition = [5, 5]\n\n      if(top && left && right && bottom && !topLeft && topRight)\n        this.texPosition = [3, 6]\n\n      if(top && left && right && bottom && topLeft && !topRight)\n        this.texPosition = [4, 6]\n\n      if(top && left && right && bottom && !bottomLeft)\n        this.texPosition = [6, 6]\n\n      if(top && left && right && bottom && !bottomRight)\n        this.texPosition = [5, 6]\n\n      if(!top && left && right && bottom && !bottomRight)\n        this.texPosition = [6, 5]\n\n      if(!top && left && right && bottom && !bottomLeft)\n        this.texPosition = [7, 5]\n\n      if(top && left && right && !bottom && !topLeft && !topRight)\n        this.texPosition = [6, 7]\n\n      if(!top && !left && right && !bottom) this.texPosition = [3, 7]\n      if(left && right && !bottom && !top) this.texPosition = [4, 7]\n      if(left && !right && !bottom && !top) this.texPosition = [5, 7]\n      if(!top && !left && !right && bottom) this.texPosition = [3, 5]\n\n      if(top && !left && !right && bottom) this.texPosition = [7, 6]\n      if(top && !left && !right && !bottom) this.texPosition = [7, 7]\n\n      if(top && left && !right && bottom && !topLeft) this.texPosition = [8, 5]\n\n      // TODO\n    }\n  }],\n\n  ['P', class PipeTile extends Tile {\n    constructor(game) {\n      super(game, {\n        name: 'Pipe',\n        texPosition: [8, 4],\n        solid: true\n      })\n    }\n\n    onCreate() {\n      this.updateTexture()\n    }\n\n    onNearbyReplace() {\n      this.updateTexture()\n    }\n\n    updateTexture() {\n      // we need to look at our adjacient tiles to figure out\n      // how we should be displayed:\n\n      let topTile    = this.game.level.tileAt([this.x, this.y - 1])\n      let bottomTile = this.game.level.tileAt([this.x, this.y + 1])\n      let leftTile   = this.game.level.tileAt([this.x - 1, this.y])\n      let rightTile  = this.game.level.tileAt([this.x + 1, this.y])\n\n      let top    = topTile.name    === this.name\n      let bottom = bottomTile.name === this.name\n                || bottomTile.name === 'Ground'\n      let left   = leftTile.name   === this.name\n      let right  = rightTile.name  === this.name\n\n      let topLeftTile = this.game.level.tileAt([this.x - 1, this.y - 1])\n      let topRightTile = this.game.level.tileAt([this.x + 1, this.y - 1])\n      let bottomLeftTile = this.game.level.tileAt([this.x - 1, this.y + 1])\n      let bottomRightTile = this.game.level.tileAt([this.x + 1, this.y + 1])\n\n      let topLeft = topLeftTile.name === this.name\n      let topRight = topRightTile.name === this.name\n      let bottomLeft = bottomLeftTile.name === this.name\n      let bottomRight = bottomRightTile.name === this.name\n\n      if (!right) this.texPosition[0] = 9\n      if (!bottom) this.texPosition[1] = 4\n      if (!top)    this.texPosition[1] = 2\n      if (top && bottom) this.texPosition[1] = 3\n    }\n  }],\n\n  ['?', class QBlockTile extends Tile {\n    i: number\n\n    constructor(game) {\n      super(game, {\n        name: '? Block',\n        texPosition: [0, 4],\n        solid: true\n      })\n    }\n\n    onCreate() {\n      this.i = 0\n    }\n\n    onUpdate() {\n      this.i += 0.1\n      if(this.i >= 4) this.i = 0\n      this.texPosition[0] = Math.max(Math.floor(this.i), 0)\n    }\n\n    onAirPunch() {\n      new window.Audio('sound/smw_shell_ricochet.wav').play()\n\n      if (this.game && this.x && this.y) {\n        const tile = new (Tile.get('x'))(this.game)\n        const usedBlock = this.game.level.replaceTile([this.x, this.y], tile)\n        usedBlock.dy = -0.5 * Tile.size\n\n        let [x, y] = this.game.level.getAbsolutePosition([this.x, this.y])\n        let shroom = new Mushroom(this.game, x, 0)\n        shroom.y = y - shroom.h - 1\n        shroom.yv = -1.5\n        this.game.entities.push(shroom)\n      }\n    }\n  }],\n\n  ['x', class UsedBlockTile extends Tile {\n    constructor(game) {\n      super(game, {\n        name: 'Used Block',\n        texPosition: [4, 4],\n        solid: true,\n      })\n    }\n\n    onAirPunch() {\n      let snd = new window.Audio('sound/smw_shell_ricochet.wav')\n      snd.volume = 0.5\n      snd.play()\n    }\n\n    onUpdate() {\n      if(this.dy < 0) this.dy = Math.ceil(this.dy * 0.9)\n      else this.dy = 0\n    }\n  }],\n\n  ['*', class InvisibleBlockTile extends Tile {\n    constructor(game) {\n      super(game, {\n        name: 'Invisible Block',\n        texPosition: [0, 0],\n        solid: true\n      })\n    }\n  }],\n\n  ['~', class DonutTile extends Tile {\n    fallVelocity: number\n    fallCountdown: number\n    falling: boolean\n    lastStoodOn: number\n\n    constructor(game) {\n      super(game, {\n        name: 'Donut Block',\n        texPosition: [4, 3],\n        solid: false,\n        solidTop: true\n      })\n\n      this.fallVelocity = 0\n      this.fallCountdown = 40\n      this.falling = false\n      this.lastStoodOn = Date.now()\n    }\n\n    onUpdate() {\n      if (this.falling) {\n        this.dy += this.fallVelocity\n        this.dx = 0\n\n        if (this.fallVelocity < 6) {\n          this.fallVelocity += 0.3\n        }\n      }\n\n      if (this.lastStoodOn - Date.now() < -5 && !this.falling) {\n        // no longer\n        this.texPosition = [4, 3]\n        this.fallCountdown = 40\n        this.dx = 0\n        this.dy = 0\n      }\n\n      if (this.lastStoodOn - Date.now() < -2500 && this.falling) {\n        this.solidTop = true\n        this.dx = 0\n        this.dy = 0\n        this.fallCountdown = 40\n        this.texPosition = [4, 3]\n        this.fallVelocity = 0\n        this.falling = false\n      }\n    }\n\n    onStand() {\n      this.fallCountdown--\n      if (this.fallCountdown <= 0) {\n        this.falling = true\n        this.solidTop = false\n      } else {\n        this.dx = rnd(-2, 2)\n        this.dy = rnd(-2, 2)\n      }\n\n      this.lastStoodOn = Date.now()\n      this.texPosition = [4, 2]\n    }\n  }],\n\n  ['-', class AirTile extends Tile {\n    constructor(game) {\n      super(game, {\n        name: 'Air',\n        texPosition: [0, 0],\n      })\n    }\n\n    onCreate() {\n      let topTile    = this.game.level.tileAt([this.x, this.y - 1])\n      let bottomTile = this.game.level.tileAt([this.x, this.y + 1])\n      let leftTile   = this.game.level.tileAt([this.x - 1, this.y])\n      let rightTile  = this.game.level.tileAt([this.x + 1, this.y])\n\n      let topLeftTile = this.game.level.tileAt([this.x - 1, this.y - 1])\n      let topRightTile = this.game.level.tileAt([this.x + 1, this.y - 1])\n      let bottomLeftTile = this.game.level.tileAt([this.x - 1, this.y + 1])\n      let bottomRightTile = this.game.level.tileAt([this.x + 1, this.y + 1])\n\n      // if below us is the [centre, top] of ground, randomly place foliage\n      if(bottomTile.name === 'Ground' && bottomLeftTile.name === 'Ground' && bottomRightTile.name === 'Ground') {\n        let foliage = rnd(0, 4) // 1 in 5 chance of any at all\n\n        if(foliage === 0) {\n          let what = rnd(0, 4) // random piece\n\n          if(what === 0) {\n            if(topTile.name !== this.name) return\n\n            // tree!\n            this.texPosition = [0, 1]\n            topTile.texPosition = [1, 0]\n\n          } else {\n            this.texPosition = [what, 1]\n          }\n        }\n      }\n    }\n  }],\n\n  ['C', class CloudTile extends Tile {\n    constructor(game) {\n      super(game, {\n        name: 'Cloud',\n        texPosition: [4, 1],\n        solidTop: true,\n      })\n    }\n  }],\n\n  ['0', class CoinTile extends Tile {\n    i: number\n\n    coinSound: window.Audio\n\n    constructor(game) {\n      super(game, {\n        name: 'Coin',\n        texPosition: [0, 3],\n      })\n\n      this.coinSound = new window.Audio('sound/smw_coin.wav')\n    }\n\n    onCreate() {\n      this.i = 0\n\n      const tile = new (Tile.get('-'))(this.game)\n      const coin = new Coin(this.game)\n      const [x, y] = this.game.level.getAbsolutePosition([this.x, this.y])\n      coin.x = x\n      coin.y = y - coin.h + Tile.size - 1 // directly on top\n\n      this.game.level.replaceTile([this.x, this.y], tile)\n      this.game.entities.push(coin)\n    }\n\n    onUpdate() {\n      this.i += 0.1\n      if (this.i >= 4) this.i = 0\n\n      this.texPosition[0] = Math.max(Math.floor(this.i), 0)\n    }\n\n    onTouch(by: Entity) {\n      if(by instanceof Player) {\n        // TODO add 1 to coins\n\n        // replace this tile with Air\n        const tile = new (Tile.get('-'))(this.game)\n        this.game.level.replaceTile([this.x, this.y], tile)\n        this.coinSound.play()\n      }\n    }\n  }],\n\n  ['@', class PlayerTile extends Tile {\n    constructor(game) {\n      super(game, {\n        name: 'Player',\n        texPosition: [0, 0],\n      })\n    }\n\n    onCreate() {\n      // place the player here\n      const [x, y] = this.game.level.getAbsolutePosition([this.x, this.y])\n      this.game.player.x = x\n      this.game.player.y = y - this.game.player.h + Tile.size - 1 // directly\n                                                                  // on top\n\n      // replace this tile with Air\n      const tile = new (Tile.get('-'))(this.game)\n      this.game.level.replaceTile([this.x, this.y], tile)\n    }\n  }],\n\n  ['>', class SignTile extends Tile {\n    constructor(game) {\n      super(game, {\n        name: 'Sign',\n        texPosition: [0, 0],\n      })\n    }\n\n    onCreate() {\n      // place a sign here\n      let sign = new Sign(this.game)\n      const [x, y] = this.game.level.getAbsolutePosition([this.x, this.y])\n      sign.x = x\n      sign.y = y - sign.h + Tile.size - 2 // 1 block above top\n\n      // replace this tile with Air\n      const tile = new (Tile.get('-'))(this.game)\n      this.game.level.replaceTile([this.x, this.y], tile)\n    }\n  }],\n\n  ['$', class HalfwayFlagTile extends Tile {\n    constructor(game) {\n      super(game, {\n        name: 'Halfway Flag',\n        texPosition: [0, 0],\n      })\n    }\n\n    onCreate() {\n      // place a halfway flag here\n      const [x, y] = this.game.level.getAbsolutePosition([this.x, this.y])\n      let sign = new HalfwayFlag(this.game, x, y)\n\n      // replace this tile with Air\n      const tile = new (Tile.get('-'))(this.game)\n      this.game.level.replaceTile([this.x, this.y], tile)\n    }\n  }],\n\n  ['G', class GoombaTile extends Tile {\n    constructor(game) {\n      super(game, {\n        name: 'Goomba',\n        texPosition: [0, 0],\n      })\n    }\n\n    onCreate() {\n      // place a goomba here\n      let goomba = new Goomba(this.game)\n      const [x, y] = this.game.level.getAbsolutePosition([this.x, this.y])\n      goomba.x = x\n      goomba.y = y - goomba.h + Tile.size - 1 // directly on top\n\n      this.game.entities.push(goomba)\n\n      // replace this tile with Air\n      const tile = new (Tile.get('-'))(this.game)\n      this.game.level.replaceTile([this.x, this.y], tile)\n    }\n  }],\n\n  ['#', class DeathZoneTile extends Tile {\n    constructor(game) {\n      super(game, {\n        name: 'Death Zone',\n        texPosition: [0, 0],\n      })\n    }\n\n    onTouch(by: Entity) {\n      by.destroy()\n    }\n  }],\n\n  // World tiles ///////////////////////////////////////////////////////////////\n\n  ['W ~', class WorldWaterTile extends Tile {\n    constructor(game) {\n      super(game, {\n        name: 'Water',\n        texPosition: [0, 15],\n      })\n\n      this.solid = true\n    }\n  }],\n\n  ['W  ', class WorldGroundTile extends Tile {\n    constructor(game) {\n      super(game, {\n        name: 'Ground',\n        texPosition: [1, 13],\n      })\n\n      this.solid = true\n    }\n\n    onUpdate() {\n      let topTile    = this.game.level.tileAt([this.x, this.y - 1])\n      let bottomTile = this.game.level.tileAt([this.x, this.y + 1])\n      let leftTile   = this.game.level.tileAt([this.x - 1, this.y])\n      let rightTile  = this.game.level.tileAt([this.x + 1, this.y])\n\n      let top    = topTile.name    !== 'Water'\n      let bottom = bottomTile.name !== 'Water'\n      let left   = leftTile.name   !== 'Water'\n      let right  = rightTile.name  !== 'Water'\n\n      let topLeftTile = this.game.level.tileAt([this.x - 1, this.y - 1])\n      let topRightTile = this.game.level.tileAt([this.x + 1, this.y - 1])\n      let bottomLeftTile = this.game.level.tileAt([this.x - 1, this.y + 1])\n      let bottomRightTile = this.game.level.tileAt([this.x + 1, this.y + 1])\n\n      let topLeft = topLeftTile.name !== 'Water'\n      let topRight = topRightTile.name !== 'Water'\n      let bottomLeft = bottomLeftTile.name !== 'Water'\n      let bottomRight = bottomRightTile.name !== 'Water'\n\n      if(!left && top && right && bottom) this.texPosition = [0, 13]\n      if(left && top && !right && bottom) this.texPosition = [2, 13]\n      if(left && !top && right && bottom) this.texPosition = [1, 12]\n      if(left && top && right && !bottom) this.texPosition = [1, 14]\n\n      if(left && !top && !right && bottom) this.texPosition = [2, 12]\n      if(!left && !top && right && bottom) this.texPosition = [0, 12]\n      if(left && top && !right && !bottom) this.texPosition = [2, 14]\n      if(!left && top && right && !bottom) this.texPosition = [0, 14]\n\n      if(left && top && right && bottom && !topRight) {\n        this.texPosition = [3, 13]\n      }\n\n      if(left && top && right && bottom && !topLeft) {\n        this.texPosition = [4, 13]\n      }\n\n      if(left && top && right && bottom && !bottomRight) {\n        this.texPosition = [3, 12]\n      }\n\n      if(left && top && right && bottom && !bottomLeft) {\n        this.texPosition = [4, 12]\n      }\n    }\n  }],\n\n  ['W @', class WorldPlayerTile extends Tile {\n    constructor(game) {\n      super(game, {\n        name: 'Player',\n        texPosition: [0, 0],\n      })\n    }\n\n    onCreate() {\n      // place the player here\n      const [x, y] = this.game.level.getAbsolutePosition([this.x, this.y])\n      this.game.player.x = x\n      this.game.player.y = y// - this.game.player.h + Tile.size\n\n      // replace this tile with a pipe\n      const tile = new (Tile.get('W P'))(this.game)\n      this.game.level.replaceTile([this.x, this.y], tile)\n    }\n  }],\n\n  ['W :', class WorldFenceTile extends Tile {\n    constructor(game) {\n      super(game, {\n        name: 'Fence',\n        texPosition: [4, 14],\n      })\n\n      this.solid = true\n    }\n  }],\n\n  ['W .', class WorldFlowerTile extends Tile {\n    constructor(game) {\n      super(game, {\n        name: 'Flower',\n        texPosition: [3, 14],\n      })\n\n      this.solid = true\n    }\n  }],\n\n  ['W P', class WorldPipeTile extends Tile {\n    constructor(game) {\n      super(game, {\n        name: 'Pipe',\n        texPosition: [0, 11],\n      })\n    }\n  }],\n\n  ['W H', class WorldHouseTile extends Tile {\n    constructor(game) {\n      super(game, {\n        name: 'House',\n        texPosition: [1, 11],\n      })\n    }\n  }],\n\n  ['W -', class WorldPathTile extends Tile {\n    constructor(game) {\n      super(game, {\n        name: 'Path',\n        texPosition: [1, 9],\n      })\n    }\n\n    onUpdate() {\n      let topTile    = this.game.level.tileAt([this.x, this.y - 1])\n      let bottomTile = this.game.level.tileAt([this.x, this.y + 1])\n      let leftTile   = this.game.level.tileAt([this.x - 1, this.y])\n      let rightTile  = this.game.level.tileAt([this.x + 1, this.y])\n\n      const k = [this.name, 'Level', 'Pipe']\n\n      let top    = k.includes(topTile.name)\n      let bottom = k.includes(bottomTile.name)\n      let left   = k.includes(leftTile.name)\n      let right  = k.includes(rightTile.name)\n\n      if(top && !left && !right && bottom) this.texPosition = [2, 8]\n      if(top && left && !right && !bottom) this.texPosition = [3, 9]\n      if(top && !left && right && bottom) this.texPosition = [2, 10]\n      if(!top && !left && right && bottom) this.texPosition = [3, 8]\n      if(top && !left && right && !bottom) this.texPosition = [1, 8]\n      if(!top && left && !right && bottom) this.texPosition = [1, 10]\n    }\n  }],\n\n  ['W lv', class WorldLevelTile extends Tile {\n    complete: boolean\n\n    constructor(game) {\n      super(game, {\n        name: 'Level',\n        texPosition: [2, 9],\n      })\n\n      this.complete = false\n    }\n\n    onUpdate() {\n      this.texPosition = this.complete ?  [2, 9] : [3, 10]\n    }\n  }],\n\n  ['W 1', class WorldLevel1Tile extends Tile {\n    constructor(game) {\n      super(game, {\n        name: 'Level 1',\n        texPosition: [0, 0],\n      })\n    }\n\n    onCreate() {\n      // replace this tile with a level tile\n      const tile = new (Tile.get('W lv'))(this.game)\n      tile.levelid = 1\n      this.game.level.replaceTile([this.x, this.y], tile)\n    }\n  }],\n\n  ['W 2', class WorldLevel2Tile extends Tile {\n    constructor(game) {\n      super(game, {\n        name: 'Level 2',\n        texPosition: [0, 0],\n      })\n    }\n\n    onCreate() {\n      // replace this tile with a level tile\n      const tile = new (Tile.get('W lv'))(this.game)\n      tile.levelid = 2\n      this.game.level.replaceTile([this.x, this.y], tile)\n    }\n  }],\n\n  ['W 3', class WorldLevel3Tile extends Tile {\n    constructor(game) {\n      super(game, {\n        name: 'Level 3',\n        texPosition: [0, 0],\n      })\n    }\n\n    onCreate() {\n      // replace this tile with a level tile\n      const tile = new (Tile.get('W lv'))(this.game)\n      tile.levelid = 3\n      this.game.level.replaceTile([this.x, this.y], tile)\n    }\n  }],\n\n  ['W 4', class WorldLevel4Tile extends Tile {\n    constructor(game) {\n      super(game, {\n        name: 'Level 4',\n        texPosition: [0, 0],\n      })\n    }\n\n    onCreate() {\n      // replace this tile with a level tile\n      const tile = new (Tile.get('W lv'))(this.game)\n      tile.levelid = 4\n      this.game.level.replaceTile([this.x, this.y], tile)\n    }\n  }],\n\n  ['W 5', class WorldLevel5Tile extends Tile {\n    constructor(game) {\n      super(game, {\n        name: 'Level 5',\n        texPosition: [0, 0],\n      })\n    }\n\n    onCreate() {\n      // replace this tile with a level tile\n      const tile = new (Tile.get('W lv'))(this.game)\n      tile.levelid = 5\n      this.game.level.replaceTile([this.x, this.y], tile)\n    }\n  }],\n\n  ['W 6', class WorldLevel6Tile extends Tile {\n    constructor(game) {\n      super(game, {\n        name: 'Level 6',\n        texPosition: [0, 0],\n      })\n    }\n\n    onCreate() {\n      // replace this tile with a level tile\n      const tile = new (Tile.get('W lv'))(this.game)\n      tile.levelid = 6\n      this.game.level.replaceTile([this.x, this.y], tile)\n    }\n  }],\n\n  ['W 7', class WorldLevel7Tile extends Tile {\n    constructor(game) {\n      super(game, {\n        name: 'Level 7',\n        texPosition: [0, 0],\n      })\n    }\n\n    onCreate() {\n      // replace this tile with a level tile\n      const tile = new (Tile.get('W lv'))(this.game)\n      tile.levelid = 7\n      this.game.level.replaceTile([this.x, this.y], tile)\n    }\n  }],\n\n  ['W 8', class WorldLevel8Tile extends Tile {\n    constructor(game) {\n      super(game, {\n        name: 'Level 8',\n        texPosition: [0, 0],\n      })\n    }\n\n    onCreate() {\n      // replace this tile with a level tile\n      const tile = new (Tile.get('W lv'))(this.game)\n      tile.levelid = 8\n      this.game.level.replaceTile([this.x, this.y], tile)\n    }\n  }],\n])\n\nTile.size = 16\n","import SLW from './SLW'\nimport BrowserSLW from './BrowserSLW'\n\nwindow.addEventListener('load', e => {\n  let tileset = new Image\n\n  tileset.onload = () => {\n    const game = new SLW('F', tileset)\n    const browser = new BrowserSLW(game)\n\n    // For debugging only\n    window.game = game\n    window.browser = browser\n\n    document.body.appendChild(game.canvas)\n\n    game.tileset = tileset\n    game.canvas.focus()\n\n    let didTick = false\n\n    !(function render() {\n      game.gamepadInput()\n\n      if(document.hasFocus()) { // don't update if we're in devtools\n        // Very deliberate order:\n        game.player.update()\n        game.cameraUpdate()\n        game.level.update()\n        game.entityUpdate()\n\n        game.canvasClear()\n        game.draw()\n      }\n\n      requestAnimationFrame(render)\n    })()\n  }\n\n  tileset.src = 'tileset.png'\n})\n","module.exports = \"# Worlds & Levels..\\n\\n[F]\\nid=\\\"F\\\"\\nname=\\\"Flower Gardens\\\"\\nmusic=\\\"flower-gardens\\\"\\nspecial=[\\\"world\\\"]\\nbackground=\\\"none\\\"\\ntilemap = \\\"\\\"\\\"\\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~  @ ..   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\\n~~~~~~~~~~~~~~~~~~~~~~        ~~~   ~~~   - ...       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\\n~~~~~~~~~~~~~~~~~~~     --7--  ~  P ~~~ . -      ..   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\\n~~~~~~~~~~~~~~~~~   ::: -   -     -  ~~ . 1---------    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\\n~~~~~~~~~~~~~~~~  6------ ~ ------8  ~~ . ::      :- .  ~   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\\n~~~~~~~~~~~~~~~   -                            ..  -   ~~   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\\n~~~~~~~~~~~~~~~ --- ... H      ..   : 3------------2  ~~~  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\\n~~~~~~~~~~~~~~~ -    ...  :           -              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\\n~~~~~~~~~~~~~~~ -:::             : ----    ~~~~~    ~~    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\\n~~~~~~~~~~~~~~  5-------------- .. -       ~~~~~~~~~~  :H   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\\n~~~~~~~~~~~~~~             :: -----4   ...  ~~~~~~~~~  .    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\\n~~~~~~~~~~~~~~~~     .....    -        ...      ~~~~~~   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\\n~~~~~~~~~~~~~~~~~~~    ...    --H ~~~           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\\n~~~~~~~~~~~~~~~~~~~~~~            ~~~ H ::   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\\n\\\"\\\"\\\"\\n\\n\\n[F-1]\\nworld=\\\"F\\\"\\nid=1\\nname=\\\"Typical Beginnings\\\"\\n\\nmusic=\\\"grassland\\\"\\nspecial=[]\\nbackground=\\\"hills\\\"\\ntilemap = \\\"\\\"\\\"\\n=----------------------------------------------------------------------------------=\\n=----------------------------------------------------------------------------------=\\n=----------------------------------------------------------------------------------=\\n=----------------------------------------------------------------------------------=\\n=----------------------------------------------------------------------------------=\\n=----------------------------------------------------------------------------------=\\n=----------------------------------------------------------------------------------=\\n=----------------------------------------------------------------------------------=\\n=------------------------------------------------------------------------==--------=\\n=------------------------------------------------------------------------==~~~======\\n=-----------------------------------------------------------------------------======\\n=--------------------------------------------------------------------------------===\\n=------------------------------------------------------------=========-------------=\\n=-----------------------------------------------------------===========------------=\\n=-----------------------------------------------------------===========---CC-------=\\n=------------------------------------------------------------===========-----------=\\n=-----------------------------------000-------------------------========-----------=\\n=----------------------------------0------------------------------======-----CCC---=\\n=----------000--------------------0--=========~~~~====xxx====-=-=-=====------------=\\n=------------------------------------======--------=========-----------------------=\\n=----------x??x----------------------====-----------=======---------------------PP-=\\n=----------------------------0---========------------======--00000000-----PP----PP-=\\n=-------------------------000---=========-G---------=======--00000000--PP-PP----PP-=\\n=---@->------------------------============================------------PP-PP-------=\\n=============================================================================------=\\n=============================================================================------=\\n=============================================================================------=\\n\\\"\\\"\\\"\\n\\n[F-2]\\nworld=\\\"F\\\"\\nid=2\\nname=\\\"Debug Land\\\"\\n\\nmusic=\\\"athletic\\\"\\nspecial=[\\\"floating\\\"]\\nbackground=\\\"clouds\\\"\\ntilemap = \\\"\\\"\\\"\\n=-------------------------------------------=\\n=-------------------------------------------=\\n=-------------------------------------------=\\n=-------------------------------------------=\\n=-------------------------------------------=\\n=-------------------------------------------=\\n=-------------------------------------------=\\n=-------------------------------------------=\\n=-------------------------------------------=\\n=-------------------------------------------=\\n=-------------------------------------------=\\n=-------------------------------------------=\\n=-------------------------------------------=\\n=---------------xxxxxx----------------------=\\n=----------------------------------x--x-----=\\n=------------------------x----x-------------=\\n=--------?---------------xxxxxxxxxxxxxx-----=\\n=-------------------------------x-----------=\\n=-------------------------------x-----------=\\n=-----xxxxxxxxx-------->--------x-----------=\\n=---------------------xxx*****xxx-----------=\\n=---------------xxxxxxx--------------$---$--=\\n=-------------------xxx--------------x##x---=\\n=----@-----$-------------------------xxxx---=\\n=--======================-----============--=\\n=--======================-----============--=\\n=--======================-----============--=\\n\\\"\\\"\\\"\\n\";\n","// @flow\n// General utility functions.\n\n// Gets the sign of a number, as a number. If the given number is negative,\n// it returns -1, if positive, 1, and if zero, 0.\nexport function sign(n: number): number {\n  if (n > 0) return 1\n  if (n < 0) return -1\n  return 0\n}\n\n// Returns a random integer from `min` through `max`.\nexport function rnd(min: number, max: number): number {\n  return Math.floor(Math.random() * max) + min\n}\n\n// Compares the contents of two arrays.\nexport function arrEqual(arr1: Array<any>, arr2: Array<any>): boolean {\n  if (arr1.length !== arr2.length) {\n    return false\n  }\n\n  for (let i = 0; i < arr1.length; i++) {\n    if (arr1[i] !== arr2[i]) {\n      return false\n    }\n  }\n\n  return true\n}\n\n// Returns an image written over by a colour, taking an operation type and alpha.\n// Default values useful for masking.\nexport function tint(img: Image, colour: string, operation: string = 'source-in', alpha: number = 1): Image {\n  // create hidden canvas (using image dimensions)\n  let canvas = document.createElement('canvas')\n  canvas.width = img.width\n  canvas.height = img.height\n\n  let ctx = canvas.getContext('2d')\n  if (!ctx) throw new TypeError('Failed to get new canvas context.')\n  ctx.drawImage(img, 0, 0)\n\n  // overlay filled rectangle using lighter composition\n  ctx.globalCompositeOperation = operation\n  ctx.globalAlpha = alpha\n  ctx.fillStyle = colour\n  ctx.fillRect(0, 0, canvas.width, canvas.height)\n\n  // return a new image\n  let res = new Image\n  res.src = canvas.toDataURL()\n  return res\n}\n\n// Returns an image, taking a width, height, and optional offset values.\nexport function crop(img: Image, w: number, h: number, ox: number = 0, oy: number = 0): Image {\n  // create hidden canvas (using image dimensions)\n  let canvas = document.createElement('canvas')\n  canvas.width = w\n  canvas.height = h\n\n  let ctx = canvas.getContext('2d')\n  if (!ctx) throw new TypeError('Failed to get new canvas context.')\n\n  // perfrom actual 'crop' operation\n  ctx.drawImage(img, ox, oy, w, h, 0, 0, w, h)\n\n  // return a new image\n  let res = new Image\n  res.src = canvas.toDataURL()\n  return res\n}\n\n// Event controller class.\n//\n// You should NOT use this:\n// * When a subclass would be beter off instead. For example, don't use\n//   an event controller in place of a tile subclass, even though they have\n//   similar feels (\"onCreate\", \"onDelete\", etc). If you're going to have\n//   one specific behavior for an event (e.g. donut tile falling when stepped\n//   on for long enough), use a subclass, not an event controller.\n//\n// You SHOULD use this:\n// * As an interface between completely separate things. Use an event\n//   controller when you expect an event to be watched - for instance, a\n//   level changing, or a player dying.\n//\n// If you're going to use an event controller, store it on the object it's\n// relevant to with the events property. Then you can access it, for example,\n// with game.events.\n//\n// Stick to normal DOM-like event names, e.g. created, beforeunload. I know\n// it doesn't look very good but that's what's been used for event names for\n// as long as I know (in node.js too, I think!) so that's what's going to be\n// used here as well.\n//\n// Get tenses in names right. If the event is triggered after something\n// happens, the event name should be past tense - i.e. 'created'. If the event\n// is triggered before something happens, the event name should start with\n// 'before' - i.e. 'beforelevelchange'.\n//\n// In the future there's a fair chance I'll make this work with promises, so\n// that transitions might be able to be done a bit better... for example, if\n// things are supposed to happen before a level is entered, such as a\n// transition-out effect, they can be finished *before* the real internal\n// changes happen (that is, a new level is loaded).\n//\nexport class EventController {\n  listeners: Map<string, Array<Function>>\n\n  constructor() {\n    this.listeners = new Map()\n  }\n\n  // Register an event. Adding event listeners and dispatching events will\n  // throw an error if you try to do so without a registered event name -\n  // this is mostly to prevent entering the wrong event name!\n  registerEvent(eventName: string) {\n    this.listeners.set(eventName, [])\n  }\n\n  // Add an event listener. When the given event name is dispatched, the\n  // callback function will be called. The callback function may be called\n  // multiple times - always once every time the event is dispatched.\n  addEventListener(eventName: string, callback: Function) {\n    if (this.listeners.has(eventName)) {\n      const eventListeners: ?Array<Function> = this.listeners.get(eventName)\n      if (eventListeners) {\n        eventListeners.push(callback)\n      }\n    } else {\n      throw new Error('Invalid event name')\n    }\n  }\n\n  // Dispatch an event. That means calling every listener with that name. A\n  // data object argument can be passed to give data to the functions.\n  dispatchEvent(eventName: string, data: Object = {}) {\n    if (this.listeners.has(eventName)) {\n      const eventListeners: ?Array<Function> = this.listeners.get(eventName)\n      if (eventListeners) {\n        for (let callback of eventListeners) {\n          callback(data)\n        }\n      }\n    } else {\n      throw new Error('Invalid event name')\n    }\n  }\n}\n\nconst toml = require('toml')\nexport const levels = toml.parse(require('./levels.toml'))\n"]}