{"version":3,"sources":["node_modules/browser-pack/_prelude.js","node_modules/hjson/lib/hjson-comments.js","node_modules/hjson/lib/hjson-common.js","node_modules/hjson/lib/hjson-dsf.js","node_modules/hjson/lib/hjson-parse.js","node_modules/hjson/lib/hjson-stringify.js","node_modules/hjson/lib/hjson-version.js","node_modules/hjson/lib/hjson.js","node_modules/os-browserify/browser.js","node_modules/pleasejs/dist/Please.js","src/BrowserSLW.js","src/Cursor.js","src/Entity.js","src/Level.js","src/SLW.js","src/SoundManager.js","src/Text.js","src/Tile.js","src/editor.hjson","src/index.js","src/levels.hjson","src/util.js"],"names":["e","t","n","r","s","o","u","a","require","i","f","Error","code","l","exports","call","length","1","module","makeComment","b","x","c","extractComments","value","root","comments","common","getComment","removeComment","any","res","Object","prototype","toString","apply","saveComment","keys","currentKeys","concat","forEach","key","hasOwnProperty","indexOf","push","undefined","mergeStr","arguments","trim","mergeComments","dropped","merge","text","rootComment","path","join","replace","item","col","droppedComment","dropAll","kpath","slice","setComments","createComment","setText","header","comment","forceComment","extract","footer","tryParseNumber","stopAtNext","next","ch","charAt","at","number","string","leadingZeros","testLeading","isFinite","defineProperty","enumerable","writable","__COMMENTS__","str","j","len","split","os","EOL","loadDsf","type","isFunction","nopDsf","dsf","name","parse","stringify","some","isInvalidDsfChar","message","runDsf","bind","math","opt","Infinity","NaN","isNaN","hex","out","test","parseInt","Number","isInteger","date","dt","Date","toISOString","substr","description","std","$source","$opt","resetAt","isPunctuatorChar","error","m","line","peek","offs","uffff","charCodeAt","String","fromCharCode","escapee","mlString","skipIndent","skip","indent","triple","keyname","start","space","white","tfnns","isEol","chf","dsfValue","cAt","first","shift","errorClosingHint","search","k","report","possibleErr","array","nextComment","keepComments","hint","object","withoutBraces","checkTrailing","v","rootValue","e2","hjsonParse","source","dsfDef","keepWsc","\"","\\","/","$value","wrap","tk","quoteReplace","needsEscape","meta","token","esc","uni","quote","gap","hasComment","isRootObject","needsQuotes","lastIndex","startsWithKeyword","quoteAlways","needsEscapeML","qstr","mstr","eol","quoteKey","needsEscapeName","qkey","noIndent","startsWithNL","commentOnThisLine","prefix","rem","num","lit","isArray","mind","ca","eolMind","eolGap","bracesSameLine","partial","arr","obj","hjsonStringify","quotes","colors","\b","\t","\n","\f","\r","version","endOfLine","setEndOfLine","rt","options","endianness","hostname","location","loadavg","uptime","freemem","MAX_VALUE","totalmem","cpus","release","navigator","appVersion","networkInterfaces","getNetworkInterfaces","arch","platform","tmpdir","tmpDir","define","amd","this","Math","random","floor","max","min","F","HSV_to_HEX","HSV_to_RGB","g","console","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgrey","darkgreen","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","grey","green","greenyellow","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgrey","lightgreen","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","tan","teal","thistle","tomato","turquoise","violet","wheat","whitesmoke","yellow","yellowgreen","hue","saturation","base_color","greyscale","grayscale","golden","full_random","colors_returned","format","seed","scheme_type","h","NAME_to_HEX","toLowerCase","NAME_to_RGB","HEX_to_RGB","NAME_to_HSV","HEX_to_HSV","exec","RGB_to_HEX","RGB_to_HSV","make_scheme","d","abs","make_color","match","E","p","make_contrast","_SLW","_Tile","Tiles","_Entity","Entities","_util","BrowserSLW","game","_classCallCheck","document","getElementById","editorToggle","addToggle","_Toggle","_class","_possibleConstructorReturn","__proto__","getPrototypeOf","_inherits","_createClass","setTitle","setChecked","el","checked","tiles","editor","tileEls","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_loop","tile","img","crop","level","tileset","default","size","texPosition","classList","add","addEventListener","evt","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_step3","_iterator3","Symbol","iterator","done","tileEl","remove","err","return","tileToPaint","appendChild","_iterator","entities","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_loop2","sprite","positionType","sheet","w","position","_iteratorNormalCompletion4","_didIteratorError4","_iteratorError4","_step4","_iterator4","destroy","_iterator2","click","innerHTML","editorEnabled","Toggle","events","_ref","special","includes","setDisabled","_Toggle2","_class2","load","gamepadSupport","save","gamepadEnabled","toggleClass","toggle","toggles","querySelector","btn","_this3","createElement","onCreate","window","onDestroy","newChecked","onCheckedChanged","newDisabled","disabled","setAttribute","removeAttribute","newTitle","firstChild","removeChild","createTextNode","localStorage","Cursor","scale","pos","down","image","Image","src","_this","rect","getBoundingClientRect","clientX","left","clientY","top","ctx","y","centeredX","width","centeredY","height","drawImage","_Level","_Text","DEBUG","GRAVITY","Entity","z","xv","yv","color","stop","round","sign","touchingWallRight","touchingWallLeft","_i","grounded","collides","ceil","_Tile2","tilesAbove","onAirPunch","pickTiles","_tile","onTouch","tilesBelow","_tile2","onStand","entityCollides","entity","canvas","getContext","CanvasRenderingContext2D","fillStyle","fillRect","_Text2","write","constructor","right","bottom","_ref2","_slicedToArray","shouldReturnTiles","tileLeft","tileRight","tileTop","tileBottom","collision","tileAt","solid","px","py","splice","_iteratorNormalCompletion5","_didIteratorError5","_iteratorError5","_step5","_iterator5","by","solidTop","Player","spriteAnimation","time","dir","anim","oldAnim","nextFrame","state","errorSound","sounds","getSound","startLevelSound","moveLevelSound","jumpSound","mapMotion","levelMotion","_get","wantsInput","playNew","walkSpeed","on","tileX","tileY","lastOn","_on$texPosition","isRight","isLeft","isDown","isUp","isYes","newKeys","lv","id","levelid","levels","newLevel","_Level2","changeLevel","tick","isJump","mayJump","lastJump","now","up","world","Powerup","Goomba","_this2","Mushroom","_ref3","_len","args","Array","_key","_this4","_toConsumableArray","Sign","_this5","Coin","_this6","coinSound","get","HalfwayFlag","_this7","frame","MUSIC_VOLUMES","airship","athletic","beach","castle","ice-cave","file-select","flower-gardens","grassland","jungle","kapper-valley","star-world","underwater-underworld","water","underground","Level","tilemap","_k","layer","opts","exists","music","volume","loops","def","_constructor","ent","Function","onUpdate","viewStartX","camera","viewStartY","viewEndX","viewEndY","_tiles","tilesAt","_getAbsolutePosition","getAbsolutePosition","_getAbsolutePosition2","rendX","rendY","_tile$texPosition","dx","dy","ts","filter","Air","_ref4","_ref6","_ref5","newTile","_ref8","_ref7","oldTile","tileRemove","onNearbyReplace","_ref10","_ref9","_Cursor","_SoundManager","BG_COLORS","clouds","hills","BG_REPEATS","SLW","EventController","registerEvent","_SoundManager2","keyCode","which","player","cameraInEditor","cursor","_Cursor2","watchMouse","lastPlacePos","genericTilePlaceSound","airPlaceSound","background","gamepads","getGamepads","newest","gamepad","connected","timestamp","pad","buttons","pressed","axes","warn","minY","maxY","minX","maxX","CAM_SPD","wave","sin","lag","update","oldLevel","create","dispatchEvent","tx","ty","translate","ptrn","bg","createPattern","restore","sort","draw","tileOn","metaOf","map","_cursor$pos","cursorX","cursorY","roundTileX","roundTileY","cursorTileX","cursorTileY","drawUsingCtx","isEntity","arrEqual","lastPlaced","replaceTile","sound","makeNew","then","rate","SoundManager","Map","AudioContext","urlTemplate","ext","has","Sound","set","manager","srcURL","dataBufferLoaded","sources","loadingPromise","fetch","response","arrayBuffer","buf","decodeAudioData","data","dataBuffer","SoundSource","Promise","resolve","buffer","createBufferSource","loop","gainNode","createGain","connect","destination","gain","playbackRate","Text","chars","TypeError","tint","char","A","B","C","D","G","H","I","J","K","L","M","N","O","P","Q","R","S","T","U","V","W","X","Y","Z","q","?","!",".","'","(",")","#"," ","-","0","2","3","4","5","6","7","8","9","Tile","props","UsedBlock","updateTexture","topTile","bottomTile","bottomLeftTile","bottomRightTile","foliage","rnd","what","QuestionBlock","output","punchSound","usedBlock","_game$level$getAbsolu","_game$level$getAbsolu2","_BrowserSLW","onload","_SLW2","browser","_BrowserSLW2","body","focus","render","gamepadInput","hasFocus","cameraUpdate","entityUpdate","canvasClear","requestAnimationFrame","arr1","arr2","colour","operation","alpha","globalCompositeOperation","globalAlpha","toDataURL","ox","oy","hjson","listeners","eventName","callback","eventListeners","Empty"],"mappings":"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","file":"index.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","/* Hjson http://hjson.org */\n/* jslint node: true */\n\"use strict\";\n\nvar common=require(\"./hjson-common\");\n\nfunction makeComment(b, a, x) {\n  var c;\n  if (b) c={ b: b };\n  if (a) (c=c||{}).a=a;\n  if (x) (c=c||{}).x=x;\n  return c;\n}\n\nfunction extractComments(value, root) {\n\n  if (value===null || typeof value!=='object') return;\n  var comments=common.getComment(value);\n  if (comments) common.removeComment(value);\n\n  var i, length; // loop\n  var any, res;\n  if (Object.prototype.toString.apply(value) === '[object Array]') {\n    res={ a: [] };\n    for (i=0, length=value.length; i<length; i++) {\n      if (saveComment(res.a, i, comments.a[i], extractComments(value[i])))\n        any=true;\n    }\n    if (!any && comments.e){\n      res.e=makeComment(comments.e[0], comments.e[1]);\n      any=true;\n    }\n  } else {\n    res={ s: {} };\n\n    // get key order (comments and current)\n    var keys, currentKeys=Object.keys(value);\n    if (comments && comments.o) {\n      keys=[];\n      comments.o.concat(currentKeys).forEach(function(key) {\n        if (Object.prototype.hasOwnProperty.call(value, key) && keys.indexOf(key)<0)\n          keys.push(key);\n      });\n    } else keys=currentKeys;\n    res.o=keys;\n\n    // extract comments\n    for (i=0, length=keys.length; i<length; i++) {\n      var key=keys[i];\n      if (saveComment(res.s, key, comments.c[key], extractComments(value[key])))\n        any=true;\n    }\n    if (!any && comments.e) {\n      res.e=makeComment(comments.e[0], comments.e[1]);\n      any=true;\n    }\n  }\n\n  if (root && comments && comments.r) {\n    res.r=makeComment(comments.r[0], comments.r[1]);\n  }\n\n  return any?res:undefined;\n}\n\nfunction mergeStr() {\n  var res=\"\";\n  [].forEach.call(arguments, function(c) {\n    if (c && c.trim()!==\"\") {\n      if (res) res+=\"; \";\n      res+=c.trim();\n    }\n  });\n  return res;\n}\n\nfunction mergeComments(comments, value) {\n  var dropped=[];\n  merge(comments, value, dropped, []);\n\n  // append dropped comments:\n  if (dropped.length>0) {\n    var text=rootComment(value, null, 1);\n    text+=\"\\n# Orphaned comments:\\n\";\n    dropped.forEach(function(c) {\n      text+=(\"# \"+c.path.join('/')+\": \"+mergeStr(c.b, c.a, c.e)).replace(\"\\n\", \"\\\\n \")+\"\\n\";\n    });\n    rootComment(value, text, 1);\n  }\n}\n\nfunction saveComment(res, key, item, col) {\n  var c=makeComment(item?item[0]:undefined, item?item[1]:undefined, col);\n  if (c) res[key]=c;\n  return c;\n}\n\nfunction droppedComment(path, c) {\n  var res=makeComment(c.b, c.a);\n  res.path=path;\n  return res;\n}\n\nfunction dropAll(comments, dropped, path) {\n\n  if (!comments) return;\n\n  var i, length; // loop\n\n  if (comments.a) {\n\n    for (i=0, length=comments.a.length; i<length; i++) {\n      var kpath=path.slice().concat([i]);\n      var c=comments.a[i];\n      if (c) {\n        dropped.push(droppedComment(kpath, c));\n        dropAll(c.x, dropped, kpath);\n      }\n    }\n  } else if (comments.o) {\n\n    comments.o.forEach(function(key) {\n      var kpath=path.slice().concat([key]);\n      var c=comments.s[key];\n      if (c) {\n        dropped.push(droppedComment(kpath, c));\n        dropAll(c.x, dropped, kpath);\n      }\n    });\n  }\n\n  if (comments.e)\n    dropped.push(droppedComment(path, comments.e));\n}\n\nfunction merge(comments, value, dropped, path) {\n\n  if (!comments) return;\n  if (value===null || typeof value!=='object') {\n    dropAll(comments, dropped, path);\n    return;\n  }\n\n  var i, length; // loop\n  var setComments=common.createComment(value);\n\n  if (path.length===0 && comments.r)\n    setComments.r=[comments.r.b, comments.r.a];\n\n  if (Object.prototype.toString.apply(value) === '[object Array]') {\n    setComments.a=[];\n    for (i=0, length=(comments.a||[]).length; i<length; i++) {\n      var kpath=path.slice().concat([i]);\n      var c=comments.a[i];\n      if (!c) continue;\n      if (i<value.length) {\n        setComments.a.push([c.b, c.a]);\n        merge(c.x, value[i], dropped, kpath);\n      } else {\n        dropped.push(droppedComment(kpath, c));\n        dropAll(c.x, dropped, kpath);\n      }\n    }\n    if (i===0 && comments.e) setComments.e=[comments.e.b, comments.e.a];\n  } else {\n    setComments.c={};\n    setComments.o=[];\n    (comments.o||[]).forEach(function(key) {\n      var kpath=path.slice().concat([key]);\n      var c=comments.s[key];\n      if (Object.prototype.hasOwnProperty.call(value, key)) {\n        setComments.o.push(key);\n        if (c) {\n          setComments.c[key]=[c.b, c.a];\n          merge(c.x, value[key], dropped, kpath);\n        }\n      } else if (c) {\n        dropped.push(droppedComment(kpath, c));\n        dropAll(c.x, dropped, kpath);\n      }\n    });\n    if (comments.e) setComments.e=[comments.e.b, comments.e.a];\n  }\n}\n\nfunction rootComment(value, setText, header) {\n  var comment=common.createComment(value, common.getComment(value));\n  if (!comment.r) comment.r=[\"\", \"\"];\n  if (setText || setText===\"\") comment.r[header]=common.forceComment(setText);\n  return comment.r[header]||\"\";\n}\n\nmodule.exports={\n  extract: function(value) { return extractComments(value, true); },\n  merge: mergeComments,\n  header: function(value, setText) { return rootComment(value, setText, 0); },\n  footer: function(value, setText) { return rootComment(value, setText, 1); },\n};\n","/* Hjson http://hjson.org */\n/* jslint node: true */\n\"use strict\";\n\nvar os=require('os'); // will be {} when used in a browser\n\nfunction tryParseNumber(text, stopAtNext) {\n\n  // try to parse a number\n\n  var number, string = '', leadingZeros = 0, testLeading = true;\n  var at = 0;\n  var ch;\n  function next() {\n    ch = text.charAt(at);\n    at++;\n    return ch;\n  }\n\n  next();\n  if (ch === '-') {\n    string = '-';\n    next();\n  }\n  while (ch >= '0' && ch <= '9') {\n    if (testLeading) {\n      if (ch == '0') leadingZeros++;\n      else testLeading = false;\n    }\n    string += ch;\n    next();\n  }\n  if (testLeading) leadingZeros--; // single 0 is allowed\n  if (ch === '.') {\n    string += '.';\n    while (next() && ch >= '0' && ch <= '9')\n      string += ch;\n  }\n  if (ch === 'e' || ch === 'E') {\n    string += ch;\n    next();\n    if (ch === '-' || ch === '+') {\n      string += ch;\n      next();\n    }\n    while (ch >= '0' && ch <= '9') {\n      string += ch;\n      next();\n    }\n  }\n\n  // skip white/to (newline)\n  while (ch && ch <= ' ') next();\n\n  if (stopAtNext) {\n    // end scan if we find a punctuator character like ,}] or a comment\n    if (ch === ',' || ch === '}' || ch === ']' ||\n      ch === '#' || ch === '/' && (text[at] === '/' || text[at] === '*')) ch = 0;\n  }\n\n  number = +string;\n  if (ch || leadingZeros || !isFinite(number)) return undefined;\n  else return number;\n}\n\nfunction createComment(value, comment) {\n  if (Object.defineProperty) Object.defineProperty(value, \"__COMMENTS__\", { enumerable: false, writable: true });\n  return (value.__COMMENTS__ = comment||{});\n}\n\nfunction removeComment(value) {\n  Object.defineProperty(value, \"__COMMENTS__\", { value: undefined });\n}\n\nfunction getComment(value) {\n  return value.__COMMENTS__;\n}\n\nfunction forceComment(text) {\n  if (!text) return \"\";\n  var a = text.split('\\n');\n  var str, i, j, len;\n  for (j = 0; j < a.length; j++) {\n    str = a[j];\n    len = str.length;\n    for (i = 0; i < len; i++) {\n      var c = str[i];\n      if (c === '#') break;\n      else if (c === '/' && (str[i+1] === '/' || str[i+1] === '*')) {\n        if (str[i+1] === '*') j = a.length; // assume /**/ covers whole block, bail out\n        break;\n      }\n      else if (c > ' ') {\n        a[j] = '# ' + str;\n        break;\n      }\n    }\n  }\n  return a.join('\\n');\n}\n\nmodule.exports = {\n  EOL: os.EOL || '\\n',\n  tryParseNumber: tryParseNumber,\n  createComment: createComment,\n  removeComment: removeComment,\n  getComment: getComment,\n  forceComment: forceComment,\n};\n","/* Hjson http://hjson.org */\n/* jslint node: true */\n\"use strict\";\n\nvar common = require(\"./hjson-common\");\n\nfunction loadDsf(col, type) {\n\n  if (Object.prototype.toString.apply(col) !== '[object Array]') {\n    if (col) throw new Error(\"dsf option must contain an array!\");\n    else return nopDsf;\n  } else if (col.length === 0) return nopDsf;\n\n  var dsf = [];\n  function isFunction(f) { return {}.toString.call(f) === '[object Function]'; }\n\n  col.forEach(function(x) {\n    if (!x.name || !isFunction(x.parse) || !isFunction(x.stringify))\n      throw new Error(\"extension does not match the DSF interface\");\n    dsf.push(function() {\n      try {\n        if (type == \"parse\") {\n          return x.parse.apply(null, arguments);\n        } else if (type == \"stringify\") {\n          var res=x.stringify.apply(null, arguments);\n          // check result\n          if (res !== undefined && (typeof res !== \"string\" ||\n            res.length === 0 ||\n            res[0] === '\"' ||\n            [].some.call(res, function(c) { return isInvalidDsfChar(c); })))\n            throw new Error(\"value may not be empty, start with a quote or contain a punctuator character except colon: \" + res);\n          return res;\n        } else throw new Error(\"Invalid type\");\n      } catch (e) {\n        throw new Error(\"DSF-\"+x.name+\" failed; \"+e.message);\n      }\n    });\n  });\n\n  return runDsf.bind(null, dsf);\n}\n\nfunction runDsf(dsf, value) {\n  if (dsf) {\n    for (var i = 0; i < dsf.length; i++) {\n      var res = dsf[i](value);\n      if (res !== undefined) return res;\n    }\n  }\n}\n\nfunction nopDsf(value) {\n}\n\nfunction isInvalidDsfChar(c) {\n  return c === '{' || c === '}' || c === '[' || c === ']' || c === ',';\n}\n\n\nfunction math(opt) {\n  return {\n    name: \"math\",\n    parse: function (value) {\n      switch (value) {\n        case \"+inf\":\n        case \"inf\":\n        case \"+Inf\":\n        case \"Inf\": return Infinity;\n        case \"-inf\":\n        case \"-Inf\": return -Infinity;\n        case \"nan\":\n        case \"NaN\": return NaN;\n      }\n    },\n    stringify: function (value) {\n      if (typeof value !== 'number') return;\n      if (1 / value === -Infinity) return \"-0\"; // 0 === -0\n      if (value === Infinity) return \"Inf\";\n      if (value === -Infinity) return \"-Inf\";\n      if (isNaN(value)) return \"NaN\";\n    },\n  };\n}\nmath.description=\"support for Inf/inf, -Inf/-inf, Nan/naN and -0\";\n\nfunction hex(opt) {\n  var out=opt && opt.out;\n  return {\n    name: \"hex\",\n    parse: function (value) {\n      if (/^0x[0-9A-Fa-f]+$/.test(value))\n        return parseInt(value, 16);\n    },\n    stringify: function (value) {\n      if (out && Number.isInteger(value))\n        return \"0x\"+value.toString(16);\n    },\n  };\n}\nhex.description=\"parse hexadecimal numbers prefixed with 0x\";\n\nfunction date(opt) {\n  return {\n    name: \"date\",\n    parse: function (value) {\n      if (/^\\d{4}-\\d{2}-\\d{2}$/.test(value) ||\n        /^\\d{4}-\\d{2}-\\d{2}T\\d{2}\\:\\d{2}\\:\\d{2}(?:.\\d+)(?:Z|[+-]\\d{2}:\\d{2})$/.test(value)) {\n        var dt = Date.parse(value);\n        if (!isNaN(dt)) return new Date(dt);\n      }\n    },\n    stringify: function (value) {\n      if (Object.prototype.toString.call(value) === '[object Date]') {\n        var dt = value.toISOString();\n        if (dt.indexOf(\"T00:00:00.000Z\", dt.length - 14) !== -1) return dt.substr(0, 10);\n        else return dt;\n      }\n    },\n  };\n}\ndate.description=\"support ISO dates\";\n\nmodule.exports = {\n  loadDsf: loadDsf,\n  std: {\n    math: math,\n    hex: hex,\n    date: date,\n  },\n};\n","/* Hjson http://hjson.org */\n/* jslint node: true */\n\"use strict\";\n\nmodule.exports = function($source, $opt) {\n\n  var common = require(\"./hjson-common\");\n  var dsf = require(\"./hjson-dsf\");\n\n  var text;\n  var at;   // The index of the current character\n  var ch;   // The current character\n  var escapee = {\n    '\"': '\"',\n    '\\\\': '\\\\',\n    '/': '/',\n    b:  '\\b',\n    f:  '\\f',\n    n:  '\\n',\n    r:  '\\r',\n    t:  '\\t'\n  };\n\n  var keepComments;\n  var runDsf; // domain specific formats\n\n  function resetAt() {\n    at = 0;\n    ch = ' ';\n  }\n\n  function isPunctuatorChar(c) {\n    return c === '{' || c === '}' || c === '[' || c === ']' || c === ',' || c === ':';\n  }\n\n  // Call error when something is wrong.\n  function error(m) {\n    var i, col=0, line=1;\n    for (i = at-1; i > 0 && text[i] !== '\\n'; i--, col++) {}\n    for (; i > 0; i--) if (text[i] === '\\n') line++;\n    throw new Error(m + \" at line \" + line + \",\" + col + \" >>>\" + text.substr(at-col, 20) + \" ...\");\n  }\n\n  function next() {\n    // get the next character.\n    ch = text.charAt(at);\n    at++;\n    return ch;\n  }\n\n  function peek(offs) {\n    // range check is not required\n    return text.charAt(at + offs);\n  }\n\n  function string() {\n    // Parse a string value.\n    var string = '';\n\n    // When parsing for string values, we must look for \" and \\ characters.\n    if (ch === '\"') {\n      while (next()) {\n        if (ch === '\"') {\n          next();\n          return string;\n        }\n        if (ch === '\\\\') {\n          next();\n          if (ch === 'u') {\n            var uffff = 0;\n            for (var i = 0; i < 4; i++) {\n              next();\n              var c = ch.charCodeAt(0), hex;\n              if (ch >= '0' && ch <= '9') hex = c - 48;\n              else if (ch >= 'a' && ch <= 'f') hex = c - 97 + 0xa;\n              else if (ch >= 'A' && ch <= 'F') hex = c - 65 + 0xa;\n              else error(\"Bad \\\\u char \" + ch);\n              uffff = uffff * 16 + hex;\n            }\n            string += String.fromCharCode(uffff);\n          } else if (typeof escapee[ch] === 'string') {\n            string += escapee[ch];\n          } else break;\n        } else {\n          string += ch;\n        }\n      }\n    }\n    error(\"Bad string\");\n  }\n\n  function mlString() {\n    // Parse a multiline string value.\n    var string = '', triple = 0;\n\n    // we are at ''' +1 - get indent\n    var indent = 0;\n    while (true) {\n      var c=peek(-indent-5);\n      if (!c || c === '\\n') break;\n      indent++;\n    }\n\n    function skipIndent() {\n      var skip = indent;\n      while (ch && ch <= ' ' && ch !== '\\n' && skip-- > 0) next();\n    }\n\n    // skip white/to (newline)\n    while (ch && ch <= ' ' && ch !== '\\n') next();\n    if (ch === '\\n') { next(); skipIndent(); }\n\n    // When parsing multiline string values, we must look for ' characters.\n    while (true) {\n      if (!ch) {\n        error(\"Bad multiline string\");\n      } else if (ch === '\\'') {\n        triple++;\n        next();\n        if (triple === 3) {\n          if (string.slice(-1) === '\\n') string=string.slice(0, -1); // remove last EOL\n          return string;\n        } else continue;\n      } else {\n        while (triple > 0) {\n          string += '\\'';\n          triple--;\n        }\n      }\n      if (ch === '\\n') {\n        string += '\\n';\n        next();\n        skipIndent();\n      } else {\n        if (ch !== '\\r') string += ch;\n        next();\n      }\n    }\n  }\n\n  function keyname() {\n    // quotes for keys are optional in Hjson\n    // unless they include {}[],: or whitespace.\n\n    if (ch === '\"') return string();\n\n    var name = \"\", start = at, space = -1;\n    while (true) {\n      if (ch === ':') {\n        if (!name) error(\"Found ':' but no key name (for an empty key name use quotes)\");\n        else if (space >=0 && space !== name.length) { at = start + space; error(\"Found whitespace in your key name (use quotes to include)\"); }\n        return name;\n      } else if (ch <= ' ') {\n        if (!ch) error(\"Found EOF while looking for a key name (check your syntax)\");\n        else if (space < 0) space = name.length;\n      } else if (isPunctuatorChar(ch)) {\n        error(\"Found '\" + ch + \"' where a key name was expected (check your syntax or use quotes if the key name includes {}[],: or whitespace)\");\n      } else {\n        name += ch;\n      }\n      next();\n    }\n  }\n\n  function white() {\n    while (ch) {\n      // Skip whitespace.\n      while (ch && ch <= ' ') next();\n      // Hjson allows comments\n      if (ch === '#' || ch === '/' && peek(0) === '/') {\n        while (ch && ch !== '\\n') next();\n      } else if (ch === '/' && peek(0) === '*') {\n        next(); next();\n        while (ch && !(ch === '*' && peek(0) === '/')) next();\n        if (ch) { next(); next(); }\n      } else break;\n    }\n  }\n\n  function tfnns() {\n    // Hjson strings can be quoteless\n    // returns string, true, false, or null.\n    var value = ch;\n    if (isPunctuatorChar(ch))\n      error(\"Found a punctuator character '\" + ch + \"' when expecting a quoteless string (check your syntax)\");\n\n    for(;;) {\n      next();\n      if (value.length === 3 && value === \"'''\") return mlString();\n      var isEol = ch === '\\r' || ch === '\\n' || ch === '';\n      if (isEol ||\n        ch === ',' || ch === '}' || ch === ']' ||\n        ch === '#' ||\n        ch === '/' && (peek(0) === '/' || peek(0) === '*')\n        ) {\n        // this tests for the case of {true|false|null|num}\n        // followed by { ',' | '}' | ']' | '#' | '//' | '/*' }\n        // which needs to be parsed as the specified value\n        var chf = value[0];\n        switch (chf) {\n          case 'f': if (value.trim() === \"false\") return false; break;\n          case 'n': if (value.trim() === \"null\") return null; break;\n          case 't': if (value.trim() === \"true\") return true; break;\n          default:\n            if (chf === '-' || chf >= '0' && chf <= '9') {\n              var n = common.tryParseNumber(value);\n              if (n !== undefined) return n;\n            }\n        }\n        if (isEol) {\n          // remove any whitespace at the end (ignored in quoteless strings)\n          value = value.trim();\n          var dsfValue = runDsf(value);\n          return dsfValue !== undefined ? dsfValue : value;\n        }\n      }\n      value += ch;\n    }\n  }\n\n  function getComment(cAt, first) {\n    var i;\n    cAt--;\n    // remove trailing whitespace\n    // but only up to EOL\n    for (i = at - 2; i > cAt && text[i] <= ' ' && text[i] !== '\\n'; i--);\n    if (text[i] === '\\n') i--;\n    if (text[i] === '\\r') i--;\n    var res = text.substr(cAt, i-cAt+1);\n    // return if we find anything other than whitespace\n    for (i = 0; i < res.length; i++) {\n      if (res[i] > ' ') {\n        var j = res.indexOf('\\n');\n        if (j >= 0) {\n          var c = [res.substr(0, j), res.substr(j+1)];\n          if (first && c[0].trim().length === 0) c.shift();\n          return c;\n        } else return [res];\n      }\n    }\n    return [];\n  }\n\n  function errorClosingHint(value) {\n    function search(value, ch) {\n      var i, k, length, res;\n      switch (typeof value) {\n        case 'string':\n          if (value.indexOf(ch) >= 0) res=value;\n          break;\n        case 'object':\n          if (Object.prototype.toString.apply(value) === '[object Array]') {\n            for (i = 0, length = value.length; i < length; i++) {\n              res=search(value[i], ch) || res;\n            }\n          } else {\n            for (k in value) {\n              if (!Object.prototype.hasOwnProperty.call(value, k)) continue;\n              res=search(value[k], ch) || res;\n            }\n          }\n      }\n      return res;\n    }\n\n    function report(ch) {\n      var possibleErr=search(value, ch);\n      if (possibleErr) {\n        return \"found '\"+ch+\"' in a string value, your mistake could be with:\\n\"+\n          \"  > \"+possibleErr+\"\\n\"+\n          \"  (unquoted strings contain everything up to the next line!)\";\n      } else return \"\";\n    }\n\n    return report('}') || report(']');\n  }\n\n  function array() {\n    // Parse an array value.\n    // assuming ch === '['\n\n    var array = [];\n    var comments, cAt, nextComment;\n    try {\n      if (keepComments) comments = common.createComment(array, { a: [] });\n\n      next();\n      cAt = at;\n      white();\n      if (comments) nextComment = getComment(cAt, true).join('\\n');\n      if (ch === ']') {\n        next();\n        if (comments) comments.e = [nextComment];\n        return array;  // empty array\n      }\n\n      while (ch) {\n        array.push(value());\n        cAt = at;\n        white();\n        // in Hjson the comma is optional and trailing commas are allowed\n        // note that we do not keep comments before the , if there are any\n        if (ch === ',') { next(); cAt = at; white(); }\n        if (comments) {\n          var c = getComment(cAt);\n          comments.a.push([nextComment||\"\", c[0]||\"\"]);\n          nextComment = c[1];\n        }\n        if (ch === ']') {\n          next();\n          if (comments) comments.a[comments.a.length-1][1] += nextComment||\"\";\n          return array;\n        }\n        white();\n      }\n\n      error(\"End of input while parsing an array (missing ']')\");\n    } catch (e) {\n      e.hint=e.hint||errorClosingHint(array);\n      throw e;\n    }\n  }\n\n  function object(withoutBraces) {\n    // Parse an object value.\n\n    var key = \"\", object = {};\n    var comments, cAt, nextComment;\n\n    try {\n      if (keepComments) comments = common.createComment(object, { c: {}, o: []  });\n\n      if (!withoutBraces) {\n        // assuming ch === '{'\n        next();\n        cAt = at;\n      } else cAt = 1;\n\n      white();\n      if (comments) nextComment = getComment(cAt, true).join('\\n');\n      if (ch === '}' && !withoutBraces) {\n        if (comments) comments.e = [nextComment];\n        next();\n        return object;  // empty object\n      }\n      while (ch) {\n        key = keyname();\n        white();\n        if (ch !== ':') error(\"Expected ':' instead of '\" + ch + \"'\");\n        next();\n        // duplicate keys overwrite the previous value\n        object[key] = value();\n        cAt = at;\n        white();\n        // in Hjson the comma is optional and trailing commas are allowed\n        // note that we do not keep comments before the , if there are any\n        if (ch === ',') { next(); cAt = at; white(); }\n        if (comments) {\n          var c = getComment(cAt);\n          comments.c[key] = [nextComment||\"\", c[0]||\"\"];\n          nextComment = c[1];\n          comments.o.push(key);\n        }\n        if (ch === '}' && !withoutBraces) {\n          next();\n          if (comments) comments.c[key][1] += nextComment||\"\";\n          return object;\n        }\n        white();\n      }\n\n      if (withoutBraces) return object;\n      else error(\"End of input while parsing an object (missing '}')\");\n    } catch (e) {\n      e.hint=e.hint||errorClosingHint(object);\n      throw e;\n    }\n  }\n\n  function value() {\n    // Parse a Hjson value. It could be an object, an array, a string, a number or a word.\n\n    white();\n    switch (ch) {\n      case '{': return object();\n      case '[': return array();\n      case '\"': return string();\n      default: return tfnns();\n    }\n  }\n\n  function checkTrailing(v, c) {\n    var cAt = at;\n    white();\n    if (ch) error(\"Syntax error, found trailing characters\");\n    if (keepComments) {\n      var b = c.join('\\n'), a = getComment(cAt).join('\\n');\n      if (a || b) {\n        var comments = common.createComment(v, common.getComment(v));\n        comments.r = [b, a];\n      }\n    }\n    return v;\n  }\n\n  function rootValue() {\n    // Braces for the root object are optional\n    white();\n    var c = keepComments ? getComment(1) : null;\n    switch (ch) {\n      case '{': return checkTrailing(object(), c);\n      case '[': return checkTrailing(array(), c);\n    }\n\n    try {\n      // assume we have a root object without braces\n      return checkTrailing(object(true), c);\n    } catch (e) {\n      // test if we are dealing with a single JSON value instead (true/false/null/num/\"\")\n      resetAt();\n      try { return checkTrailing(value(), c); }\n      catch (e2) { throw e; } // throw original error\n    }\n  }\n\n  function hjsonParse(source, opt) {\n    if (typeof source!==\"string\") throw new Error(\"source is not a string\");\n    var dsfDef = null;\n    if (opt && typeof opt === 'object') {\n      keepComments = opt.keepWsc;\n      dsfDef = opt.dsf;\n    }\n    runDsf = dsf.loadDsf(dsfDef, \"parse\");\n    text = source;\n    resetAt();\n    return rootValue();\n  }\n\n  return hjsonParse($source, $opt);\n};\n","/* Hjson http://hjson.org */\n/* jslint node: true */\n\"use strict\";\n\nmodule.exports = function($value, $opt) {\n\n  var common = require(\"./hjson-common\");\n  var dsf = require(\"./hjson-dsf\");\n\n  var runDsf; // domain specific formats\n\n  // needsEscape tests if the string can be written without escapes\n  var needsEscape = /[\\\\\\\"\\x00-\\x1f\\x7f-\\x9f\\u00ad\\u0600-\\u0604\\u070f\\u17b4\\u17b5\\u200c-\\u200f\\u2028-\\u202f\\u2060-\\u206f\\ufeff\\ufff0-\\uffff]/g;\n  // needsQuotes tests if the string can be written as a quoteless string (includes needsEscape but without \\\\ and \\\")\n  var needsQuotes = /^\\s|^\"|^'''|^#|^\\/\\*|^\\/\\/|^\\{|^\\}|^\\[|^\\]|^:|^,|\\s$|[\\x00-\\x1f\\x7f-\\x9f\\u00ad\\u0600-\\u0604\\u070f\\u17b4\\u17b5\\u200c-\\u200f\\u2028-\\u202f\\u2060-\\u206f\\ufeff\\ufff0-\\uffff]/g;\n  // needsEscapeML tests if the string can be written as a multiline string (includes needsEscape but without \\n, \\r, \\\\ and \\\")\n  var needsEscapeML = /'''|[\\x00-\\x09\\x0b\\x0c\\x0e-\\x1f\\x7f-\\x9f\\u00ad\\u0600-\\u0604\\u070f\\u17b4\\u17b5\\u200c-\\u200f\\u2028-\\u202f\\u2060-\\u206f\\ufeff\\ufff0-\\uffff]/g;\n  // starts with a keyword and optionally is followed by a comment\n  var startsWithKeyword = /^(true|false|null)\\s*((,|\\]|\\}|#|\\/\\/|\\/\\*).*)?$/;\n  var meta =\n  {  // table of character substitutions\n    '\\b': 'b',\n    '\\t': 't',\n    '\\n': 'n',\n    '\\f': 'f',\n    '\\r': 'r',\n    '\"' : '\"',\n    '\\\\': '\\\\'\n  };\n  var needsEscapeName = /[,\\{\\[\\}\\]\\s:#\"]|\\/\\/|\\/\\*|'''/;\n  var gap = '';\n  var indent = '  ';\n  // options\n  var eol, keepComments, bracesSameLine, quoteAlways;\n  var token = {\n    obj:  [ '{', '}' ],\n    arr:  [ '[', ']' ],\n    key:  [ '',  '' ],\n    qkey: [ '\"', '\"' ],\n    col:  [ ':' ],\n    str:  [ '', '' ],\n    qstr: [ '\"', '\"' ],\n    mstr: [ \"'''\", \"'''\" ],\n    num:  [ '', '' ],\n    lit:  [ '', '' ],\n    dsf:  [ '', '' ],\n    esc:  [ '\\\\', '' ],\n    uni:  [ '\\\\u', '' ],\n    rem:  [ '', '' ],\n  };\n\n  function wrap(tk, v) { return tk[0] + v + tk[1]; }\n\n  function quoteReplace(string) {\n    return string.replace(needsEscape, function (a) {\n      var c = meta[a];\n      if (typeof c === 'string') return wrap(token.esc, c);\n      else return wrap(token.uni, ('0000' + a.charCodeAt(0).toString(16)).slice(-4));\n    });\n  }\n\n  function quote(string, gap, hasComment, isRootObject) {\n    if (!string) return wrap(token.qstr, '');\n\n    needsQuotes.lastIndex = 0;\n    startsWithKeyword.lastIndex = 0;\n\n    // Check if we can insert this string without quotes\n    // see hjson syntax (must not parse as true, false, null or number)\n\n    if (quoteAlways || hasComment ||\n      needsQuotes.test(string) ||\n      common.tryParseNumber(string, true) !== undefined ||\n      startsWithKeyword.test(string)) {\n\n      // If the string contains no control characters, no quote characters, and no\n      // backslash characters, then we can safely slap some quotes around it.\n      // Otherwise we first check if the string can be expressed in multiline\n      // format or we must replace the offending characters with safe escape\n      // sequences.\n\n      needsEscape.lastIndex = 0;\n      needsEscapeML.lastIndex = 0;\n      if (!needsEscape.test(string)) return wrap(token.qstr, string);\n      else if (!needsEscapeML.test(string) && !isRootObject) return mlString(string, gap);\n      else return wrap(token.qstr, quoteReplace(string));\n    } else {\n      // return without quotes\n      return wrap(token.str, string);\n    }\n  }\n\n  function mlString(string, gap) {\n    // wrap the string into the ''' (multiline) format\n\n    var i, a = string.replace(/\\r/g, \"\").split('\\n');\n    gap += indent;\n\n    if (a.length === 1) {\n      // The string contains only a single line. We still use the multiline\n      // format as it avoids escaping the \\ character (e.g. when used in a\n      // regex).\n      return wrap(token.mstr, a[0]);\n    } else {\n      var res = eol + gap + token.mstr[0];\n      for (i = 0; i < a.length; i++) {\n        res += eol;\n        if (a[i]) res += gap + a[i];\n      }\n      return res + eol + gap + token.mstr[1];\n    }\n  }\n\n  function quoteKey(name) {\n    if (!name) return '\"\"';\n\n    // Check if we can insert this key without quotes\n\n    if (needsEscapeName.test(name)) {\n      needsEscape.lastIndex = 0;\n      return wrap(token.qkey, needsEscape.test(name) ? quoteReplace(name) : name);\n    } else {\n      // return without quotes\n      return wrap(token.key, name);\n    }\n  }\n\n  function str(value, hasComment, noIndent, isRootObject) {\n    // Produce a string from value.\n\n    function startsWithNL(str) { return str && str[str[0] === '\\r' ? 1 : 0] === '\\n'; }\n    function commentOnThisLine(str) { return str && !startsWithNL(str); }\n    function makeComment(str, prefix, trim) {\n      if (!str) return \"\";\n      str = common.forceComment(str);\n      var i, len = str.length;\n      for (i = 0; i < len && str[i] <= ' '; i++) {}\n      if (trim && i > 0) str = str.substr(i);\n      if (i < len) return prefix + wrap(token.rem, str);\n      else return str;\n    }\n\n    // What happens next depends on the value's type.\n\n    // check for DSF\n    var dsfValue = runDsf(value);\n    if (dsfValue !== undefined) return wrap(token.dsf, dsfValue);\n\n    switch (typeof value) {\n      case 'string':\n        return quote(value, gap, hasComment, isRootObject);\n\n      case 'number':\n        // JSON numbers must be finite. Encode non-finite numbers as null.\n        return isFinite(value) ? wrap(token.num, String(value)) : wrap(token.lit, 'null');\n\n      case 'boolean':\n        return wrap(token.lit, String(value));\n\n      case 'object':\n        // If the type is 'object', we might be dealing with an object or an array or\n        // null.\n\n        // Due to a specification blunder in ECMAScript, typeof null is 'object',\n        // so watch out for that case.\n\n        if (!value) return wrap(token.lit, 'null');\n\n        var comments; // whitespace & comments\n        if (keepComments) comments = common.getComment(value);\n\n        var isArray = Object.prototype.toString.apply(value) === '[object Array]';\n\n        // Make an array to hold the partial results of stringifying this object value.\n        var mind = gap;\n        gap += indent;\n        var eolMind = eol + mind;\n        var eolGap = eol + gap;\n        var prefix = noIndent || bracesSameLine ? '' : eolMind;\n        var partial = [];\n\n        var i, length; // loop\n        var k, v; // key, value\n        var c, ca;\n\n        if (isArray) {\n          // The value is an array. Stringify every element. Use null as a placeholder\n          // for non-JSON values.\n\n          for (i = 0, length = value.length; i < length; i++) {\n            if (comments) {\n              c = comments.a[i]||[];\n              ca = commentOnThisLine(c[1]);\n              partial.push(makeComment(c[0], \"\\n\") + eolGap);\n            }\n            partial.push(str(value[i], comments ? ca : false, true) || wrap(token.lit, 'null'));\n            if (comments && c[1]) partial.push(makeComment(c[1], ca ? \" \" : \"\\n\", ca));\n          }\n\n          if (comments) {\n            if (length === 0) {\n              // when empty\n              partial.push((comments.e ? makeComment(comments.e[0], \"\\n\") : \"\") + eolMind);\n            }\n            else partial.push(eolMind);\n          }\n\n          // Join all of the elements together, separated with newline, and wrap them in\n          // brackets.\n\n          if (comments) v = prefix + wrap(token.arr, partial.join(''));\n          else if (partial.length === 0) v = wrap(token.arr, '');\n          else v = prefix + wrap(token.arr, eolGap + partial.join(eolGap) + eolMind);\n        } else {\n          // Otherwise, iterate through all of the keys in the object.\n\n          if (comments) {\n            var keys = comments.o.slice();\n            for (k in value) {\n              if (Object.prototype.hasOwnProperty.call(value, k) && keys.indexOf(k) < 0)\n                keys.push(k);\n            }\n\n            for (i = 0, length = keys.length; i < length; i++) {\n              k = keys[i];\n              c = comments.c[k]||[];\n              ca = commentOnThisLine(c[1]);\n              partial.push(makeComment(c[0], \"\\n\") + eolGap);\n\n              v = str(value[k], ca);\n              if (v) partial.push(quoteKey(k) + token.col + (startsWithNL(v) ? '' : ' ') + v);\n              if (comments && c[1]) partial.push(makeComment(c[1], ca ? \" \" : \"\\n\", ca));\n            }\n            if (length === 0) {\n              // when empty\n              partial.push((comments.e ? makeComment(comments.e[0], \"\\n\") : \"\") + eolMind);\n            }\n            else partial.push(eolMind);\n\n          } else {\n            for (k in value) {\n              if (Object.prototype.hasOwnProperty.call(value, k)) {\n                v = str(value[k]);\n                if (v) partial.push(quoteKey(k) + token.col + (startsWithNL(v) ? '' : ' ') + v);\n              }\n            }\n          }\n\n          // Join all of the member texts together, separated with newlines\n          if (partial.length === 0) {\n            v = wrap(token.obj, '');\n          } else {\n            // and wrap them in braces\n            if (comments) v = prefix + wrap(token.obj, partial.join(''));\n            else v = prefix + wrap(token.obj, eolGap + partial.join(eolGap) + eolMind);\n          }\n        }\n\n        gap = mind;\n        return v;\n    }\n  }\n\n  function hjsonStringify(value, opt) {\n    var i, space;\n    var dsfDef = null;\n\n    eol = common.EOL;\n    indent = '  ';\n    keepComments = false;\n    bracesSameLine = false;\n    quoteAlways = false;\n\n    if (opt && typeof opt === 'object') {\n      if (opt.eol === '\\n' || opt.eol === '\\r\\n') eol = opt.eol;\n      space = opt.space;\n      keepComments = opt.keepWsc;\n      bracesSameLine = opt.bracesSameLine;\n      quoteAlways = opt.quotes === 'always';\n      dsfDef = opt.dsf;\n\n      if (opt.colors === true) {\n        token = {\n          obj:  [ '\\x1b[30;1m{\\x1b[0m', '\\x1b[30;1m}\\x1b[0m' ],\n          arr:  [ '\\x1b[30;1m[\\x1b[0m', '\\x1b[30;1m]\\x1b[0m' ],\n          key:  [ '\\x1b[33m',  '\\x1b[0m' ],\n          qkey: [ '\\x1b[33m\"', '\"\\x1b[0m' ],\n          col:  [ '\\x1b[37m:\\x1b[0m' ],\n          str:  [ '\\x1b[37;1m', '\\x1b[0m' ],\n          qstr: [ '\\x1b[37;1m\"', '\"\\x1b[0m' ],\n          mstr: [ \"\\x1b[37;1m'''\", \"'''\\x1b[0m\" ],\n          num:  [ '\\x1b[36;1m', '\\x1b[0m' ],\n          lit:  [ '\\x1b[36m', '\\x1b[0m' ],\n          dsf:  [ '\\x1b[37m', '\\x1b[0m' ],\n          esc:  [ '\\x1b[31m\\\\', '\\x1b[0m' ],\n          uni:  [ '\\x1b[31m\\\\u', '\\x1b[0m' ],\n          rem:  [ '\\x1b[30;1m', '\\x1b[0m' ],\n        };\n      }\n    }\n\n    runDsf = dsf.loadDsf(dsfDef, 'stringify');\n\n    // If the space parameter is a number, make an indent string containing that\n    // many spaces. If it is a string, it will be used as the indent string.\n\n    if (typeof space === 'number') {\n      indent = '';\n      for (i = 0; i < space; i++) indent += ' ';\n    } else if (typeof space === 'string') {\n      indent = space;\n    }\n\n    var res = \"\";\n    var comments = keepComments ? comments = (common.getComment(value) || {}).r : null;\n    if (comments && comments[0]) res = comments[0] + '\\n';\n\n    // get the result of stringifying the value.\n    res += str(value, null, true, true);\n\n    if (comments) res += comments[1]||\"\";\n\n    return res;\n  }\n\n  return hjsonStringify($value, $opt);\n};\n","module.exports=\"2.3.1\";\n","/*! @preserve\n * Hjson v2.3.1\n * http://hjson.org\n *\n * Copyright 2014-2016 Christian Zangl, MIT license\n * Details and documentation:\n * https://github.com/hjson/hjson-js\n *\n * This code is based on the the JSON version by Douglas Crockford:\n * https://github.com/douglascrockford/JSON-js (json_parse.js, json2.js)\n */\n\n/*\n\n  This file creates a Hjson object:\n\n\n    Hjson.parse(text, options)\n\n      options {\n        keepWsc     boolean, keep white space and comments. This is useful\n                    if you want to edit an hjson file and save it while\n                    preserving comments (default false)\n\n        dsf         array of DSF (see Hjson.dsf)\n      }\n\n      This method parses Hjson text to produce an object or array.\n      It can throw a SyntaxError exception.\n\n\n    Hjson.stringify(value, options)\n\n      value         any JavaScript value, usually an object or array.\n\n      options {     all options are\n\n        keepWsc     boolean, keep white space. See parse.\n\n        bracesSameLine\n                    boolean, makes braces appear on the same line as the key\n                    name. Default false.\n\n        emitRootBraces\n                    obsolete: will always emit braces\n\n        quotes      string, controls how strings are displayed.\n                    \"min\"     - no quotes whenever possible (default)\n                    \"always\"  - always use quotes\n\n        space       specifies the indentation of nested structures. If it is\n                    a number, it will specify the number of spaces to indent\n                    at each level. If it is a string (such as '\\t' or '  '),\n                    it contains the characters used to indent at each level.\n\n        eol         specifies the EOL sequence (default is set by\n                    Hjson.setEndOfLine())\n\n        colors      boolean, output ascii color codes\n\n        dsf         array of DSF (see Hjson.dsf)\n      }\n\n      This method produces Hjson text from a JavaScript value.\n\n      Values that do not have JSON representations, such as undefined or\n      functions, will not be serialized. Such values in objects will be\n      dropped; in arrays they will be replaced with null.\n      stringify(undefined) returns undefined.\n\n\n    Hjson.endOfLine()\n    Hjson.setEndOfLine(eol)\n\n      Gets or sets the stringify EOL sequence ('\\n' or '\\r\\n').\n      When running with node.js this defaults to os.EOL.\n\n\n    Hjson.rt { parse, stringify }\n\n      This is a shortcut to roundtrip your comments when reading and updating\n      a config file. It is the same as specifying the keepWsc option for the\n      parse and stringify functions.\n\n\n    Hjson.version\n\n      The version of this library.\n\n\n    Hjson.dsf\n\n      Domain specific formats are extensions to the Hjson syntax (see\n      hjson.org). These formats will be parsed and made available to\n      the application in place of strings (e.g. enable math to allow\n      NaN values).\n\n      Hjson.dsf ontains standard DSFs that can be passed to parse\n      and stringify.\n\n\n    Hjson.dsf.math()\n\n      Enables support for Inf/inf, -Inf/-inf, Nan/naN and -0.\n      Will output as Inf, -Inf, NaN and -0.\n\n\n    Hjson.dsf.hex(options)\n\n      Parse hexadecimal numbers prefixed with 0x.\n      set options.out = true to stringify _all_ integers as hex.\n\n\n    Hjson.dsf.date(options)\n\n      support ISO dates\n\n\n  This is a reference implementation. You are free to copy, modify, or\n  redistribute.\n\n*/\n\n/*jslint node: true */\n\"use strict\";\n\nvar common = require(\"./hjson-common\");\nvar version = require(\"./hjson-version\");\nvar parse = require(\"./hjson-parse\");\nvar stringify = require(\"./hjson-stringify\");\nvar comments = require(\"./hjson-comments\");\nvar dsf = require(\"./hjson-dsf\");\n\nmodule.exports={\n\n  parse: parse,\n  stringify: stringify,\n\n  endOfLine: function() { return common.EOL; },\n  setEndOfLine: function(eol) {\n    if (eol === '\\n' || eol === '\\r\\n') common.EOL = eol;\n  },\n\n  version: version,\n\n  // round trip shortcut\n  rt: {\n    parse: function(text, options) {\n      (options=options||{}).keepWsc=true;\n      return parse(text, options);\n    },\n    stringify: function(value, options) {\n      (options=options||{}).keepWsc=true;\n      return stringify(value, options);\n    },\n  },\n\n  comments: comments,\n\n  dsf: dsf.std,\n\n};\n","exports.endianness = function () { return 'LE' };\n\nexports.hostname = function () {\n    if (typeof location !== 'undefined') {\n        return location.hostname\n    }\n    else return '';\n};\n\nexports.loadavg = function () { return [] };\n\nexports.uptime = function () { return 0 };\n\nexports.freemem = function () {\n    return Number.MAX_VALUE;\n};\n\nexports.totalmem = function () {\n    return Number.MAX_VALUE;\n};\n\nexports.cpus = function () { return [] };\n\nexports.type = function () { return 'Browser' };\n\nexports.release = function () {\n    if (typeof navigator !== 'undefined') {\n        return navigator.appVersion;\n    }\n    return '';\n};\n\nexports.networkInterfaces\n= exports.getNetworkInterfaces\n= function () { return {} };\n\nexports.arch = function () { return 'javascript' };\n\nexports.platform = function () { return 'browser' };\n\nexports.tmpdir = exports.tmpDir = function () {\n    return '/tmp';\n};\n\nexports.EOL = '\\n';\n","/*!Please JS v0.4.2, Jordan Checkman 2014, Checkman.io, MIT License, Have fun.*/\n!function(e,r,a){\"function\"==typeof define&&define.amd?define([],a):\"object\"==typeof exports?module.exports=a():r[e]=a()}(\"Please\",this,function(){\"use strict\";function e(){function e(e,r,a){var o=Math.random;return a instanceof l&&(o=a.random),Math.floor(o()*(r-e+1))+e}function r(e,r,a){var o=Math.random;return a instanceof l&&(o=a.random),o()*(r-e)+e}function a(e,r,a){return Math.max(r,Math.min(e,a))}function o(e,r){var a;switch(e){case\"hex\":for(a=0;a<r.length;a++)r[a]=F.HSV_to_HEX(r[a]);break;case\"rgb\":for(a=0;a<r.length;a++)r[a]=F.HSV_to_RGB(r[a]);break;case\"rgb-string\":for(a=0;a<r.length;a++){var o=F.HSV_to_RGB(r[a]);r[a]=\"rgb(\"+o.r+\",\"+o.g+\",\"+o.b+\")\"}break;case\"hsv\":break;default:console.error(\"Format not recognized.\")}return r}function n(e){var r=F.HSV_to_RGB(e),a=(299*r.r+587*r.g+114*r.b)/1e3;return a>=128?\"dark\":\"light\"}function t(e){var r={};for(var a in e)e.hasOwnProperty(a)&&(r[a]=e[a]);return r}function l(e){function r(){o=(o+1)%256,n=(n+a[o])%256;var e=a[o];return a[o]=a[n],a[n]=e,a[(a[o]+a[n])%256]}for(var a=[],o=0,n=0,t=0;256>t;t++)a[t]=t;for(var l=0,F=0;256>l;l++){F=(F+a[l]+e.charCodeAt(l%e.length))%256;var s=a[l];a[l]=a[F],a[F]=s}this.random=function(){for(var e=0,a=0,o=1;8>e;e++)a+=r()*o,o*=256;return a/0x10000000000000000}}var F={},s={aliceblue:\"F0F8FF\",antiquewhite:\"FAEBD7\",aqua:\"00FFFF\",aquamarine:\"7FFFD4\",azure:\"F0FFFF\",beige:\"F5F5DC\",bisque:\"FFE4C4\",black:\"000000\",blanchedalmond:\"FFEBCD\",blue:\"0000FF\",blueviolet:\"8A2BE2\",brown:\"A52A2A\",burlywood:\"DEB887\",cadetblue:\"5F9EA0\",chartreuse:\"7FFF00\",chocolate:\"D2691E\",coral:\"FF7F50\",cornflowerblue:\"6495ED\",cornsilk:\"FFF8DC\",crimson:\"DC143C\",cyan:\"00FFFF\",darkblue:\"00008B\",darkcyan:\"008B8B\",darkgoldenrod:\"B8860B\",darkgray:\"A9A9A9\",darkgrey:\"A9A9A9\",darkgreen:\"006400\",darkkhaki:\"BDB76B\",darkmagenta:\"8B008B\",darkolivegreen:\"556B2F\",darkorange:\"FF8C00\",darkorchid:\"9932CC\",darkred:\"8B0000\",darksalmon:\"E9967A\",darkseagreen:\"8FBC8F\",darkslateblue:\"483D8B\",darkslategray:\"2F4F4F\",darkslategrey:\"2F4F4F\",darkturquoise:\"00CED1\",darkviolet:\"9400D3\",deeppink:\"FF1493\",deepskyblue:\"00BFFF\",dimgray:\"696969\",dimgrey:\"696969\",dodgerblue:\"1E90FF\",firebrick:\"B22222\",floralwhite:\"FFFAF0\",forestgreen:\"228B22\",fuchsia:\"FF00FF\",gainsboro:\"DCDCDC\",ghostwhite:\"F8F8FF\",gold:\"FFD700\",goldenrod:\"DAA520\",gray:\"808080\",grey:\"808080\",green:\"008000\",greenyellow:\"ADFF2F\",honeydew:\"F0FFF0\",hotpink:\"FF69B4\",indianred:\"CD5C5C\",indigo:\"4B0082\",ivory:\"FFFFF0\",khaki:\"F0E68C\",lavender:\"E6E6FA\",lavenderblush:\"FFF0F5\",lawngreen:\"7CFC00\",lemonchiffon:\"FFFACD\",lightblue:\"ADD8E6\",lightcoral:\"F08080\",lightcyan:\"E0FFFF\",lightgoldenrodyellow:\"FAFAD2\",lightgray:\"D3D3D3\",lightgrey:\"D3D3D3\",lightgreen:\"90EE90\",lightpink:\"FFB6C1\",lightsalmon:\"FFA07A\",lightseagreen:\"20B2AA\",lightskyblue:\"87CEFA\",lightslategray:\"778899\",lightslategrey:\"778899\",lightsteelblue:\"B0C4DE\",lightyellow:\"FFFFE0\",lime:\"00FF00\",limegreen:\"32CD32\",linen:\"FAF0E6\",magenta:\"FF00FF\",maroon:\"800000\",mediumaquamarine:\"66CDAA\",mediumblue:\"0000CD\",mediumorchid:\"BA55D3\",mediumpurple:\"9370D8\",mediumseagreen:\"3CB371\",mediumslateblue:\"7B68EE\",mediumspringgreen:\"00FA9A\",mediumturquoise:\"48D1CC\",mediumvioletred:\"C71585\",midnightblue:\"191970\",mintcream:\"F5FFFA\",mistyrose:\"FFE4E1\",moccasin:\"FFE4B5\",navajowhite:\"FFDEAD\",navy:\"000080\",oldlace:\"FDF5E6\",olive:\"808000\",olivedrab:\"6B8E23\",orange:\"FFA500\",orangered:\"FF4500\",orchid:\"DA70D6\",palegoldenrod:\"EEE8AA\",palegreen:\"98FB98\",paleturquoise:\"AFEEEE\",palevioletred:\"D87093\",papayawhip:\"FFEFD5\",peachpuff:\"FFDAB9\",peru:\"CD853F\",pink:\"FFC0CB\",plum:\"DDA0DD\",powderblue:\"B0E0E6\",purple:\"800080\",rebeccapurple:\"663399\",red:\"FF0000\",rosybrown:\"BC8F8F\",royalblue:\"4169E1\",saddlebrown:\"8B4513\",salmon:\"FA8072\",sandybrown:\"F4A460\",seagreen:\"2E8B57\",seashell:\"FFF5EE\",sienna:\"A0522D\",silver:\"C0C0C0\",skyblue:\"87CEEB\",slateblue:\"6A5ACD\",slategray:\"708090\",slategrey:\"708090\",snow:\"FFFAFA\",springgreen:\"00FF7F\",steelblue:\"4682B4\",tan:\"D2B48C\",teal:\"008080\",thistle:\"D8BFD8\",tomato:\"FF6347\",turquoise:\"40E0D0\",violet:\"EE82EE\",wheat:\"F5DEB3\",white:\"FFFFFF\",whitesmoke:\"F5F5F5\",yellow:\"FFFF00\",yellowgreen:\"9ACD32\"},i=.618033988749895,u={hue:null,saturation:null,value:null,base_color:\"\",greyscale:!1,grayscale:!1,golden:!0,full_random:!1,colors_returned:1,format:\"hex\",seed:null},c={scheme_type:\"analogous\",format:\"hex\"},h={golden:!1,format:\"hex\"};return F.NAME_to_HEX=function(e){return e=e.toLowerCase(),e in s?s[e]:(console.error(\"Color name not recognized.\"),void 0)},F.NAME_to_RGB=function(e){return F.HEX_to_RGB(F.NAME_to_HEX(e))},F.NAME_to_HSV=function(e){return F.HEX_to_HSV(F.NAME_to_HEX(e))},F.HEX_to_RGB=function(e){var r=/^#?([a-f\\d])([a-f\\d])([a-f\\d])$/i;e=e.replace(r,function(e,r,a,o){return r+r+a+a+o+o});var a=/^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(e);return a?{r:parseInt(a[1],16),g:parseInt(a[2],16),b:parseInt(a[3],16)}:null},F.RGB_to_HEX=function(e){return\"#\"+((1<<24)+(e.r<<16)+(e.g<<8)+e.b).toString(16).slice(1)},F.HSV_to_RGB=function(e){var r,a,o,n,t,l,F,s,i=e.h,u=e.s,c=e.v;if(0===u)return{r:c,g:c,b:c};switch(i/=60,n=Math.floor(i),t=i-n,l=c*(1-u),F=c*(1-u*t),s=c*(1-u*(1-t)),n){case 0:r=c,a=s,o=l;break;case 1:r=F,a=c,o=l;break;case 2:r=l,a=c,o=s;break;case 3:r=l,a=F,o=c;break;case 4:r=s,a=l,o=c;break;case 5:r=c,a=l,o=F}return{r:Math.floor(255*r),g:Math.floor(255*a),b:Math.floor(255*o)}},F.RGB_to_HSV=function(e){var r=e.r/255,a=e.g/255,o=e.b/255,n=0,t=0,l=0,F=Math.min(r,Math.min(a,o)),s=Math.max(r,Math.max(a,o));if(F===s)return l=F,{h:0,s:0,v:l};var i=r===F?a-o:o===F?r-a:o-r,u=r===F?3:o===F?1:5;return n=60*(u-i/(s-F)),t=(s-F)/s,l=s,{h:n,s:t,v:l}},F.HSV_to_HEX=function(e){return F.RGB_to_HEX(F.HSV_to_RGB(e))},F.HEX_to_HSV=function(e){return F.RGB_to_HSV(F.HEX_to_RGB(e))},F.make_scheme=function(e,r){function n(e){return{h:e.h,s:e.s,v:e.v}}var l,F,s,i,u,h=t(c);if(null!==r)for(var d in r)r.hasOwnProperty(d)&&(h[d]=r[d]);var g=[e];switch(h.scheme_type.toLowerCase()){case\"monochromatic\":case\"mono\":for(u=1;2>=u;u++)l=n(e),s=l.s+.1*u,s=a(s,0,1),i=l.v+.1*u,i=a(i,0,1),l.s=s,l.v=i,g.push(l);for(u=1;2>=u;u++)l=n(e),s=l.s-.1*u,s=a(s,0,1),i=l.v-.1*u,i=a(i,0,1),l.s=s,l.v=i,g.push(l);break;case\"complementary\":case\"complement\":case\"comp\":l=n(e),l.h=(l.h+180)%360,g.push(l);break;case\"split-complementary\":case\"split-complement\":case\"split\":l=n(e),l.h=(l.h+165)%360,g.push(l),l=n(e),l.h=Math.abs((l.h-165)%360),g.push(l);break;case\"double-complementary\":case\"double-complement\":case\"double\":l=n(e),l.h=(l.h+180)%360,g.push(l),l.h=(l.h+30)%360,F=n(l),g.push(l),l.h=(l.h+180)%360,g.push(F);break;case\"analogous\":case\"ana\":for(u=1;5>=u;u++)l=n(e),l.h=(l.h+20*u)%360,g.push(l);break;case\"triadic\":case\"triad\":case\"tri\":for(u=1;3>u;u++)l=n(e),l.h=(l.h+120*u)%360,g.push(l);break;default:console.error(\"Color scheme not recognized.\")}return o(h.format.toLowerCase(),g),g},F.make_color=function(n){var s=[],c=t(u),h=null;if(null!==n)for(var d in n)n.hasOwnProperty(d)&&(c[d]=n[d]);var g=null;\"string\"==typeof c.seed&&(g=new l(c.seed)),c.base_color.length>0&&(h=c.base_color.match(/^#?([0-9a-f]{3})([0-9a-f]{3})?$/i)?F.HEX_to_HSV(c.base_color):F.NAME_to_HSV(c.base_color));for(var m=0;m<c.colors_returned;m++){var f,E,b,p=e(0,360,g);null!==h?(f=a(e(h.h-5,h.h+5,g),0,360),E=0===h.s?0:r(.4,.85,g),b=r(.4,.85,g),s.push({h:f,s:E,v:b})):(f=c.greyscale===!0||c.grayscale===!0?0:c.golden===!0?(p+p/i)%360:null===c.hue||c.full_random===!0?p:a(c.hue,0,360),E=c.greyscale===!0||c.grayscale===!0?0:c.full_random===!0?r(0,1,g):null===c.saturation?.4:a(c.saturation,0,1),b=c.full_random===!0?r(0,1,g):c.greyscale===!0||c.grayscale===!0?r(.15,.75,g):null===c.value?.75:a(c.value,0,1),s.push({h:f,s:E,v:b}))}return o(c.format.toLowerCase(),s),s},F.make_contrast=function(e,r){var l=t(h);if(null!==r)for(var s in r)r.hasOwnProperty(s)&&(l[s]=r[s]);var u,c,d=n(e);if(l.golden===!0)c=e.h*(1+i)%360;else{var g=F.make_scheme(e,{scheme_type:\"complementary\",format:\"hsv\"})[1];c=a(g.h-30,0,360)}var m;return\"dark\"===d?m=a(e.v-.25,0,1):\"light\"===d&&(m=a(e.v+.25,0,1)),u=[{h:c,s:e.s,v:m}],o(l.format.toLowerCase(),u),u[0]},F}return e()});","// @flow\n\nimport SLW from './SLW'\nimport Tile from './Tile'\nimport * as Tiles from './Tile'\nimport * as Entities from './Entity'\nimport { crop, editor } from './util'\n\n// Browser editor for SLW levels.\nexport default class BrowserSLW {\n  header: HTMLElement\n\n  game: SLW\n\n  constructor(game: SLW) {\n    this.game = game\n    this.header = document.getElementById('header')\n\n    // Editor toggle -----------------------\n    const editorToggle = this.addToggle(class extends Toggle {\n      onCreate() {\n        this.setTitle('Editor Mode')\n        this.setChecked(false)\n        //this.setDisabled(true)\n      }\n\n      onCheckedChanged() {\n        const el = document.getElementById('toolbar')\n        if (this.checked) {\n          let tiles = editor.tiles\n          let tileEls: Array <Image> = []\n\n          for (let t of tiles) {\n            const tile = new (Tiles[t[0]])(game, t[1])\n\n            let img = crop(game.level.tileset, Tile.size, Tile.size, tile.texPosition[0] * Tile.size, tile.texPosition[1] * Tile.size)\n            img.classList.add('tile')\n\n            img.addEventListener('click', evt => {\n              for (let tileEl of tileEls) tileEl.classList.remove('selected')\n\n              img.classList.add('selected')\n              game.tileToPaint = [Tiles[t[0]], t[1], 0, false]\n            })\n\n            tileEls.push(img)\n            el.appendChild(img)\n          }\n\n          let entities = editor.entities\n\n          for (let t of entities) {\n            const tile = new (Entities[t[0]])(game, t[1])\n\n            const k = tile.sprite.positionType === 'absolute' ? 1 : Tile.size\n            let img = crop(\n              tile.sprite.sheet,\n              tile.w, tile.h,\n              tile.sprite.position[0] * k,\n              tile.sprite.position[1] * k)\n            img.classList.add('tile')\n\n            img.addEventListener('click', evt => {\n              for (let tileEl of tileEls) tileEl.classList.remove('selected')\n\n              img.classList.add('selected')\n              game.tileToPaint = [Entities[t[0]], t[1], 0, true]\n            })\n\n            tile.destroy()\n\n            tileEls.push(img)\n            el.appendChild(img)\n          }\n\n          tileEls[0].click()\n        } else {\n          el.innerHTML = ''\n        }\n\n        game.level.editorEnabled = this.checked\n      }\n    })\n\n    game.events.addEventListener('levelchanged', ({ level }) => {\n      if (level.meta.special.includes('world')) {\n        editorToggle.setDisabled(true)\n      } else {\n        editorToggle.setDisabled(false)\n      }\n    })\n\n    // Gamepad toggle ----------------------\n    this.addToggle(class extends Toggle {\n      onCreate() {\n        this.setTitle('Gamepad')\n        this.load('gamepad-support')\n\n        if (!game.gamepadSupport) {\n          this.setDisabled(true)\n        }\n      }\n\n      onDestroy() {\n        this.save('gamepad-support')\n      }\n\n      onCheckedChanged() {\n        game.gamepadEnabled = this.checked\n      }\n    })\n  }\n\n  // Add a global toggle control.\n  addToggle(toggleClass: Class<Toggle>) {\n    const toggle = new toggleClass()\n\n    const toggles = this.header.querySelector('#toggles')\n    toggles.appendChild(toggle.btn)\n\n    return toggle\n  }\n}\n\nclass Toggle {\n  checked: boolean\n  disabled: boolean\n\n  btn: HTMLElement\n\n  constructor() {\n    this.btn = document.createElement('button')\n\n    this.btn.addEventListener('click', () => {\n      this.setChecked(!this.checked)\n    })\n\n    this.onCreate()\n\n    window.addEventListener('beforeunload', () => {\n      this.onDestroy()\n    })\n  }\n\n  setChecked(newChecked: boolean) {\n    this.checked = newChecked\n    if (this.checked) {\n      this.btn.classList.add('checked')\n      this.btn.classList.remove('unchecked')\n    } else {\n      this.btn.classList.remove('checked')\n      this.btn.classList.add('unchecked')\n    }\n\n    this.onCheckedChanged()\n  }\n\n  setDisabled(newDisabled: boolean) {\n    this.disabled = newDisabled\n    if (newDisabled) {\n      this.btn.setAttribute('disabled', 'true')\n    } else {\n      this.btn.removeAttribute('disabled')\n    }\n  }\n\n  setTitle(newTitle: string) {\n    while (this.btn.firstChild) {\n      this.btn.removeChild(this.btn.firstChild)\n    }\n\n    this.btn.appendChild(document.createTextNode(newTitle))\n  }\n\n  load(key: string) {\n    if (localStorage['toggle-' + key] === 'true') {\n      this.setChecked(true)\n    } else {\n      this.setChecked(false)\n    }\n  }\n\n  save(key: string) {\n    localStorage['toggle-' + key] = this.checked.toString()\n  }\n\n  onCreate() {}\n  onCheckedChanged() {}\n  onDestroy() {}\n}\n","// @flow\n\nimport type { Position } from './types'\n\n// Generic Cursor class designed to be easy to implement multiple control\n// schemes for. For example, mouse, tablet touch, and gamepad are all possible\n// controls that could be implemented.\nexport default class Cursor {\n\n  // Position of the cursor.\n  pos: Position\n\n  // Whether the cursor is pressed or not.\n  down: boolean\n\n  // Cursor image to be drawn. This image's source is (by default)\n  // cursor.png, loaded from the sprites folder.\n  image: Image\n\n  scale: [number, number]\n\n  constructor(scale: [number, number] = [1, 1]) {\n    this.scale = scale\n    this.pos = [0, 0]\n    this.down = false\n    this.image = new Image()\n    this.image.src = 'sprites/cursor.png'\n  }\n\n  // Watch the mouse's movement on an element, and use its position as the\n  // position for this cursor.\n  watchMouse(el: Element) {\n    el.addEventListener('mousemove', (evt: MouseEvent) => {\n      // Stored position should be relative to element's rendered bounds.\n      let rect = el.getBoundingClientRect()\n      this.pos[0] = (evt.clientX - rect.left) * this.scale[0]\n      this.pos[1] = (evt.clientY - rect.top) * this.scale[1]\n    })\n\n    el.addEventListener('mouseup', () => {\n      this.down = false\n    })\n\n    el.addEventListener('mousedown', () => {\n      this.down = true\n    })\n  }\n\n  // Draw using an already-created canvas context. Optionally takes an X/Y\n  // position to draw at, which defaults to this.pos[0, 1].\n  drawUsingCtx(\n    ctx: CanvasRenderingContext2D,\n    // @flow ignore\n    x: number = this.pos[0], y: number = this.pos[1]\n  ) {\n    const centeredX = x - this.image.width / 2\n    const centeredY = y - this.image.height / 2\n    ctx.drawImage(this.image, centeredX, centeredY)\n  }\n}\n","// @flow\n\nconst DEBUG = false // lags lots but is helpful\nconst GRAVITY = 0.25\n\nimport SLW from './SLW'\nimport Tile from './Tile'\nimport Level from './Level'\nimport Text from './Text'\nimport { Sound } from './SoundManager'\n\nimport {\n  sign, levels,\n  isJump, isYes, isLeft, isRight, isUp, isDown\n} from './util'\n\nimport type { Position } from './types'\n\nexport class Entity {\n  game: SLW\n\n  // Position, absolute (not tileX/Y!)\n  x: number\n  y: number\n\n  // order in which entity is rendered\n  z: number\n\n  // Velocity\n  xv: number\n  yv: number\n\n  // Dimensions (used for bounding box)\n  w: number // width\n  h: number // height\n\n  color: string // \"rgba(r, g, b, a)\"\n  sprite: {\n    sheet: Image,\n    position: Position,\n    positionType: ?string,\n    width: number,\n    height: number\n  }\n\n  get top(): number {\n    return Math.floor(this.y)\n  }\n\n  get bottom(): number {\n    return Math.floor(this.y + this.h)\n  }\n\n  get left(): number {\n    return Math.floor(this.x)\n  }\n\n  get right(): number {\n    return Math.floor(this.x + this.w)\n  }\n\n  constructor(game: SLW) {\n    this.game = game\n\n    this.sprite = {\n      sheet: new Image(),\n      position: [0, 0],\n      positionType: '',\n      width: 0,\n      height: 0\n    }\n\n    this.x = 0\n    this.y = 0\n    this.z = 0\n\n    this.xv = 0\n    this.yv = 0\n\n    this.w = 16\n    this.h = 16\n\n    // pleasing color for debugging reasons :P\n    const c = require('pleasejs').make_color({ format: 'rgb' })[0]\n    this.color = `rgb(${c.r}, ${c.g}, ${c.b})`\n  }\n\n  update(stop: boolean = true) {\n    let v: number = 0\n\n    // x:\n    const xv = Math.round(this.xv)\n    v = sign(xv)\n\n    for (let i = 0; i < Math.abs(xv); i++) {\n      this.x += v\n      if (this.touchingWallRight || this.touchingWallLeft) {\n        this.x -= v\n        if (stop) this.xv = 0\n      }\n    }\n\n    // y:\n    const yv = Math.floor(this.yv)\n    v = sign(yv)\n\n    for (let i = 0; i < Math.abs(yv); i++) {\n      this.y += v\n\n      // Checking if grounded should only happen if the entity is going down\n      // (that way it can jump through solidTop blocks)\n      if ((v === 1 && this.grounded) || this.collides()) {\n        this.y -= v\n        if (stop) this.yv = 0\n\n        this.y = Math.ceil(this.y / Tile.size) * Tile.size\n\n        // Air punch should only happen when the entity jumps.\n        if (v === -1) {\n          for (let tile of this.tilesAbove) {\n            tile.onAirPunch(this)\n          }\n        }\n      }\n    }\n\n    if ((this.y >= this.game.level.h * Tile.size) && !this.game.level.meta.special.includes('world'))\n      return this.destroy()\n\n    for (let tile of this.pickTiles(0, 0, 0, 1)) {\n      tile.onTouch(this)\n    }\n\n    for (let tile of this.tilesBelow) {\n      tile.onStand(this)\n    }\n\n    for (let entity of this.entityCollides()) {\n      entity.onTouch(this)\n    }\n  }\n\n  draw() {\n    const ctx = this.game.canvas.getContext('2d')\n    if (!(ctx instanceof CanvasRenderingContext2D)) return\n\n    if (DEBUG) {\n      // Draw the bounding box (if in DEBUG mode).\n      ctx.fillStyle = this.color\n      ctx.fillRect(this.left, this.top, this.w + 1, this.h + 1)\n\n      ctx.drawImage(Text.write(this.constructor.name, this.color), this.right, this.bottom)\n    }\n\n    // Draw the sprite image (if there is one).\n    const sprite = this.sprite\n\n    if (sprite) {\n      let [x, y] = sprite.position || [0, 0]\n      let w = sprite.width || this.w\n      let h = sprite.height || this.h\n\n      if (sprite.positionType !== 'absolute') {\n        x *= w\n        y *= h\n      }\n\n      ctx.drawImage(\n        this.sprite.sheet,\n\n        // Area on sheet to grab\n        x, y, w, h,\n\n        // Area on screen to draw\n        this.left, this.top, w, h\n      )\n    }\n  }\n\n  // Are we currently intersecting any solid Tiles?\n  collides(shouldReturnTiles: boolean = false): any {\n    let tileLeft   = Math.floor(this.left   / Tile.size)\n    let tileRight  = Math.floor(this.right  / Tile.size)\n    let tileTop    = Math.floor(this.top    / Tile.size)\n    let tileBottom = Math.floor(this.bottom / Tile.size)\n\n    let tiles = []\n    let collision = false\n    for (let x = tileLeft; x <= tileRight; x++) {\n      for (let y = tileTop; y <= tileBottom; y++) {\n        let tile = this.game.level.tileAt([x, y])\n\n        if (tile.solid) {\n          collision = true\n        }\n\n        tiles.push(tile)\n      }\n    }\n\n    return shouldReturnTiles ? tiles : collision\n  }\n\n  get touchingWallRight(): boolean {\n    let tileLeft   = Math.floor(this.right  / Tile.size)\n    let tileRight  = tileLeft\n    let tileTop    = Math.floor(this.top    / Tile.size)\n    let tileBottom = Math.floor(this.bottom / Tile.size)\n\n    // Weird bug.. dunno why this (helps) fix #19 though. I can't imagine\n    // tileBottom is broken! (Right?)\n    // TODO Figure this out. Right now it's a plain fix for height=16\n    if (this.h === 16) {\n      tileBottom--\n    }\n\n    for (let x = tileLeft; x <= tileRight; x++) {\n      for (let y = tileTop; y <= tileBottom; y++) {\n        const tile = this.game.level.tileAt([x, y])\n\n        if (tile.solid) {\n          return true\n        }\n      }\n    }\n\n    return false\n  }\n\n  get touchingWallLeft(): boolean {\n    let tileLeft   = Math.floor(this.left   / Tile.size)\n    let tileRight  = tileLeft\n    let tileTop    = Math.floor(this.top    / Tile.size)\n    let tileBottom = Math.floor(this.bottom / Tile.size)\n\n    // Same deal as touchingWallRight\n    if (this.h === 16) {\n      tileBottom--\n    }\n\n    for (let x = tileLeft; x <= tileRight; x++) {\n      for (let y = tileTop; y <= tileBottom; y++) {\n        const tile = this.game.level.tileAt([x, y])\n\n        if (tile.solid) {\n          return true\n        }\n      }\n    }\n\n    return false\n  }\n\n  // Handy function to pick tiles around the entity.\n  // TODO is this broken? Do tests!\n  pickTiles(\n    tileLeft: number, tileRight: number, tileTop: number, tileBottom: number\n  ): Array <Tile> {\n    const tiles = []\n\n    for (let px = Math.floor(tileLeft); px <= Math.ceil(tileRight); px++) {\n      for (let py = Math.floor(tileTop); py <= Math.ceil(tileBottom); py++) {\n        tiles.push(this.game.level.tileAt([\n          tileLeft + px + this.x / Tile.size, tileTop + py + this.y / Tile.size\n        ]))\n      }\n    }\n\n    return tiles\n  }\n\n  // Handy function to destroy the entity.\n  destroy() {\n    this.game.entities.splice(this.game.entities.indexOf(this), 1)\n  }\n\n  // What entities are we touching?\n  entityCollides(): Array <Entity> {\n    const entities = []\n\n    for (let entity of this.game.entities) {\n      // Don't detect itself!\n      if (entity === this) continue\n\n      if (\n        (\n          this.left <= entity.left && entity.left <= this.right ||\n          this.left <= entity.right && entity.right <= this.right\n        ) && (\n          this.top <= entity.top && entity.top <= this.bottom ||\n          this.top <= entity.bottom && entity.bottom <= this.bottom\n        )\n      ) {\n        entities.push(entity)\n      }\n    }\n\n    return entities\n  }\n\n  // Get the single tile at the centre of the entity.\n  get tileOn(): Tile {\n    let t = this.game.level.tileAt([\n      Math.floor((this.x + this.w / 2) / 16),\n      Math.floor((this.y + this.h / 2) / 16)\n    ])\n\n    return t\n  }\n\n  // Get the two (potentially same) tiles ABOVE the entity.\n  get tilesAbove(): [Tile, Tile] {\n    let l = this.game.level.tileAt([Math.floor(this.x / 16), this.top / 16 - 0.1])\n    let r = this.game.level.tileAt([Math.ceil(this.x / 16), this.top / 16 - 0.1])\n\n    return [l, r]\n  }\n\n  // Get the two (potentially same) tiles BELOW the entity.\n  get tilesBelow(): [Tile, Tile] {\n    let l = this.game.level.tileAt([Math.floor(this.x / 16), this.bottom / 16 + 0.1])\n    let r = this.game.level.tileAt([Math.ceil(this.x / 16), this.bottom / 16 + 0.1])\n\n    return [l, r]\n  }\n\n  // Whether or not the entity is on the ground or not.\n  get grounded(): boolean {\n    /*\n    return this.pickTiles(0, 0, 1, 1).some(x => x.solid || x.solidTop)\n    */\n\n    return this.tilesBelow.some(tile => tile.solid || tile.solidTop)\n  }\n\n  // Called when another entity touches this entity.\n  onTouch(by: Entity) {}\n}\n\nexport class Player extends Entity {\n  errorSound: Sound\n  startLevelSound: Sound\n  moveLevelSound: Sound\n  jumpSound: Sound\n\n  lastJump: number\n  mayJump: boolean\n\n  spriteAnimation: {\n    time: number,\n    anim: string,\n    dir: string,\n    oldAnim: string,\n    nextFrame: number,\n  }\n\n  state: number // powerup state\n\n  lastOn: ?Tile // world map only.\n  wantsInput: ?boolean // world map only.\n\n  constructor(game: SLW, x: number = 0, y:number = 0) {\n    super(game)\n\n    this.sprite.sheet.src = 'sprites/liam-0.png'\n    this.sprite.position = [-100, -100]\n    this.sprite.positionType = 'absolute'\n    this.sprite.width = 19\n    this.sprite.height = 32\n    this.spriteAnimation = { time: 0, dir: 'right', anim: 'idle', oldAnim: '', nextFrame: 0 }\n\n    this.x = x\n    this.y = y\n\n    this.w = 15\n    this.h = 15\n    this.state = 0\n\n    this.errorSound = this.game.sounds.getSound('smw_stomp_koopa_kid.wav')\n    this.startLevelSound = this.game.sounds.getSound('begin_level')\n    this.moveLevelSound = this.game.sounds.getSound('move_level')\n    this.jumpSound = this.game.sounds.getSound('smw_jump')\n  }\n\n  update() {\n    if (this.game.level.editorEnabled) {\n      // Camera is scrolled directly in editor mode\n      this.xv = 0\n      this.yv = 0\n      return\n    }\n\n    this.sprite.sheet.src = `sprites/liam-${this.state}.png`\n    if (this.state > 0) {\n      // big/powerupped\n      this.w = 15\n      this.h = 31\n      this.sprite.width = 19\n      this.sprite.height = 32\n      this.sprite.positionType = 'absolute'\n    } else {\n      // small\n      this.w = 15\n      this.h = 15\n      this.sprite.width = 16\n      this.sprite.height = 16\n    }\n\n    if (this.game.level.meta.special.includes('world')) {\n      this.mapMotion()\n    } else {\n      this.levelMotion()\n    }\n\n    // actually move:\n    super.update(this.wantsInput == true || !this.game.level.meta.special.includes('world'))\n\n\n    // If the player moved in the world map..\n    if (\n      this.game.level.meta.special.includes('world') && (this.xv || this.yv)\n    ) {\n      // If the player wanted input, make a sound.\n      if (this.wantsInput) {\n        this.moveLevelSound.playNew()\n      }\n\n      // Now it's moving so it shouldn't take input anymore.\n      this.wantsInput = false\n    }\n  }\n\n  mapMotion() {\n    // overworld/map..\n    const walkSpeed = 4\n\n    // small hitbox allows for greater movement\n    // TODO\n    this.w = 15\n    this.h = 15\n\n    // A different version of tileOn. This one only counts a new tile if you're\n    // actually 100% on it - that is, if tileX and tileY are integers.\n    let on: ?Tile\n    const tileX = this.left / Tile.size\n    const tileY = this.top / Tile.size\n    if (Number.isInteger(tileX) && Number.isInteger(tileY)) {\n      on = this.game.level.tileAt([tileX, tileY])\n    } else {\n      on = this.lastOn\n    }\n\n    // Initial\n    if (!this.lastOn) {\n      this.wantsInput = true\n    }\n\n    // Levels, houses and pipes should let the user take input. If it's the\n    // same tile as the player was just on a tick ago, there's no need to give\n    // more input - if it does, the actual user needs to hold down whatever\n    // direcitonal button they're moving in until the player gets off that\n    // tile!\n    if (on &&\n      ['Level', 'House', 'Pipe'].includes(on.name) && on !== this.lastOn\n    ) {\n      this.wantsInput = true\n    }\n\n    if (on && on.name === 'Path' && !this.wantsInput) {\n      // we're already moving!\n\n      this.spriteAnimation.anim = 'walk'\n      if (this.xv > 0) this.spriteAnimation.dir = 'right'\n      if (this.xv < 0) this.spriteAnimation.dir = 'left'\n      if (this.yv > 0) this.spriteAnimation.dir = 'down'\n      if (this.yv < 0) this.spriteAnimation.dir = 'up'\n\n      // we need to be on a NEW tile to do anything:\n      if (!this.lastOn || on.texPosition !== this.lastOn.texPosition) {\n        const [h, v] = on.texPosition\n\n        if (h == 2 && v == 8) {\n          // vertical straight\n        }\n\n        if (h == 1 && v == 9) {\n          // horizontal straight\n        }\n\n        if (h == 3 && v == 9) {\n          // up/left turn\n\n          if (this.yv === 0) {\n            // from left\n            this.xv = 0\n            this.yv = -walkSpeed\n          } else {\n            // from up\n            this.xv = -walkSpeed\n            this.yv = 0\n          }\n        }\n\n        if (h == 3 && v == 8) {\n          // down/right turn\n\n          if (this.yv === 0) {\n            // from right\n            this.xv = 0\n            this.yv = walkSpeed\n          } else {\n            // from down\n            this.xv = walkSpeed\n            this.yv = 0\n          }\n        }\n\n        if (h == 1 && v == 8) {\n          // up/right turn\n\n          if (this.yv === 0) {\n            // from right\n            this.xv = 0\n            this.yv = -walkSpeed\n          } else {\n            // from up\n            this.xv = walkSpeed\n            this.yv = 0\n          }\n        }\n\n        if (h == 1 && v == 10) {\n          // down/left turn\n\n          if (this.yv === 0) {\n            // from left\n            this.xv = 0\n            this.yv = walkSpeed\n          } else {\n            // from down\n            this.xv = -walkSpeed\n            this.yv = 0\n          }\n        }\n\n        if (h == 2 && v == 10) {\n          // up/down T-junction\n          this.xv = 0\n          this.yv = 0\n          this.wantsInput = true\n        }\n      }\n    } else if (this.wantsInput) {\n      this.xv = 0\n      this.yv = 0\n\n      // take input..\n      // TODO don't allow passing by [3, 10] tiles (uncompleted levels)\n      this.spriteAnimation.anim = 'idle'\n\n      if (isRight(this.game.keys)) {\n        this.xv = walkSpeed\n        this.spriteAnimation.dir = 'right'\n      } else if (this.xv > 0) {\n        this.xv = 0\n      }\n\n      if (isLeft(this.game.keys)) {\n        this.xv = -walkSpeed\n        this.spriteAnimation.dir = 'left'\n      } else if (this.xv < 0) {\n        this.xv = 0\n      }\n\n      if (isDown(this.game.keys)) {\n        this.yv = walkSpeed\n        this.spriteAnimation.dir = 'down'\n      } else if (this.yv > 0) {\n        this.yv = 0\n      }\n\n      if (isUp(this.game.keys)) {\n        this.yv = -walkSpeed\n        this.spriteAnimation.dir = 'up'\n      } else if (this.yv < 0) {\n        this.yv = 0\n      }\n\n      if (on && on.name === 'Level' && isYes(this.game.newKeys)) {\n        // open level!\n        // TODO some animation?\n\n        const lv = this.game.level.meta.id + '-' + on.levelid\n\n        if (lv in levels) {\n          this.w = 15\n          this.h = 31\n\n          const newLevel = new Level(this.game, lv, this.game.level.tileset)\n          this.game.changeLevel(newLevel)\n\n          this.game.tick = 0\n          this.startLevelSound.playNew()\n        } else {\n          this.errorSound.playNew()\n        }\n      }\n    }\n\n    this.lastOn = on\n  }\n\n  levelMotion() {\n    // input:\n\n    if (Math.abs(this.xv) < 0.2 && this.grounded) {\n      this.spriteAnimation.anim = 'idle'\n    }\n\n    if (isRight(this.game.keys)) {\n      this.xv += 0.2\n      if (this.grounded) this.spriteAnimation.anim = 'walk'\n    } else if(this.xv > 0) {\n      this.xv = Math.max(0, this.xv - 0.4)\n    }\n\n    if (isLeft(this.game.keys)) {\n      // xv\n      this.xv -= 0.2\n      if (this.grounded) this.spriteAnimation.anim = 'walk'\n    } else if(this.xv < 0) {\n      this.xv = Math.min(0, this.xv + 0.4)\n    }\n\n    if (Math.abs(this.xv) < 0.1) {\n      this.xv = 0\n    }\n\n    this.xv = Math.min(this.xv,  4)\n    this.xv = Math.max(this.xv, -4)\n\n    if (this.grounded && isJump(this.game.keys) && this.mayJump) {\n      // jump height is based on how long you hold the key[s]\n      // you can hold it for longer if your xv is higher\n\n      this.yv = -3.5\n      this.lastJump = Date.now()\n\n      this.jumpSound.playNew()\n      this.spriteAnimation.anim = 'jump'\n      this.mayJump = false\n    } else if(isJump(this.game.keys) && this.yv < -3 && Date.now() - this.lastJump < 100 + Math.abs(this.xv) * 50) {\n      this.yv = -3.5\n    } else if(!isJump(this.game.keys)) {\n      // we may jump next frame\n      this.mayJump = true\n    }\n\n    if(this.yv > 0 && this.spriteAnimation.anim !== 'jump' && !this.grounded) {\n      this.spriteAnimation.anim = 'fall'\n    }\n\n    if(this.xv > 0) this.spriteAnimation.dir = 'right'\n    if(this.xv < 0) this.spriteAnimation.dir = 'left'\n\n    this.yv = Math.min(this.yv,  4)\n    this.yv += GRAVITY\n  }\n\n  draw() {\n    // Animation..\n    const anim = this.spriteAnimation\n    if (anim.anim !== anim.oldAnim) {\n      anim.oldAnim = anim.anim\n      anim.time = 0\n      anim.nextFrame = 0\n    }\n\n    if (anim.anim === 'walk' || (anim.anim === 'idle' && anim.oldAnim === 'walk')) {\n      if (anim.time >= anim.nextFrame) {\n        anim.nextFrame = (\n          Math.ceil(anim.time + Math.max(12 - Math.abs(this.xv * 3), 8))\n        )\n\n        if (this.state === 0) {\n          if (this.sprite.position[0] === 32) {\n            this.sprite.position[0] = 0\n          } else if (this.sprite.position[0] === 16) {\n            this.sprite.position[0] = 32\n          } else if (this.sprite.position[0] === 0) {\n            if(anim.anim === 'walk') this.sprite.position[0] = 16\n          } else {\n            this.sprite.position[0] = 0\n          }\n        } else {\n          if (this.sprite.position[0] === 57) {\n            this.sprite.position[0] = 0\n          } else if (this.sprite.position[0] === 38) {\n            this.sprite.position[0] = 57\n          } else if (this.sprite.position[0] === 19) {\n            if(anim.anim === 'walk') this.sprite.position[0] = 38\n          } else {\n            this.sprite.position[0] = 19\n          }\n        }\n      }\n    } else if (anim.anim === 'idle') {\n      this.sprite.position[0] = this.state === 0 ? 0 : 19\n    } else if (anim.anim === 'jump') {\n      this.sprite.position[0] = this.state === 0 ? 48 : 76\n    } else if (anim.anim === 'fall') {\n      this.sprite.position[0] = this.state === 0 ? 32 : 97\n    }\n\n    this.sprite.position[1] = this.state === 0 ? ({\n      left: 16,\n      right: 0,\n      up: 48,\n      down: 32,\n    })[anim.dir] : (anim.dir === 'left' ? 32 : 0)\n    this.spriteAnimation.time++ // could use this.game.tick\n\n    super.draw()\n  }\n\n  destroy() {\n    // go back to world map:\n\n    const lv = this.game.level.meta.world\n    const id = this.game.level.meta.id\n\n    const newLevel = new Level(this.game, lv, this.game.level.tileset)\n    this.game.changeLevel(newLevel)\n\n    this.state = 0\n\n    // On the world map, go to the position of the level that was just played.\n    /*\n    for (let row of this.game.level.tilemap) {\n      for (let tile of row) {\n        if (tile.name === 'Level' && tile.levelid == id) {\n          this.x = tile.x * Tile.size\n          this.y = tile.y * Tile.size\n        }\n      }\n    }\n    */\n  }\n}\n\nexport class Goomba extends Entity {\n  constructor(game: SLW, x: number = 0, y: number = 0) {\n    super(game)\n\n    this.x = x\n    this.y = y\n    this.z = 1\n\n    this.w = 16\n    this.h = 16\n\n    this.xv = 2\n  }\n\n  update() {\n    // TODO goombas walk and then turn around when they bump into something\n\n    this.yv += GRAVITY\n    super.update()\n  }\n}\n\nexport class Powerup extends Entity {\n  getSound: window.Audio\n  initSound: window.Audio\n\n  constructor(game: SLW, x: number = 0, y: number = 0, xv: number = 1) {\n    super(game)\n\n    this.sprite.sheet.src = 'tileset.png'\n\n    this.x = x\n    this.y = y\n    this.z = 2\n\n    this.w = 16\n    this.h = 16\n\n    this.xv = xv\n    this.sprite.position = [0, 0]\n\n    this.game.sounds.getSound('powerup_init').playNew()\n\n    this.getSound = this.game.sounds.getSound('powerup_get')\n  }\n\n  update() {\n    this.yv += GRAVITY * 0.7\n\n    let o = this.xv\n\n    this.x += this.xv\n    if (this.touchingWallRight || this.touchingWallLeft) o = this.xv * -1\n    this.x -= this.xv\n\n    this.xv = o\n\n    super.update()\n  }\n\n  onTouch(by: Entity) {\n    if (by instanceof Player) {\n      this.destroy()\n      this.getSound.playNew()\n    }\n  }\n}\n\nexport class Mushroom extends Powerup {\n  constructor(...args: any) {\n    super(...args)\n\n    this.sprite.position = [0, 2]\n  }\n\n  onTouch(by: Entity) {\n    if (by instanceof Player && by.state === 0) {\n      by.state = 1 // small to big\n      by.y -= Tile.size\n    }\n\n    super.onTouch(by)\n  }\n}\n\nexport class Sign extends Entity {\n  constructor(game: SLW, x: number = 0, y: number = 0) {\n    super(game)\n\n    this.x = x\n    this.y = y\n\n    this.w = 44\n    this.h = 45\n\n    this.game.entities.push(this)\n\n    this.sprite.sheet.src = 'tileset.png'\n    this.sprite.positionType = 'absolute'\n    this.sprite.position = [80, 32]\n    this.sprite.width = 44\n    this.sprite.height = 47\n  }\n}\n\nexport class Coin extends Entity {\n  coinSound: Sound\n\n  spriteAnimation: {\n    nextFrame: number\n  }\n\n  constructor(game: SLW, x: number = 0, y: number = 0) {\n    super(game)\n\n    this.x = x\n    this.y = y\n\n    this.w = 16\n    this.h = 16\n\n    this.sprite.sheet.src = 'sprites/coin.png'\n    this.sprite.width = 16\n    this.sprite.height = 16\n\n    this.spriteAnimation = {time: 0, nextFrame: 0}\n\n    this.coinSound = this.game.sounds.getSound('smw_coin')\n  }\n\n  update() {\n    const anim = this.spriteAnimation\n\n    if (this.game.tick >= anim.nextFrame) {\n      anim.nextFrame = this.game.tick + 10\n      this.sprite.position[0] = (this.sprite.position[0] + 1) % 4\n    }\n  }\n\n  onTouch(by: Entity) {\n    if(by instanceof Player) {\n      this.get()\n    }\n  }\n\n  get() {\n    this.coinSound.playNew()\n    this.destroy()\n  }\n}\n\nexport class HalfwayFlag extends Entity {\n  spriteAnimation: {\n    time: number,\n    nextFrame: number,\n    frame: number,\n  }\n\n  state: number // 0 = bowser, 1 = liam\n\n  constructor(game: SLW, x: number = 0, y: number = 0) {\n    super(game)\n\n    this.x = x\n    this.y = y - 16\n\n    this.w = 16\n    this.h = 16 + 17\n\n    this.state = 0\n    this.game.entities.push(this)\n\n    this.sprite.sheet.src = 'sprites/flag.png'\n    this.sprite.width = 16\n    this.sprite.height = 16\n    this.sprite.positionType = 'absolute'\n\n    this.spriteAnimation = { time: 0, nextFrame: 0, frame: 0 }\n  }\n\n  update() {\n    const anim = this.spriteAnimation\n\n    if (anim.time >= anim.nextFrame) {\n      anim.nextFrame = anim.time + 10\n      anim.frame = (anim.frame + 1) % 4\n    }\n\n    anim.time++\n\n    this.sprite.position[0] = ([ 18, 35, 52, 69 ])[anim.frame]\n    this.sprite.position[1] = ([ 1, 35 ])[this.state]\n  }\n\n  draw() {\n    const ctx = this.game.canvas.getContext('2d')\n    if (!ctx) return\n\n    ctx.drawImage(this.sprite.sheet,\n      // Area on sheet to grab\n      1, 1, 16, 48,\n\n      // Area on screen to draw\n      this.left - 10, this.top - 16, 16, 48)\n    super.draw()\n  }\n\n  onTouch(by: Entity) {\n    if(by instanceof Player) {\n      // TODO play a sound and an animation\n      this.state = 1\n    }\n  }\n}\n","// @flow\n\nconst MUSIC_VOLUMES = {\n  airship: 0.25,\n  athletic: 0.25,\n  beach: 1,\n  castle: 0.25,\n  'ice-cave': 0.25,\n  'file-select': 0.5,\n  'flower-gardens': 1,\n  'grassland': 0.15,\n  'jungle': 0.25,\n  'kapper-valley': 0.25,\n  'star-world': 0.25,\n  'underwater-underworld': 1,\n  'water': 0.25,\n  'underground': 0.5,\n}\n\nimport SLW from './SLW'\nimport Tile from './Tile'\nimport { Entity } from './Entity'\nimport { levels } from './util'\nimport { Sound } from './SoundManager'\n\nimport type { Position } from './types'\n\nimport * as entities from './Entity'\nimport * as tiles from './Tile'\n\nexport default class Level {\n  game: SLW\n\n  meta: Object // see levels.hjson\n  tileset: Image\n\n  tiles: Array <Tile>\n  entities: Array <Entity>\n\n  w: number // width\n  h: number // height\n\n  music: Sound\n  editorEnabled: boolean\n\n  static metaOf(levelid) {\n    return levels[levelid]\n  }\n\n  constructor(\n    game: SLW,\n    levelid: string,\n    tileset: Image,\n  ) {\n    this.game = game\n\n    this.tileset = tileset\n    this.entities = []\n    this.meta = levels[levelid]\n\n    // Editor mode btn:\n\n    /*\n    const editorEnabledEl_o = document.getElementById('editorEnabled')\n    const editorEnabledEl = editorEnabledEl_o.cloneNode()\n\n    this.editorEnabled = !this.meta.special.includes('world') && localStorage['editorEnabled'] === 'true'\n    // @flow ignore\n    editorEnabledEl.disabled = this.meta.special.includes('world')\n    editorEnabledEl.innerText = this.editorEnabled ? 'Editor ON' : 'Editor OFF'\n\n    editorEnabledEl.addEventListener('click', (evt: Event) => {\n      this.game.cameraInEditor = this.game.camera // set camera position\n      this.editorEnabled = !this.editorEnabled\n      localStorage['editorEnabled'] = this.editorEnabled.toString()\n      editorEnabledEl.innerText = this.editorEnabled ? 'Editor ON' : 'Editor OFF'\n    })\n\n    // @flow ignore\n    editorEnabledEl_o.parentNode.replaceChild(editorEnabledEl, editorEnabledEl_o)\n    */\n\n    const tilemap = this.meta.tiles\n    this.tiles = []\n\n    for (let k of tilemap) {\n      const [ id, x, y, layer, opts ] = k\n\n      let tile = new (tiles[id])(this.game, opts)\n\n      tile.x = x\n      tile.y = y\n      tile.layer = layer\n      tile.game = game\n      tile.exists = true\n\n      this.tiles.push(tile)\n    }\n\n    this.h = this.meta.height\n    this.w = this.meta.width\n\n    this.music = this.game.sounds.getSound(`music/${this.meta.music}.mp3`)\n\n    // Normalize music.\n    this.music.volume = MUSIC_VOLUMES[this.meta.music] || 0.5\n\n    // Background music should loop.\n    this.music.loops = true\n\n    this.music.playNew()\n  }\n\n  create() {\n    // Call create() on the Level Tiles\n    for (let tile of this.tiles) {\n      tile.onCreate()\n    }\n\n    // Create all entities\n    for (let def of this.meta.entities) {\n      const constructor = entities[def.shift()]\n\n      let ent = new constructor(this.game, ...def)\n      this.entities.push(ent)\n    }\n  }\n\n  destroy() {\n    this.music.stop()\n\n    // TODO Entity destroying? Might not be a bad idea, e.g. if entities have\n    // set event listeners that reference themselves... they wouldn't be GC'd.\n    this.game.entities.splice(0, this.game.entities.length)\n  }\n\n  update() {\n    // Call update() on the tilemap's Tiles\n    for (let tile of this.tiles) {\n      tile.onUpdate()\n    }\n  }\n\n  draw() {\n    // Draw the tilemap\n    const ctx = this.game.canvas.getContext('2d')\n    if (!(ctx instanceof CanvasRenderingContext2D)) return\n\n    const viewStartX = Math.floor(this.game.camera[0] / Tile.size)\n    const viewStartY = Math.floor(this.game.camera[1] / Tile.size)\n    const viewEndX = Math.ceil(this.game.camera[0] / Tile.size) + 25\n    const viewEndY = Math.ceil(this.game.camera[1] / Tile.size) + 25\n\n    for (let y = viewStartY; y < viewEndY; y++) {\n      for (let x = viewStartX; x < viewEndX; x++) {\n        const tiles = this.tilesAt([x, y])\n        const [rendX, rendY] = this.getAbsolutePosition([x, y])\n\n        for (let tile of tiles) {\n          const [tileX, tileY] = tile.texPosition\n\n          ctx.drawImage(\n            this.tileset,\n            tileX * Tile.size, tileY * Tile.size,\n            Tile.size, Tile.size,\n\n            rendX + tile.dx, rendY + tile.dy, Tile.size, Tile.size)\n        }\n      }\n    }\n  }\n\n  // Get a Tile from its Position and layer in the tilemap.\n  tileAt([tileX: number, tileY: number]: Position, layer: number = 0): Tile {\n    tileX = Math.floor(tileX)\n    tileY = Math.floor(tileY)\n    layer = Math.floor(layer)\n\n    let ts = this.tiles.filter(tile =>\n      tile.layer === layer &&\n      tile.x === tileX &&\n      tile.y === tileY)\n\n    return ts.length ? ts[0] : new (tiles.Air)(this.game)\n  }\n\n  // Remove all Tiles at a Position and layer in the tilemap\n  // Does not call onDestroy()\n  tileRemove([tileX: number, tileY: number]: Position, layer: number = 0) {\n    tileX = Math.floor(tileX)\n    tileY = Math.floor(tileY)\n    layer = Math.floor(layer)\n\n    const o = this.tiles\n    const n = o.filter(tile =>\n      !(tile.layer === layer &&\n      tile.x === tileX &&\n      tile.y === tileY))\n\n    this.tiles = n\n  }\n\n  // Get some Tiles from their Position in the tilemap.\n  tilesAt([tileX: number, tileY: number]: Position): Array <Tile> {\n    tileX = Math.floor(tileX)\n    tileY = Math.floor(tileY)\n\n    return this.tiles.filter(tile =>\n      tile.x === tileX &&\n      tile.y === tileY)\n  }\n\n  replaceTile([\n    tileX: number, tileY: number\n  ]: Position, newTile: Tile, layer: number = 0): Tile {\n    newTile.x = tileX\n    newTile.y = tileY\n    newTile.layer = layer\n    newTile.game = this.game\n    newTile.exists = true\n\n    let oldTile = this.tileAt([tileX, tileY], layer)\n    oldTile.exists = false\n    oldTile.onDestroy()\n    this.tileRemove([tileX, tileY], layer)\n\n    this.tiles.push(newTile)\n    newTile.onCreate()\n\n    // Send an onNearbyReplace event to all nearby tiles - see onNearbyReplace\n    for (let y = tileY - 1; y <= tileY + 1; y++) {\n      for (let x = tileX - 1; x <= tileX + 1; x++) {\n        const tile = this.tileAt([x, y], layer)\n        if (tile && tile !== newTile) {\n          tile.onNearbyReplace()\n        }\n      }\n    }\n\n    return newTile\n  }\n\n  // Gets the drawn position of a given tile position. For example, assuming\n  // that the tile size is 16, getDrawnPosition([0, 2]) would become [0, 32].\n  getAbsolutePosition([tileX, tileY]: Position): Position {\n    return [\n      Math.floor(tileX * Tile.size),\n      Math.floor(tileY * Tile.size)\n    ]\n  }\n}\n","// @flow\n\n// SUPER LIAM WORLD(tm)\n// totally not stolen from an-ok-squirrel.\n// this is a fair use of the name as specified\n// in NANALAND RULES NUMBER #99\n\nimport Tile from './Tile'\nimport Text from './Text'\nimport Level from './Level'\nimport Cursor from './Cursor'\nimport SoundManager, { Sound } from './SoundManager'\nimport { Entity, Player } from './Entity'\n\nimport {\n  arrEqual, EventController,\n  isLeft, isRight, isUp, isDown\n} from './util'\n\nimport type { Position } from './types'\n\nconst BG_COLORS = {\n  clouds: '#A0D0F8',\n  hills: '#F8E0B0',\n}\n\nconst BG_REPEATS = {\n  clouds: 'repeat-x',\n  hills: 'repeat-y',\n}\n\nexport default class SLW {\n  // Event controller.\n  events: EventController\n\n  // Sound system.\n  sounds: SoundManager\n\n  // Map to store key-pressed data in.\n  keys: Object\n\n  // Keys that were pressed this tick.\n  newKeys: Object\n\n  // Canvas used to display the game on.\n  canvas: HTMLCanvasElement\n\n  // Player object - the character that walks around the screen using the\n  // user's input as controls.\n  player: Player\n\n  // Camera position. Used for scrolling.\n  camera: Position\n  cameraInEditor: Position\n\n  // Tile that will be painted, for level editor.\n  tileToPaint: any\n  lastPlaced: Position // where we last painted something\n\n  // Cursor object - see Cursor.js.\n  cursor: Cursor\n\n  // Stored separately from the cursor object because the cursor doesn't have\n  // any notion of \"ticks\".\n  lastPlacePos: Position\n\n  // Level, to contain information about the currently active level.\n  level: Level\n\n  // Amount of draw()s called since we started.\n  tick: number\n\n  gamepadSupport: boolean\n  gamepadEnabled: boolean\n\n  entities: Array <Entity>\n\n  // Random sounds.\n  genericTilePlaceSound: Sound\n  airPlaceSound: Sound\n\n  constructor(levelid: string, tileset: Image) {\n    this.events = new EventController()\n    this.events.registerEvent('levelchanged')\n\n    this.sounds = new SoundManager()\n\n    this.keys = {}\n    this.newKeys = {}\n\n    this.canvas = document.createElement('canvas')\n    this.canvas.width = 400\n    this.canvas.height = 400\n    this.canvas.setAttribute('tabindex', '1')\n\n    window.addEventListener('keydown', (evt: KeyboardEvent) => {\n      this.keys[evt.keyCode || evt.which] = true\n      this.newKeys[evt.keyCode || evt.which] = true\n    })\n\n    window.addEventListener('keyup', (evt: KeyboardEvent) => {\n      this.keys[evt.keyCode || evt.which] = false\n    })\n\n    this.player = new Player(this, 16, 16)\n\n    this.camera = [0, 0]\n    this.cameraInEditor = [0, 0]\n\n    this.cursor = new Cursor([0.5, 0.5])\n    this.cursor.watchMouse(this.canvas)\n\n    this.lastPlacePos = [0, 0]\n\n    this.entities = []\n\n    this.changeLevel(new Level(this, levelid, tileset))\n\n    this.gamepadSupport = (\n      'GamepadEvent' in window || 'getGamepads' in navigator\n    )\n    this.gamepadEnabled = false\n\n    this.genericTilePlaceSound = this.sounds.getSound('smw_fireball')\n    this.airPlaceSound = this.sounds.getSound('smw_thud')\n  }\n\n  // Clears the game canvas.\n  canvasClear() {\n    const ctx = this.canvas.getContext('2d')\n\n    if (ctx instanceof CanvasRenderingContext2D) {\n      ctx.fillStyle = BG_COLORS[this.level.meta.background] || 'black'\n      ctx.fillRect(0, 0, this.canvas.width, this.canvas.height)\n    }\n  }\n\n  // Do gamepad things.\n  gamepadInput() {\n    try {\n      if (this.gamepadSupport && this.gamepadEnabled) {\n        const gamepads = window.navigator.getGamepads()\n\n        if (gamepads.length > 0) {\n          let newest = gamepads[0]\n          for (let i = 0; i < gamepads.length; i++) {\n            const gamepad = gamepads[i]\n\n            if (gamepad.connected) {\n              // we want the latest timestamped gamepad\n              if (newest.timestamp < gamepad.timestamp) newest = gamepad\n            }\n          }\n\n          // set the keys\n          const pad = newest\n\n          this.keys[90] = pad.buttons[1].pressed // z\n          this.keys[80] = pad.buttons[2].pressed // x\n          this.keys[37] = pad.axes[0] < -0.5     // <\n          this.keys[39] = pad.axes[0] >  0.5     // >\n          this.keys[38] = pad.axes[1] < -0.5     // ^\n          this.keys[40] = pad.axes[1] >  0.5     // v\n        }\n      }\n    } catch(e) {\n      // There's probably gonna be errors thrown around in lots of browsers.\n      // Don't them crash the game.\n      console.warn(e)\n    }\n  }\n\n  // Modify the camera position to reflect where the player is.\n  // Essentially, this is just scrolling.\n  cameraUpdate() {\n    let minY = Tile.size + this.canvas.height / 2\n    let maxY = (this.level.h - 1) * Tile.size - this.canvas.height / 2\n    let minX = Tile.size + this.canvas.width / 2\n    let maxX = (this.level.w - 1) * Tile.size - this.canvas.width / 2\n\n    if (this.level.editorEnabled) {\n      const CAM_SPD = 4\n      if (isUp(this.keys)) this.cameraInEditor[1] -= CAM_SPD\n      if (isDown(this.keys)) this.cameraInEditor[1] += CAM_SPD\n      if (isLeft(this.keys)) this.cameraInEditor[0] -= CAM_SPD\n      if (isRight(this.keys)) this.cameraInEditor[0] += CAM_SPD\n\n      this.cameraInEditor[0] = Math.min(\n        maxX,\n        Math.max(minX, this.cameraInEditor[0])\n      )\n\n      this.cameraInEditor[1] = Math.min(\n        maxY,\n        Math.max(minY, this.cameraInEditor[1])\n      )\n    }\n\n    let x = this.level.editorEnabled ? this.cameraInEditor[0] : this.player.x\n    let y = this.level.editorEnabled ? this.cameraInEditor[1] : this.player.y\n\n    if(y < minY) y = minY\n    if (y > maxY) y = maxY\n    if (x < minX) x = minX\n    if (x > maxX) x = maxX\n\n    if (this.level.meta.special.includes('floating')) {\n      // airship-like level, wave the camera y\n      let wave = Math.sin(this.tick / 40) * Tile.size / 2\n      y += wave\n    }\n\n    let lag = this.tick > 0 ? 8 : 1\n    this.camera[0] += (x - this.canvas.width / 2 - this.camera[0]) / lag\n    this.camera[1] += (y - this.canvas.height / 2 - this.camera[1]) / lag\n  }\n\n  // Update all the entities.\n  entityUpdate() {\n    this.entities.forEach(e => e.update())\n  }\n\n  changeLevel(newLevel: Level) {\n    const oldLevel = this.level\n\n    if (oldLevel) {\n      oldLevel.destroy()\n    }\n\n    this.tick = 0\n    this.level = newLevel\n    newLevel.create()\n\n    this.events.dispatchEvent('levelchanged', {\n      oldLevel: oldLevel || null, level: newLevel\n    })\n  }\n\n  // Draw all the things.\n  draw() {\n    const ctx = this.canvas.getContext('2d')\n    if (!(ctx instanceof CanvasRenderingContext2D)) return\n\n    let tx = -0.25 * this.camera[0]\n    let ty = -0.25 * this.camera[1]\n    if (this.level.meta.special.includes('floating')) tx += -0.25 * this.tick\n\n    ctx.save()\n    ctx.translate(tx, ty)\n\n    if(this.level.meta.background === 'none') {\n      var ptrn = 'black'\n    } else {\n      let bg = new Image\n      bg.src = `background/${this.level.meta.background}.png`\n      var ptrn = ctx.createPattern(bg, BG_REPEATS[this.level.meta.background] || 'repeat')\n    }\n\n    ctx.fillStyle = ptrn\n    ctx.fillRect(-tx, -ty, this.canvas.width, this.canvas.height)\n\n    ctx.restore()\n\n    // scroll\n    ctx.save()\n    ctx.translate(Math.floor(-this.camera[0]), Math.floor(-this.camera[1]))\n\n    const entities = this.entities.sort((a, b) => {\n      if(a.z > b.z) return 1\n      if(a.z < b.z) return -1\n      return 0\n    })\n    entities.filter(e => e.z < 0).forEach(e => e.draw())\n    this.level.draw()\n    entities.filter(e => e.z >= 0).forEach(e => e.draw())\n    this.player.draw()\n\n    /*\n    ctx.fillStyle = 'red'\n    ctx.fillRect(Tile.size, (this.level.h - 1) * Tile.size, (this.level.w - 2) * Tile.size, 1)\n    ctx.fillRect(Tile.size, Tile.size, 1, (this.level.h - 2) * Tile.size)\n    ctx.fillRect((this.level.w - 1) * Tile.size, Tile.size, 1, (this.level.h - 2) * Tile.size)\n    */\n\n    // unscroll\n    ctx.restore()\n\n    // GUI:\n\n    if (this.level.meta.special.includes('world')) {\n      let on = this.player.tileOn\n      let str = this.level.meta.name\n\n      if (on.name === 'Level') {\n        let level = Level.metaOf(this.level.meta.id + '-' + on.levelid)\n\n        if (level) {\n          str += ' . ' + (on.levelid || 0)  + ' ' + level.name\n        } else {\n          str += ' . Level doesn\\'t exist rip'\n        }\n      }\n\n      ctx.drawImage(Text.write(str), 16, 16)\n    }\n\n    ctx.drawImage(Text.write(`\nCursor XY   ${this.cursor.pos.map(p => Math.floor(p)).join(' ')}\nCursor Down ${this.cursor.down.toString()}\nPlayer XY   ${this.player.x + ' ' + this.player.y}\nCamera XY   ${this.camera.map(p => Math.floor(p)).join(' ')}\n    `, 'rgba(0, 0, 0, 0.5)'), 16, 32)\n\n    if (this.level.editorEnabled) {\n      // Various cursor transforms to snap to a tile:\n\n      // Start with the actual position of the cursor.\n      let [cursorX, cursorY] = this.cursor.pos\n\n      // Snap the position to a tile size. This is rounded so that grabbing tiles\n      // on the edge of the screen works better, and it also helps the cursor's\n      // rendered position follow the cursor's actual position a bit better.\n      let roundTileX = cursorX % Tile.size\n      if (roundTileX < Tile.size / 2) cursorX -= roundTileX\n      else cursorX += Tile.size - roundTileX\n\n      let roundTileY = cursorY % Tile.size\n      if (roundTileY < Tile.size / 2) cursorY -= roundTileY\n      else cursorY += Tile.size - roundTileY\n\n      // At ths point we can go on a slight tangent to get the absolute tile\n      // position of the cursor.\n      let cursorTileX = cursorX / Tile.size\n      let cursorTileY = cursorY / Tile.size\n      cursorTileX += Math.floor(this.camera[0] / Tile.size)\n      cursorTileY += Math.floor(this.camera[1] / Tile.size)\n\n      // Move the cursor so that it aligns with the camera's position.\n      cursorX -= this.camera[0] % Tile.size\n      cursorY -= this.camera[1] % Tile.size\n\n      // Center the cursor on the tile.\n      cursorX += Tile.size / 2\n      cursorY += Tile.size / 2\n\n      // Finally draw the cursor.\n      this.cursor.drawUsingCtx(ctx, cursorX, cursorY)\n\n      // If the cursor is down, (attempt to) place a block.\n      if (this.cursor.down && this.tileToPaint) {\n        const tile = new (this.tileToPaint[0])(this, this.tileToPaint[1])\n        const layer = this.tileToPaint[2]\n        const isEntity = this.tileToPaint[3]\n        const pos = [cursorTileX, cursorTileY]\n\n        // Only if the tile where we're placing the new tile is different\n        // should we do anything.\n        if (tile.name !== this.level.tileAt(pos, layer).name && (\n          // If we're an entity, we need to wait until we've moved the\n          // cursor since last time.\n          !arrEqual(this.lastPlaced || [], pos)\n        )) {\n          this.lastPlaced = pos\n\n          if (isEntity) {\n            // We've already placed it. Oops\n            tile.x = pos[0] * Tile.size\n            tile.y = pos[1] * Tile.size\n          } else {\n            // Actually place the tile!\n            this.level.replaceTile(pos, tile, layer)\n          }\n\n          // Air makes a different sound than other tiles.\n          let sound\n          if (tile.name === 'Air') {\n            sound = this.airPlaceSound\n          } else {\n            sound = this.genericTilePlaceSound\n          }\n\n          // Play the decided sound with a random pitch shift for a pleasing\n          // effect.\n          sound.makeNew().then(sound => {\n            sound.rate = 0.9 + Math.random() * 0.2\n            sound.start()\n          })\n\n        }\n      }\n    }\n\n    this.newKeys = {}\n    this.tick++\n  }\n}\n","// @flow\n\n// Super quick sound system that uses the Web Audio API.\n//\n// Basic usage:\n//\n//   const sounds = new SoundManager()\n//   sounds.loadSound('smw_coin').playNew()\n//\n//   const bgm = sounds.loadSound('music/chilly-tropics.mp3')\n//   bgm.loops = true\n//   bgm.playNew()\n//\n//   if (this.bgm) {\n//     this.bgm.stop()\n//   }\n//   this.bgm = sounds.loadSound('music/airship.mp3')\n//   this.bgm.playNew()\n//\nexport default class SoundManager {\n  sounds: Map<string, Sound>\n\n  ctx: AudioContext\n\n  urlTemplate: Function\n\n  constructor() {\n    this.sounds = new Map()\n\n    this.ctx = new AudioContext()\n\n    this.urlTemplate = u => {\n      const ext = u.match(/\\.[^.]*$/)\n      if (ext) {\n        return `sound/${u}`\n      } else {\n        return `sound/${u}.wav`\n      }\n    }\n  }\n\n  getSound(name: string): Sound {\n    if (!this.sounds.has(name)) {\n      const sound = new Sound(this, this.urlTemplate(name))\n      this.sounds.set(name, sound)\n\n      sound.load()\n\n      return sound\n    } else {\n      // @flow ignore\n      return this.sounds.get(name)\n    }\n  }\n}\n\n// A sound container. It may have multiple sounds playing at once.\nexport class Sound {\n  manager: SoundManager\n\n  srcURL: string\n\n  dataBuffer: AudioBuffer\n  dataBufferLoaded: boolean\n\n  loadingPromise: Promise<*>\n\n  loops: boolean\n  volume: number\n\n  sources: Array<SoundSource>\n\n  constructor(manager: SoundManager, srcURL: string) {\n    this.manager = manager\n\n    this.srcURL = srcURL\n\n    this.dataBufferLoaded = false\n\n    this.loops = false\n    this.volume = 1\n\n    this.sources = []\n  }\n\n  load() {\n    // If we're already downloading this sound, no need to download again!\n    if (this.loadingPromise) return this.loadingPromise\n\n    this.loadingPromise = fetch(this.srcURL)\n      .then(response => response.arrayBuffer())\n      .then(buf => this.manager.ctx.decodeAudioData(buf))\n      .then(data => {\n        this.dataBuffer = data\n        this.dataBufferLoaded = true\n      })\n\n    return this.loadingPromise\n  }\n\n  playNew() {\n    this.makeNew().then(sound => {\n      sound.start()\n    })\n  }\n\n  makeNew(): Promise<SoundSource> {\n    if (this.dataBufferLoaded) {\n      const source = new SoundSource(this, this.dataBuffer)\n      this.sources.push(source)\n      return Promise.resolve(source)\n    } else {\n      return this.load().then(() => this.makeNew())\n    }\n  }\n\n  stop() {\n    for (let source of this.sources) {\n      source.stop()\n    }\n\n    this.sources.splice(0, this.sources.length)\n  }\n}\n\n// A single sound source. Only has one sound source, and is used for\n// manipulating that one sound source. Example usage - how to double the\n// volume of *one* sound's output:\n//\n//   const sound = sounds.getSound('click')\n//   sound.makeNew().then(sound => {\n//     sound.volume = 2\n//     sound.start()\n//   })\n//\n// Note if you'd like to set the volume on all sound sources created by\n// default, you can just do this:\n//\n//   const sound = sounds.getSound('click')\n//   sound.volume = 2\n//   sound.playNew()\n//\nexport class SoundSource {\n  manager: SoundManager\n\n  source: AudioBufferSourceNode\n  gainNode: GainNode\n\n  constructor(sound: Sound, buffer: AudioBuffer) {\n    this.manager = sound.manager\n\n    this.source = this.manager.ctx.createBufferSource()\n    this.source.buffer = buffer\n    this.source.loop = sound.loops\n\n    this.gainNode = this.manager.ctx.createGain()\n\n    this.source.connect(this.gainNode)\n    this.gainNode.connect(this.manager.ctx.destination)\n\n    this.volume = sound.volume\n  }\n\n  start() {\n    this.source.start(0)\n  }\n\n  stop() {\n    this.source.stop()\n  }\n\n  set volume(value: number) {\n    this.gainNode.gain.value = value\n  }\n\n  get volume(): number {\n    return this.gainNode.gain.value\n  }\n\n  set rate(value: number) {\n    this.source.playbackRate.value = value\n  }\n\n  get rate(): number {\n    return this.source.playbackRate.value\n  }\n}\n","import { tint } from './util'\n\nexport default Text = {\n  // Writes some text and returns a canvas with the text on it.\n  //\n  // Typically used in combination with ctx.drawImage:\n  //   ctx.drawImage(Text.write('Hello World!'), 0, 0)\n  write: function(str: string = '', color: string = 'black') {\n    let canvas = document.createElement('canvas')\n    canvas.width = Math.max(...str.split('\\n').map(chars => chars.length)) * 8\n    canvas.height = str.split('\\n').length * 8\n    \n    let ctx = canvas.getContext('2d')\n    if (!ctx) throw new TypeError('Failed to get new canvas context.')\n    \n    let img = tint(Text.set, color)\n    \n    let x = 0, y = 0\n    for (let i in str) {\n      let char = str[i]\n      \n      if (char === '\\n') {\n        x = 0\n        y += 8\n      } else {\n        let [dx, dy] = Text.map[char] || [0, 0]\n        \n        ctx.drawImage(img, dx * 8, dy * 8 + 1, 8, 8, x, y, 8, 8)\n        \n        x += 8\n      }\n    }\n    \n    return canvas\n  },\n  \n  set: new Image,\n  \n  map: {\n    'A': [0, 0],\n    'B': [1, 0],\n    'C': [2, 0],\n    'D': [3, 0],\n    'E': [4, 0],\n    'F': [5, 0],\n    'G': [6, 0],\n    'H': [7, 0],\n    'I': [8, 0],\n    'J': [9, 0],\n    'K': [10, 0],\n    'L': [11, 0],\n    'M': [12, 0],\n    'N': [13, 0],\n    'O': [14, 0],\n    'P': [15, 0],\n    'Q': [16, 0],\n    'R': [17, 0],\n    'S': [0, 1],\n    'T': [1, 1],\n    'U': [2, 1],\n    'V': [3, 1],\n    'W': [4, 1],\n    'X': [5, 1],\n    'Y': [6, 1],\n    'Z': [7, 1],\n    \n    'a': [8, 1],\n    'b': [9, 1],\n    'c': [10, 1],\n    'd': [11, 1],\n    'e': [12, 1],\n    'f': [13, 1],\n    'g': [14, 1],\n    'h': [15, 1],\n    'i': [16, 1],\n    'j': [17, 1],\n    'k': [0, 2],\n    'l': [1, 2],\n    'm': [2, 2],\n    'n': [3, 2],\n    'o': [4, 2],\n    'p': [5, 2],\n    'q': [6, 2],\n    'r': [7, 2],\n    's': [8, 2],\n    't': [9, 2],\n    'u': [10, 2],\n    'v': [11, 2],\n    'w': [12, 2],\n    'x': [13, 2],\n    'y': [14, 2],\n    'z': [15, 2],\n    \n    '?': [0, 3],\n    '!': [1, 3],\n    '.': [2, 3],\n    \"'\": [3, 3],\n    '(': [4, 3],\n    ')': [5, 3],\n    '#': [6, 3],\n    ' ': [7, 3],\n    '-': [8, 3],\n    \n    '0': [0, 4],\n    '1': [1, 4],\n    '2': [2, 4],\n    '3': [3, 4],\n    '4': [4, 4],\n    '5': [5, 4],\n    '6': [6, 4],\n    '7': [7, 4],\n    '8': [8, 4],\n    '9': [9, 4],\n  },\n}\n\nText.set.src = 'sprites/text.png'\n","// @flow\n\nimport SLW from './SLW'\nimport { rnd, Empty } from './util'\nimport { Entity } from './Entity'\nimport * as entities from './Entity'\n\nimport type { Position } from './types'\nimport type { Sound } from './SoundManager'\n\nexport default class Tile {\n  game: SLW\n\n  // Human-readable name\n  name: string\n\n  // Absolute [x, y] position in tileset.png\n  texPosition: Position\n\n  // true if objects should collide with this tile\n  solid: boolean\n\n  // If solid is false, should the top be solid anyways?\n  solidTop: boolean\n\n  x: number // static\n  y: number // static\n  layer: number // static\n\n  dx: number\n  dy: number\n\n  exists: boolean\n\n  levelid: ?number // WorldLevelTile only\n\n  constructor(game: SLW, props: Object = {}) {\n    this.game = game\n\n    this.name = props.name || 'Unknown'\n    this.texPosition = props.texPosition\n    this.solid = props.solid || false\n    this.solidTop = props.solidTop || false\n    this.exists = false\n\n    this.dx = 0\n    this.dy = 0\n  }\n\n  static size: number\n\n  // Called when this Tile comes into existence, e.g. the level loads.\n  onCreate() {}\n\n  // Called if and when this Tile is replaced with another.\n  onDestroy() {}\n\n  // Called every frame.\n  onUpdate() {}\n\n  // Called when a nearby block is set:\n  //\n  // -----\n  // -!!!-\n  // -!X!-\n  // -!!!-\n  // -----\n  //\n  // (! is a tile that sends the event, X is a this tile, - is a tile not\n  // sent the event)\n  onNearbyReplace() {}\n\n  // Called if and when this Tile is colliding with an entity.\n  // (Won't work if { solid: true }!)\n  onTouch(by: Entity) {}\n\n  // Same deal, but for when it's being standed on.\n  onStand(by: Entity) {}\n\n  // Air punched, e.g. hitting a question mark block.\n  onAirPunch() {}\n}\n\n/* // TODO convert this\nexport const tilemap: Map <string, Class<Tile>> = new Map([\n  ['=', class GroundTile extends Tile {\n    constructor(game) {\n      super(game, {\n        name: 'Ground',\n        texPosition: [4, 5],\n        solid: true\n      })\n    }\n\n    onCreate() {\n      this.updateTexture()\n    }\n\n    onNearbyReplace() {\n      this.updateTexture()\n    }\n\n    updateTexture() {\n      // we need to look at our adjacient tiles to figure out\n      // how we should be displayed:\n\n      let topTile    = this.game.level.tileAt([this.x, this.y - 1])\n      let bottomTile = this.game.level.tileAt([this.x, this.y + 1])\n      let leftTile   = this.game.level.tileAt([this.x - 1, this.y])\n      let rightTile  = this.game.level.tileAt([this.x + 1, this.y])\n\n      let top    = topTile.name    === this.name\n      let bottom = bottomTile.name === this.name\n      let left   = leftTile.name   === this.name\n      let right  = rightTile.name  === this.name\n\n      let topLeftTile = this.game.level.tileAt([this.x - 1, this.y - 1])\n      let topRightTile = this.game.level.tileAt([this.x + 1, this.y - 1])\n      let bottomLeftTile = this.game.level.tileAt([this.x - 1, this.y + 1])\n      let bottomRightTile = this.game.level.tileAt([this.x + 1, this.y + 1])\n\n      let topLeft = topLeftTile.name === this.name\n      let topRight = topRightTile.name === this.name\n      let bottomLeft = bottomLeftTile.name === this.name\n      let bottomRight = bottomRightTile.name === this.name\n\n      if(top && left && right && bottom) this.texPosition = [1, 6]\n      if(!top && left && right && bottom) this.texPosition = [1, 5]\n      if(!top && !left && right && bottom) this.texPosition = [0, 5]\n      if(!top && left && !right && bottom) this.texPosition = [2, 5]\n      if(top && !left && right && bottom) this.texPosition = [0, 6]\n      if(top && !left && right && !bottom) this.texPosition = [0, 7]\n      if(top && left && right && !bottom) this.texPosition = [1, 7]\n      if(top && left && !right && !bottom) this.texPosition = [2, 7]\n      if(top && left && !right && bottom) this.texPosition = [2, 6]\n\n      if(top && left && right && bottom && !topLeft && !topRight)\n        this.texPosition = [5, 5]\n\n      if(top && left && right && bottom && !topLeft && topRight)\n        this.texPosition = [3, 6]\n\n      if(top && left && right && bottom && topLeft && !topRight)\n        this.texPosition = [4, 6]\n\n      if(top && left && right && bottom && !bottomLeft)\n        this.texPosition = [6, 6]\n\n      if(top && left && right && bottom && !bottomRight)\n        this.texPosition = [5, 6]\n\n      if(!top && left && right && bottom && !bottomRight)\n        this.texPosition = [6, 5]\n\n      if(!top && left && right && bottom && !bottomLeft)\n        this.texPosition = [7, 5]\n\n      if(top && left && right && !bottom && !topLeft && !topRight)\n        this.texPosition = [6, 7]\n\n      if(!top && !left && right && !bottom) this.texPosition = [3, 7]\n      if(left && right && !bottom && !top) this.texPosition = [4, 7]\n      if(left && !right && !bottom && !top) this.texPosition = [5, 7]\n      if(!top && !left && !right && bottom) this.texPosition = [3, 5]\n\n      if(top && !left && !right && bottom) this.texPosition = [7, 6]\n      if(top && !left && !right && !bottom) this.texPosition = [7, 7]\n\n      if(top && left && !right && bottom && !topLeft) this.texPosition = [8, 5]\n\n      // TODO\n    }\n  }],\n\n  ['P', class PipeTile extends Tile {\n    constructor(game) {\n      super(game, {\n        name: 'Pipe',\n        texPosition: [8, 4],\n        solid: true\n      })\n    }\n\n    onCreate() {\n      this.updateTexture()\n    }\n\n    onNearbyReplace() {\n      this.updateTexture()\n    }\n\n    updateTexture() {\n      // we need to look at our adjacient tiles to figure out\n      // how we should be displayed:\n\n      let topTile    = this.game.level.tileAt([this.x, this.y - 1])\n      let bottomTile = this.game.level.tileAt([this.x, this.y + 1])\n      let leftTile   = this.game.level.tileAt([this.x - 1, this.y])\n      let rightTile  = this.game.level.tileAt([this.x + 1, this.y])\n\n      let top    = topTile.name    === this.name\n      let bottom = bottomTile.name === this.name\n                || bottomTile.name === 'Ground'\n      let left   = leftTile.name   === this.name\n      let right  = rightTile.name  === this.name\n\n      let topLeftTile = this.game.level.tileAt([this.x - 1, this.y - 1])\n      let topRightTile = this.game.level.tileAt([this.x + 1, this.y - 1])\n      let bottomLeftTile = this.game.level.tileAt([this.x - 1, this.y + 1])\n      let bottomRightTile = this.game.level.tileAt([this.x + 1, this.y + 1])\n\n      let topLeft = topLeftTile.name === this.name\n      let topRight = topRightTile.name === this.name\n      let bottomLeft = bottomLeftTile.name === this.name\n      let bottomRight = bottomRightTile.name === this.name\n\n      if (!right) this.texPosition[0] = 9\n      if (!bottom) this.texPosition[1] = 4\n      if (!top)    this.texPosition[1] = 2\n      if (top && bottom) this.texPosition[1] = 3\n    }\n  }],\n\n  ['?', class QBlockTile extends Tile {\n    i: number\n\n    punchSound: Sound\n\n    constructor(game) {\n      super(game, {\n        name: '? Block',\n        texPosition: [0, 4],\n        solid: true\n      })\n    }\n\n    onCreate() {\n      this.i = 0\n      this.punchSound = this.game.sounds.getSound('smw_shell_ricochet')\n    }\n\n    onUpdate() {\n      this.i += 0.1\n      if(this.i >= 4) this.i = 0\n      this.texPosition[0] = Math.max(Math.floor(this.i), 0)\n    }\n\n    onAirPunch() {\n      this.punchSound.playNew()\n\n      if (this.game && this.x && this.y) {\n        const tile = new (Tile.get('x'))(this.game)\n        const usedBlock = this.game.level.replaceTile([this.x, this.y], tile)\n        usedBlock.dy = -0.5 * Tile.size\n\n        let [x, y] = this.game.level.getAbsolutePosition([this.x, this.y])\n        let shroom = new Mushroom(this.game, x, 0)\n        shroom.y = y - shroom.h - 1\n        shroom.yv = -1.5\n        this.game.entities.push(shroom)\n      }\n    }\n  }],\n\n  ['x', class UsedBlockTile extends Tile {\n    punchSound: Sound\n\n    constructor(game) {\n      super(game, {\n        name: 'Used Block',\n        texPosition: [4, 4],\n        solid: true,\n      })\n    }\n\n    onCreate() {\n      // TODO 50% volume\n      this.punchSound = this.game.sounds.getSound('smw_shell_ricochet')\n    }\n\n    onAirPunch() {\n      this.punchSound.playNew()\n    }\n\n    onUpdate() {\n      if(this.dy < 0) this.dy = Math.ceil(this.dy * 0.9)\n      else this.dy = 0\n    }\n  }],\n\n  ['*', class InvisibleBlockTile extends Tile {\n    constructor(game) {\n      super(game, {\n        name: 'Invisible Block',\n        texPosition: [0, 0],\n        solid: true\n      })\n    }\n  }],\n\n  ['~', class DonutTile extends Tile {\n    fallVelocity: number\n    fallCountdown: number\n    falling: boolean\n    lastStoodOn: number\n\n    constructor(game) {\n      super(game, {\n        name: 'Donut Block',\n        texPosition: [4, 3],\n        solid: false,\n        solidTop: true\n      })\n\n      this.fallVelocity = 0\n      this.fallCountdown = 40\n      this.falling = false\n      this.lastStoodOn = Date.now()\n    }\n\n    onUpdate() {\n      if (this.falling) {\n        this.dy += this.fallVelocity\n        this.dx = 0\n\n        if (this.fallVelocity < 6) {\n          this.fallVelocity += 0.3\n        }\n      }\n\n      if (this.lastStoodOn - Date.now() < -5 && !this.falling) {\n        // no longer\n        this.texPosition = [4, 3]\n        this.fallCountdown = 40\n        this.dx = 0\n        this.dy = 0\n      }\n\n      if (this.lastStoodOn - Date.now() < -2500 && this.falling) {\n        this.solidTop = true\n        this.dx = 0\n        this.dy = 0\n        this.fallCountdown = 40\n        this.texPosition = [4, 3]\n        this.fallVelocity = 0\n        this.falling = false\n      }\n    }\n\n    onStand() {\n      this.fallCountdown--\n      if (this.fallCountdown <= 0) {\n        this.falling = true\n        this.solidTop = false\n      } else {\n        this.dx = rnd(-2, 2)\n        this.dy = rnd(-2, 2)\n      }\n\n      this.lastStoodOn = Date.now()\n      this.texPosition = [4, 2]\n    }\n  }],\n\n  ['-', class AirTile extends Tile {\n    constructor(game) {\n      super(game, {\n        name: 'Air',\n        texPosition: [0, 0],\n      })\n    }\n\n    onCreate() {\n      let topTile    = this.game.level.tileAt([this.x, this.y - 1])\n      let bottomTile = this.game.level.tileAt([this.x, this.y + 1])\n      let leftTile   = this.game.level.tileAt([this.x - 1, this.y])\n      let rightTile  = this.game.level.tileAt([this.x + 1, this.y])\n\n      let topLeftTile = this.game.level.tileAt([this.x - 1, this.y - 1])\n      let topRightTile = this.game.level.tileAt([this.x + 1, this.y - 1])\n      let bottomLeftTile = this.game.level.tileAt([this.x - 1, this.y + 1])\n      let bottomRightTile = this.game.level.tileAt([this.x + 1, this.y + 1])\n\n      // if below us is the [centre, top] of ground, randomly place foliage\n      if(bottomTile.name === 'Ground' && bottomLeftTile.name === 'Ground' && bottomRightTile.name === 'Ground') {\n        let foliage = rnd(0, 4) // 1 in 5 chance of any at all\n\n        if(foliage === 0) {\n          let what = rnd(0, 4) // random piece\n\n          if(what === 0) {\n            if(topTile.name !== this.name) return\n\n            // tree!\n            this.texPosition = [0, 1]\n            topTile.texPosition = [1, 0]\n\n          } else {\n            this.texPosition = [what, 1]\n          }\n        }\n      }\n    }\n  }],\n\n  ['C', class CloudTile extends Tile {\n    constructor(game) {\n      super(game, {\n        name: 'Cloud',\n        texPosition: [4, 1],\n        solidTop: true,\n      })\n    }\n  }],\n\n  // World tiles ///////////////////////////////////////////////////////////////\n\n  ['W ~', class WorldWaterTile extends Tile {\n    constructor(game) {\n      super(game, {\n        name: 'Water',\n        texPosition: [0, 15],\n      })\n\n      this.solid = true\n    }\n  }],\n\n  ['W  ', class WorldGroundTile extends Tile {\n    constructor(game) {\n      super(game, {\n        name: 'Ground',\n        texPosition: [1, 13],\n      })\n\n      this.solid = true\n    }\n\n    onUpdate() {\n      let topTile    = this.game.level.tileAt([this.x, this.y - 1])\n      let bottomTile = this.game.level.tileAt([this.x, this.y + 1])\n      let leftTile   = this.game.level.tileAt([this.x - 1, this.y])\n      let rightTile  = this.game.level.tileAt([this.x + 1, this.y])\n\n      let top    = topTile.name    !== 'Water'\n      let bottom = bottomTile.name !== 'Water'\n      let left   = leftTile.name   !== 'Water'\n      let right  = rightTile.name  !== 'Water'\n\n      let topLeftTile = this.game.level.tileAt([this.x - 1, this.y - 1])\n      let topRightTile = this.game.level.tileAt([this.x + 1, this.y - 1])\n      let bottomLeftTile = this.game.level.tileAt([this.x - 1, this.y + 1])\n      let bottomRightTile = this.game.level.tileAt([this.x + 1, this.y + 1])\n\n      let topLeft = topLeftTile.name !== 'Water'\n      let topRight = topRightTile.name !== 'Water'\n      let bottomLeft = bottomLeftTile.name !== 'Water'\n      let bottomRight = bottomRightTile.name !== 'Water'\n\n      if(!left && top && right && bottom) this.texPosition = [0, 13]\n      if(left && top && !right && bottom) this.texPosition = [2, 13]\n      if(left && !top && right && bottom) this.texPosition = [1, 12]\n      if(left && top && right && !bottom) this.texPosition = [1, 14]\n\n      if(left && !top && !right && bottom) this.texPosition = [2, 12]\n      if(!left && !top && right && bottom) this.texPosition = [0, 12]\n      if(left && top && !right && !bottom) this.texPosition = [2, 14]\n      if(!left && top && right && !bottom) this.texPosition = [0, 14]\n\n      if(left && top && right && bottom && !topRight) {\n        this.texPosition = [3, 13]\n      }\n\n      if(left && top && right && bottom && !topLeft) {\n        this.texPosition = [4, 13]\n      }\n\n      if(left && top && right && bottom && !bottomRight) {\n        this.texPosition = [3, 12]\n      }\n\n      if(left && top && right && bottom && !bottomLeft) {\n        this.texPosition = [4, 12]\n      }\n    }\n  }],\n\n  ['W @', class WorldPlayerTile extends Tile {\n    constructor(game) {\n      super(game, {\n        name: 'Player',\n        texPosition: [0, 0],\n      })\n    }\n\n    onCreate() {\n      // place the player here\n      const [x, y] = this.game.level.getAbsolutePosition([this.x, this.y])\n      this.game.player.x = x\n      this.game.player.y = y// - this.game.player.h + Tile.size\n\n      // replace this tile with a pipe\n      const tile = new (Tile.get('W P'))(this.game)\n      this.game.level.replaceTile([this.x, this.y], tile)\n    }\n  }],\n\n  ['W :', class WorldFenceTile extends Tile {\n    constructor(game) {\n      super(game, {\n        name: 'Fence',\n        texPosition: [4, 14],\n      })\n\n      this.solid = true\n    }\n  }],\n\n  ['W .', class WorldFlowerTile extends Tile {\n    constructor(game) {\n      super(game, {\n        name: 'Flower',\n        texPosition: [3, 14],\n      })\n\n      this.solid = true\n    }\n  }],\n\n  ['W P', class WorldPipeTile extends Tile {\n    constructor(game) {\n      super(game, {\n        name: 'Pipe',\n        texPosition: [0, 11],\n      })\n    }\n  }],\n\n  ['W H', class WorldHouseTile extends Tile {\n    constructor(game) {\n      super(game, {\n        name: 'House',\n        texPosition: [1, 11],\n      })\n    }\n  }],\n\n  ['W -', class WorldPathTile extends Tile {\n    constructor(game) {\n      super(game, {\n        name: 'Path',\n        texPosition: [1, 9],\n      })\n    }\n\n    onUpdate() {\n      let topTile    = this.game.level.tileAt([this.x, this.y - 1])\n      let bottomTile = this.game.level.tileAt([this.x, this.y + 1])\n      let leftTile   = this.game.level.tileAt([this.x - 1, this.y])\n      let rightTile  = this.game.level.tileAt([this.x + 1, this.y])\n\n      const k = [this.name, 'Level', 'Pipe']\n\n      let top    = k.includes(topTile.name)\n      let bottom = k.includes(bottomTile.name)\n      let left   = k.includes(leftTile.name)\n      let right  = k.includes(rightTile.name)\n\n      if(top && !left && !right && bottom) this.texPosition = [2, 8]\n      if(top && left && !right && !bottom) this.texPosition = [3, 9]\n      if(top && !left && right && bottom) this.texPosition = [2, 10]\n      if(!top && !left && right && bottom) this.texPosition = [3, 8]\n      if(top && !left && right && !bottom) this.texPosition = [1, 8]\n      if(!top && left && !right && bottom) this.texPosition = [1, 10]\n    }\n  }],\n\n  ['W lv', class WorldLevelTile extends Tile {\n    complete: boolean\n\n    constructor(game) {\n      super(game, {\n        name: 'Level',\n        texPosition: [2, 9],\n      })\n\n      this.complete = false\n    }\n\n    onUpdate() {\n      this.texPosition = this.complete ?  [2, 9] : [3, 10]\n    }\n  }],\n\n  ['W 1', class WorldLevel1Tile extends Tile {\n    constructor(game) {\n      super(game, {\n        name: 'Level 1',\n        texPosition: [0, 0],\n      })\n    }\n\n    onCreate() {\n      // replace this tile with a level tile\n      const tile = new (Tile.get('W lv'))(this.game)\n      tile.levelid = 1\n      this.game.level.replaceTile([this.x, this.y], tile)\n    }\n  }],\n\n  ['W 2', class WorldLevel2Tile extends Tile {\n    constructor(game) {\n      super(game, {\n        name: 'Level 2',\n        texPosition: [0, 0],\n      })\n    }\n\n    onCreate() {\n      // replace this tile with a level tile\n      const tile = new (Tile.get('W lv'))(this.game)\n      tile.levelid = 2\n      this.game.level.replaceTile([this.x, this.y], tile)\n    }\n  }],\n\n  ['W 3', class WorldLevel3Tile extends Tile {\n    constructor(game) {\n      super(game, {\n        name: 'Level 3',\n        texPosition: [0, 0],\n      })\n    }\n\n    onCreate() {\n      // replace this tile with a level tile\n      const tile = new (Tile.get('W lv'))(this.game)\n      tile.levelid = 3\n      this.game.level.replaceTile([this.x, this.y], tile)\n    }\n  }],\n\n  ['W 4', class WorldLevel4Tile extends Tile {\n    constructor(game) {\n      super(game, {\n        name: 'Level 4',\n        texPosition: [0, 0],\n      })\n    }\n\n    onCreate() {\n      // replace this tile with a level tile\n      const tile = new (Tile.get('W lv'))(this.game)\n      tile.levelid = 4\n      this.game.level.replaceTile([this.x, this.y], tile)\n    }\n  }],\n\n  ['W 5', class WorldLevel5Tile extends Tile {\n    constructor(game) {\n      super(game, {\n        name: 'Level 5',\n        texPosition: [0, 0],\n      })\n    }\n\n    onCreate() {\n      // replace this tile with a level tile\n      const tile = new (Tile.get('W lv'))(this.game)\n      tile.levelid = 5\n      this.game.level.replaceTile([this.x, this.y], tile)\n    }\n  }],\n\n  ['W 6', class WorldLevel6Tile extends Tile {\n    constructor(game) {\n      super(game, {\n        name: 'Level 6',\n        texPosition: [0, 0],\n      })\n    }\n\n    onCreate() {\n      // replace this tile with a level tile\n      const tile = new (Tile.get('W lv'))(this.game)\n      tile.levelid = 6\n      this.game.level.replaceTile([this.x, this.y], tile)\n    }\n  }],\n\n  ['W 7', class WorldLevel7Tile extends Tile {\n    constructor(game) {\n      super(game, {\n        name: 'Level 7',\n        texPosition: [0, 0],\n      })\n    }\n\n    onCreate() {\n      // replace this tile with a level tile\n      const tile = new (Tile.get('W lv'))(this.game)\n      tile.levelid = 7\n      this.game.level.replaceTile([this.x, this.y], tile)\n    }\n  }],\n\n  ['W 8', class WorldLevel8Tile extends Tile {\n    constructor(game) {\n      super(game, {\n        name: 'Level 8',\n        texPosition: [0, 0],\n      })\n    }\n\n    onCreate() {\n      // replace this tile with a level tile\n      const tile = new (Tile.get('W lv'))(this.game)\n      tile.levelid = 8\n      this.game.level.replaceTile([this.x, this.y], tile)\n    }\n  }],\n])\n*/\n\nTile.size = 16\n\nexport class Air extends Tile {\n  constructor(game: SLW) {\n    super(game, {\n      name: 'Air',\n      texPosition: [0, 0],\n    })\n  }\n\n  onCreate() {\n    this.updateTexture()\n  }\n\n  onNearbyReplace() {\n    this.updateTexture()\n  }\n\n  updateTexture() {\n    let topTile    = this.game.level.tileAt([this.x, this.y - 1])\n    let bottomTile = this.game.level.tileAt([this.x, this.y + 1])\n    let leftTile   = this.game.level.tileAt([this.x - 1, this.y])\n    let rightTile  = this.game.level.tileAt([this.x + 1, this.y])\n\n    let topLeftTile = this.game.level.tileAt([this.x - 1, this.y - 1])\n    let topRightTile = this.game.level.tileAt([this.x + 1, this.y - 1])\n    let bottomLeftTile = this.game.level.tileAt([this.x - 1, this.y + 1])\n    let bottomRightTile = this.game.level.tileAt([this.x + 1, this.y + 1])\n\n    // if below us is the [centre, top] of ground, randomly place foliage\n    if(bottomTile.name === 'Ground' && bottomLeftTile.name === 'Ground' && bottomRightTile.name === 'Ground') {\n      let foliage = rnd(0, 4) // 1 in 5 chance of any at all\n\n      if(foliage === 0) {\n        let what = rnd(0, 4) // random piece\n\n        if(what === 0) {\n          if(topTile.name !== this.name) return\n\n          // tree!\n          this.texPosition = [0, 1]\n          topTile.texPosition = [1, 0]\n\n        } else {\n          this.texPosition = [what, 1]\n        }\n      }\n    }\n  }\n}\n\nexport class QuestionBlock extends Tile {\n  punchSound: Sound\n  output: any\n\n  constructor(game: SLW, opts: Object) {\n    super(game, {\n      name: '? Block',\n      texPosition: [0, 4],\n      solid: true\n    })\n\n    this.output = entities[opts.output]\n  }\n\n  onCreate() {\n    this.punchSound = this.game.sounds.getSound('smw_shell_ricochet')\n  }\n\n  onUpdate() {\n    this.texPosition[0] = Math.floor(this.game.tick / 10) % 4\n  }\n\n  onAirPunch() {\n    this.punchSound.playNew()\n\n    if (this.game && this.x && this.y) {\n      const tile = new UsedBlock(this.game)\n      const usedBlock = this.game.level.replaceTile([this.x, this.y], tile)\n      usedBlock.dy = -0.5 * Tile.size\n\n      if (this.output) {\n        let [x, y] = this.game.level.getAbsolutePosition([this.x, this.y])\n        let out = new (this.output)(this.game, x, 0)\n        out.y = y - out.h - 1\n        out.yv = -1.5\n        this.game.entities.push(out)\n      }\n    }\n  }\n}\n\nexport class UsedBlock extends Tile {\n  punchSound: Sound\n\n  constructor(game: SLW) {\n    super(game, {\n      name: 'Used Block',\n      texPosition: [4, 4],\n      solid: true,\n    })\n  }\n\n  onCreate() {\n    // TODO 50% volume\n    this.punchSound = this.game.sounds.getSound('smw_shell_ricochet')\n  }\n\n  onAirPunch() {\n    this.punchSound.playNew()\n  }\n\n  onUpdate() {\n    if(this.dy < 0) this.dy = Math.ceil(this.dy * 0.9)\n    else this.dy = 0\n  }\n}\n","module.exports = \"{\\n  tiles: [\\n    [\\n      Air\\n    ]\\n\\n    [\\n      QuestionBlock\\n\\n      {\\n        output: Mushroom\\n      }\\n    ]\\n  ]\\n\\n  entities: [\\n    [\\n      Coin\\n    ]\\n\\n    [\\n      Mushroom\\n    ]\\n\\n    [\\n      Sign\\n    ]\\n  ]\\n}\\n\";\n","import SLW from './SLW'\nimport BrowserSLW from './BrowserSLW'\n\nwindow.addEventListener('load', e => {\n  let tileset = new Image\n\n  tileset.onload = () => {\n    const game = new SLW('F-1', tileset)\n    const browser = new BrowserSLW(game)\n\n    // For debugging only\n    window.game = game\n    window.browser = browser\n\n    document.body.appendChild(game.canvas)\n\n    game.tileset = tileset\n    game.canvas.focus()\n\n    let didTick = false\n\n    !(function render() {\n      game.gamepadInput()\n\n      if(document.hasFocus()) { // don't update if we're in devtools\n        // Very deliberate order:\n        game.player.update()\n        game.cameraUpdate()\n        game.level.update()\n        game.entityUpdate()\n\n        game.canvasClear()\n        game.draw()\n      }\n\n      requestAnimationFrame(render)\n    })()\n  }\n\n  tileset.src = 'tileset.png'\n})\n","module.exports = \"{\\n  F: {\\n    id: F\\n    name: Flower Gardens\\n\\n    music: flower-gardens\\n    background: clouds\\n\\n    special: [\\n      world\\n    ]\\n\\n    entities: [\\n      [\\n        HalfwayFlag\\n        2, 2, 1\\n      ]\\n    ]\\n\\n    tiles: [\\n      [\\n        QuestionBlock\\n        1, 2, 0\\n\\n        {\\n          output: Coin\\n        }\\n      ]\\n    ]\\n\\n    width:  100\\n    height: 100\\n  }\\n\\n  F-1: {\\n    world: F\\n    id: 1\\n    name: Garden Plains\\n\\n    music: grassland\\n    background: hills\\n\\n    special: []\\n\\n    entities: [\\n      [\\n        HalfwayFlag\\n        2, 2, 1\\n      ]\\n    ]\\n\\n    tiles: [\\n      [\\n        QuestionBlock\\n        1, 2, 0\\n\\n        {\\n          output: Coin\\n        }\\n      ]\\n    ]\\n\\n    width:  200\\n    height: 32\\n  }\\n}\\n\";\n","// @flow\n// General utility functions.\n\n// Gets the sign of a number, as a number. If the given number is negative,\n// it returns -1, if positive, 1, and if zero, 0.\nexport function sign(n: number): number {\n  if (n > 0) return 1\n  if (n < 0) return -1\n  return 0\n}\n\n// Returns a random integer from `min` through `max`.\nexport function rnd(min: number, max: number): number {\n  return Math.floor(Math.random() * max) + min\n}\n\n// Compares the contents of two arrays.\nexport function arrEqual(arr1: Array<any>, arr2: Array<any>): boolean {\n  if (arr1.length !== arr2.length) {\n    return false\n  }\n\n  for (let i = 0; i < arr1.length; i++) {\n    if (arr1[i] !== arr2[i]) {\n      return false\n    }\n  }\n\n  return true\n}\n\n// Returns an image written over by a colour, taking an operation type and alpha.\n// Default values useful for masking.\nexport function tint(img: Image, colour: string, operation: string = 'source-in', alpha: number = 1): Image {\n  // create hidden canvas (using image dimensions)\n  let canvas = document.createElement('canvas')\n  canvas.width = img.width\n  canvas.height = img.height\n\n  let ctx = canvas.getContext('2d')\n  if (!ctx) throw new TypeError('Failed to get new canvas context.')\n  ctx.drawImage(img, 0, 0)\n\n  // overlay filled rectangle using lighter composition\n  ctx.globalCompositeOperation = operation\n  ctx.globalAlpha = alpha\n  ctx.fillStyle = colour\n  ctx.fillRect(0, 0, canvas.width, canvas.height)\n\n  // return a new image\n  let res = new Image\n  res.src = canvas.toDataURL()\n  return res\n}\n\n// Returns an image, taking a width, height, and optional offset values.\nexport function crop(img: Image, w: number, h: number, ox: number = 0, oy: number = 0): Image {\n  // create hidden canvas (using image dimensions)\n  let canvas = document.createElement('canvas')\n  canvas.width = w\n  canvas.height = h\n\n  let ctx = canvas.getContext('2d')\n  if (!ctx) throw new TypeError('Failed to get new canvas context.')\n\n  // perfrom actual 'crop' operation\n  ctx.drawImage(img, ox, oy, w, h, 0, 0, w, h)\n\n  // return a new image\n  let res = new Image\n  res.src = canvas.toDataURL()\n  return res\n}\n\n// Event controller class.\n//\n// You should NOT use this:\n// * When a subclass would be beter off instead. For example, don't use\n//   an event controller in place of a tile subclass, even though they have\n//   similar feels (\"onCreate\", \"onDelete\", etc). If you're going to have\n//   one specific behavior for an event (e.g. donut tile falling when stepped\n//   on for long enough), use a subclass, not an event controller.\n//\n// You SHOULD use this:\n// * As an interface between completely separate things. Use an event\n//   controller when you expect an event to be watched - for instance, a\n//   level changing, or a player dying.\n//\n// If you're going to use an event controller, store it on the object it's\n// relevant to with the events property. Then you can access it, for example,\n// with game.events.\n//\n// Stick to normal DOM-like event names, e.g. created, beforeunload. I know\n// it doesn't look very good but that's what's been used for event names for\n// as long as I know (in node.js too, I think!) so that's what's going to be\n// used here as well.\n//\n// Get tenses in names right. If the event is triggered after something\n// happens, the event name should be past tense - i.e. 'created'. If the event\n// is triggered before something happens, the event name should start with\n// 'before' - i.e. 'beforelevelchange'.\n//\n// In the future there's a fair chance I'll make this work with promises, so\n// that transitions might be able to be done a bit better... for example, if\n// things are supposed to happen before a level is entered, such as a\n// transition-out effect, they can be finished *before* the real internal\n// changes happen (that is, a new level is loaded).\n//\nexport class EventController {\n  listeners: Map<string, Array<Function>>\n\n  constructor() {\n    this.listeners = new Map()\n  }\n\n  // Register an event. Adding event listeners and dispatching events will\n  // throw an error if you try to do so without a registered event name -\n  // this is mostly to prevent entering the wrong event name!\n  registerEvent(eventName: string) {\n    this.listeners.set(eventName, [])\n  }\n\n  // Add an event listener. When the given event name is dispatched, the\n  // callback function will be called. The callback function may be called\n  // multiple times - always once every time the event is dispatched.\n  addEventListener(eventName: string, callback: Function) {\n    if (this.listeners.has(eventName)) {\n      const eventListeners: ?Array<Function> = this.listeners.get(eventName)\n      if (eventListeners) {\n        eventListeners.push(callback)\n      }\n    } else {\n      throw new Error('Invalid event name')\n    }\n  }\n\n  // Dispatch an event. That means calling every listener with that name. A\n  // data object argument can be passed to give data to the functions.\n  dispatchEvent(eventName: string, data: Object = {}) {\n    if (this.listeners.has(eventName)) {\n      const eventListeners: ?Array<Function> = this.listeners.get(eventName)\n      if (eventListeners) {\n        for (let callback of eventListeners) {\n          callback(data)\n        }\n      }\n    } else {\n      throw new Error('Invalid event name')\n    }\n  }\n}\n\n// is [z], [space], or any up-key down?\nexport function isJump(keys: Object): boolean {\n  return keys[90] || keys[32] || isUp(keys)\n}\n\n// is [z], [space], or [enter] down?\nexport function isYes(keys: Object): boolean {\n  return keys[32] || keys[13] || keys[90]\n}\n\n// is [a] or [left arrow] down?\nexport function isLeft(keys: Object): boolean {\n  return keys[65] || keys[37]\n}\n\n// is [d] or [right arrow] down?\nexport function isRight(keys: Object): boolean {\n  return keys[68] || keys[39]\n}\n\n// is [w] or [up arrow] down?\nexport function isUp(keys: Object): boolean {\n  return keys[87] || keys[38]\n}\n\n// is [s] or [down arrow] down?\nexport function isDown(keys: Object): boolean {\n  return keys[83] || keys[40]\n}\n\nconst hjson = require('hjson')\nexport const levels = hjson.parse(require('./levels.hjson'))\nexport const editor = hjson.parse(require('./editor.hjson'))\n\n// Empty class used as null.\nexport class Empty {\n  constructor() {}\n}\n"]}